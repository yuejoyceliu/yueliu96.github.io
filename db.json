{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/images/1.jpg","path":"images/1.jpg","modified":1,"renderable":0},{"_id":"source/images/2.jpg","path":"images/2.jpg","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"3305519480e87918ce500bbba9a6f5d0054d11ad","modified":1547184645571},{"_id":"source/CNAME","hash":"34b0caf4553966b44e77c33fc9be806570c103a8","modified":1546638009307},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1547013116742},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1547013116742},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1547013116756},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1547013116749},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1547013116631},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1547013116741},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1547013116741},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1547013116756},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1547013116781},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1547013116594},{"_id":"themes/next/README.cn.md","hash":"2c766b3369ed477bce134a5450dab45bef161504","modified":1547013116593},{"_id":"themes/next/README.md","hash":"8ce60ce578963eb4e1eb5e33e1efc2fc4779af9c","modified":1547013116749},{"_id":"themes/next/_config.yml","hash":"662d037c053f70762589353133039afb51a5b557","modified":1547140357978},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1547013116742},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1547013116630},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1547013116749},{"_id":"source/_posts/.DS_Store","hash":"cfe6d59c081022ec616a04cbfab5b22fffa1d722","modified":1547184589400},{"_id":"source/_posts/Gas-Phase Fragmentation of Oligonucleotide Ions.md","hash":"73cbe2066c0da564e20ff2d50ac7a598b720ed17","modified":1547184450130},{"_id":"source/_posts/Gaussian-Troubleshooting.md","hash":"465443872d440f7cffda53278ce172c3e40ad1fd","modified":1548390544736},{"_id":"source/_posts/Gaussian-on-Hyak.md","hash":"c46833569fcafa8b67ddf3b8585c5e25b7c2bb5e","modified":1548225135633},{"_id":"source/_posts/Hyak-Tips.md","hash":"7a0d9d60a6f0b046c51c8ac8236179ea36cef78e","modified":1548225207916},{"_id":"source/_posts/Mopac-with-Cuby4.md","hash":"34c79cab2a7355979ee180336fd7411533a04379","modified":1547537320096},{"_id":"source/_posts/Newton-X-on-Hyak.md","hash":"1e44a956c7220253fefaf0d90f6a73d05c07b951","modified":1548456557749},{"_id":"source/_posts/OligoNucleotide-Papers.md","hash":"60f2ce6444dcd805fd17357d08a4f8adee4ec94e","modified":1547536876045},{"_id":"source/_posts/OligoReading-DNA-Damage.md","hash":"c8b76f5a59c9dd76870e852c8674f88670a33728","modified":1547536854111},{"_id":"source/_posts/Out-of-Field-Proposal.md","hash":"4149f7b1035d285549249e05c492f50b5494de40","modified":1548442830247},{"_id":"source/_posts/Scientific-Computing.md","hash":"acfb4522e5a5f16bc8f34062caf9790d921386c9","modified":1547538726526},{"_id":"source/categories/index.md","hash":"e990de558ab07030e63299e19b6890b46ebea2cc","modified":1546638009313},{"_id":"source/images/1.jpg","hash":"2fdff1a3c058e5372b6d203c064f000ba95fb4bd","modified":1546638009308},{"_id":"source/images/2.jpg","hash":"e33b4160050646dfca5df19826522c652ebaa330","modified":1546638009307},{"_id":"source/tags/index.md","hash":"7a3dbc2db7783440e1e1265294488c986083ba2f","modified":1546638009312},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1547013116745},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1547013116743},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1547013116746},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1547013116748},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1547013116745},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1547013116746},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1547013116747},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1547013116744},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1547013116746},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1547013116744},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1547013116745},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1547013116747},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1547013116748},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1547013116744},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1547013116747},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1547013116748},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1547013116598},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1547013116613},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1547013116597},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1547013116604},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1547013116604},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1547013116603},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1547013116596},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1547013116595},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1547013116751},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1547013116751},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1547013116594},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1547013116595},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1547013116594},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547013116741},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1547013116597},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1547013116596},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1547013116630},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1547013116630},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1547013116629},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1547013116629},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1547013116629},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1547013116628},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1547013116608},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1547013116608},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1547013116609},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1547013116609},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1547013116609},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1547013116605},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1547013116608},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1547013116601},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1547013116602},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1547013116602},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1547013116621},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1547013116618},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1547013116618},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1547013116622},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1547013116623},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1547013116617},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1547013116618},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1547013116752},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1547013116753},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1547013116754},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1547013116753},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1547013116754},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1547013116754},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1547013116753},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1547013116752},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1547013116752},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1547013116665},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1547013116682},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1547013116685},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1547013116679},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1547013116688},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1547013116683},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1547013116679},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1547013116679},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1547013116687},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1547013116682},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1547013116687},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1547013116686},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1547013116686},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1547013116684},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1547013116688},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1547013116678},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1547013116684},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1547013116686},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1547013116681},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547013116600},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547013116601},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547013116676},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547013116677},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547013116675},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547013116664},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547013116663},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1547013116607},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1547013116607},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1547013116606},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1547013116605},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1547013116606},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1547013116612},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1547013116610},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1547013116611},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1547013116611},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1547013116600},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1547013116601},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1547013116603},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1547013116626},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1547013116625},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1547013116626},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1547013116624},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1547013116627},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1547013116625},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1547013116626},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1547013116624},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1547013116625},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1547013116627},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1547013116625},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1547013116627},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1547013116623},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1547013116617},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1547013116615},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1547013116616},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1547013116614},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1547013116615},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1547013116616},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1547013116617},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1547013116615},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1547013116616},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1547013116619},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1547013116620},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1547013116619},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1547013116622},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1547013116632},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1547013116676},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1547013116677},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1547013116676},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1547013116663},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1547013116663},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1547013116664},{"_id":"themes/next/source/css/_variables/base.styl","hash":"4d43faad01147b4a7d874698cd4029a973bd9144","modified":1547138691638},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1547013116694},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1547013116692},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1547013116690},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1547013116694},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1547013116690},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1547013116692},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1547013116693},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1547013116692},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1547013116691},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1547013116691},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1547013116693},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1547013116702},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1547013116718},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1547013116702},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1547013116709},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1547013116710},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1547013116697},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1547013116695},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1547013116696},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1547013116696},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1547013116736},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1547013116736},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1547013116734},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1547013116736},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1547013116735},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1547013116711},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1547013116728},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1547013116728},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1547013116727},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1547013116727},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1547013116728},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1547013116726},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1547013116700},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1547013116700},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1547013116699},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1547013116714},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1547013116713},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1547013116715},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1547013116713},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1547013116715},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1547013116715},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1547013116716},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1547013116712},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1547013116714},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1547013116713},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1547013116712},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1547013116716},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1547013116714},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1547013116712},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1547013116723},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1547013116724},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1547013116723},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1547013116721},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1547013116720},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1547013116720},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1547013116720},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1547013116721},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1547013116710},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1547013116621},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1547013116621},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1547013116647},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1547013116653},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1547013116648},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1547013116649},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1547013116636},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1547013116648},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1547013116653},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1547013116662},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1547013116634},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1547013116633},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1547013116635},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1547013116634},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1547013116635},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1547013116634},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1547013116668},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1547013116672},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1547013116674},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1547013116675},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1547013116675},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1547013116673},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1547013116674},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1547013116672},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1547013116667},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1547013116667},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1547013116668},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1547013116667},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1547013116667},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1547013116670},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1547013116669},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1547013116671},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1547013116669},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1547013116670},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1547013116670},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1547013116690},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1547013116733},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1547013116729},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1547013116706},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1547013116706},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1547013116706},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1547013116705},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1547013116704},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1547013116705},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1547013116704},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1547013116705},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1547013116703},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1547013116698},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1547013116698},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1547013116734},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1547013116735},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1547013116735},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1547013116726},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1547013116725},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1547013116730},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1547013116730},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1547013116740},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1547013116739},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1547013116722},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1547013116640},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1547013116661},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1547013116662},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1547013116660},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1547013116660},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1547013116661},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1547013116647},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1547013116646},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1547013116647},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1547013116659},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1547013116659},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1547013116659},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1547013116658},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1547013116658},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1547013116644},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1547013116645},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1547013116644},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1547013116645},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1547013116646},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1547013116643},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1547013116642},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1547013116642},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1547013116641},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1547013116641},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1547013116643},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1547013116643},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1547013116643},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1547013116645},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1547013116641},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1547013116636},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1547013116638},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1547013116637},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1547013116637},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1547013116639},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1547013116637},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1547013116638},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1547013116640},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1547013116639},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1547013116638},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1547013116652},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1547013116650},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1547013116649},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1547013116652},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1547013116651},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1547013116651},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1547013116652},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1547013116650},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1547013116650},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1547013116656},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1547013116654},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1547013116654},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1547013116655},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1547013116654},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1547013116657},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1547013116655},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1547013116656},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1547013116656},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1547013116655},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1547013116673},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1547013116672},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1547013116666},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1547013116731},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1547013116731},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1547013116732},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1547013116732},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1547013116732},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1547013116707},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1547013116709},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1547013116709},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1547013116708},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1547013116708},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1547013116708},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1547013116738},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1547013116739},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1547013116740},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1547013116701},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1547013116737},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1547013116724}],"Category":[{"name":"OligoReading","_id":"cjrcn2vly0003ua5swm5cnv35"},{"name":"Turecek Lab Tutorial","_id":"cjrcn2vm30008ua5sybyxz56x"},{"name":"NoteBook","_id":"cjrcn2vs4000wua5svgpi0vja"}],"Data":[],"Page":[{"title":"categories","date":"2018-12-18T07:03:54.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-12-17 23:03:54\ntype: \"categories\"\n---\n","updated":"2019-01-04T21:40:09.313Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjrcn2vlw0001ua5syardicif","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2018-12-18T07:05:29.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-12-17 23:05:29\ntype: \"tags\"\n---\n","updated":"2019-01-04T21:40:09.312Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjrcn2vrv000tua5s1h4usvlu","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Gas-Phase Framentation of Oligo Ions","date":"2019-01-09T20:00:27.000Z","_content":" [Gas-Phase Fragmentation of Oligonucleotide Ions](https://www.sciencedirect.com/science/article/pii/S1387380604003264?via%3Dihub)\n\n- The preferred dissociation channels for a given ion are a function of the ion type, the structure of the molecule, the internal energy distribution of the ion and the time-frame over which the fragmentation reactions can evolve\n- McLuckey's nomenclature for backbone cleavages (a/w,b/x,c/y,d/z, 5'-frag:a,b,c,d; 3'-frag: w,x,y,z)\n\n*MALDI and mechanism not included.*\n\n## 1 hetero-dinucleotide FAB CID\n\n### 1.1 $(M+H)^+$\n\n- protonated 3'-(B$_2$+2H)$^+$ > 5'-(B$_1$+2H)$^+$\n  - except 3'-T; T: low proton affinity\n  - interaction between P and the 3'-B, incuding a partial positive charge on 3'-B $\\rightarrow$ enhace glycosidic bond cleavage\n- neutral 5'-(B$_1$+H) > neutral 3'-(B$_2$+H)\n  - loss of 3'-base only in dAG and dAC\n  - 4 bases similiar preference\n- $w_1>d_1$\n  - $(w_1+H_2)^+$ only not seen in dTG and dTC, where $(d_1+H_2)^+$ is not produced\n\n### 1.2 $(M-H)^-$\n\n- 5'-B$_1^-$>3'-B$_2^-$\n- 5'-(B$_1$+H) > 3'-(B$_2$+H) except dGA and dGT\n- $w_1^->d_1^-$\n\n### trend\n- basicity: $C^->T^-$, $A^->G^-$\n- 3'-terminus base is stabilized through H-bond interaction with the P: \n  - strength: G>T>C>A\n- acidities: A>T>G>C\n- proton affinity: cytidine(C+S), G+S, A+S > C > G > A > T+S > T\n\n## 2 ESI mass spectrometry\n\n### 2.1 Negative mass spec\n\n#### 2.1.1 mononucleotide\n\n- loss of B is facilitated by the presence of 3'-P rather than 5'-P\n- 3'-P: lower excitation threshold and freater fragmentation effiiciency\n- 2-B-5'-P\n  - water loss following loss of B\n  - neutral base loss dAp, dTp > dCp > dGp, and pdA, pdT >pdC >>pdG\n  - H-bond stablize G\n\n#### 2.1.2 deoxyribodinucleotide\n\n- Comlementary ions\n\n$$M^{n-} \\rightarrow m_a^{x-} + m_b^{y-}\\\\\n\\frac {|(M/n)-(m_a/x)|}{|(M/n)-(m_b/y)|}=\\frac {y}{x}$$\n\n- 5'-B > 3'-B\n- 5' loss for a given 3'-B: \n  - low charge parent ion: no obvious preference\n  - high charge parent ion : A$^-$>G$^-$>T$^-$>C$^-$ or A$^-$>T$^-$>G$^-$,C$^-$\n- 3'-B affects 5'-B loss: 3'-B=A>C>T>G\n- subsequent decomposition: w and (a-B)\n- loss of PO$_3^-$ from 5'-P ions (ex: w ions $\\rightarrow$ y) can compete effectively with loss of a base. Lower charge generally favors more greatly the loss of PO$_3^-$ group\n- Multiple base loss increses with increasing activation and incresing charge state\n\n#### 2.1.3 trinucleotide\n\n- 5'-B$_1$> B$_2$, B$_3$: A>T>G>C\n- loss of 5'-B depends on 3'-B=A>T>G>C\n- subsequent: w and (a-B)\n- c, x, y, z types also observed\n\n#### 2.1.4 tetranucleotide\n\n- (M-H)$^-$: 3'-B more readily than 5'-B loss\n- (M-2H)$^{2-}$\n  - same general trend as trinucleotide \n  - y more abundant\n\n#### 2.1.5 single-base nucleotide (3- to 8-mers)\n\n- nucleobase identity\n  - poly-T: loss of 5'-T\n  - poly-G: loss of 5'-G inhibited\n  - the ease of fragmetation: poly-A>>T$\\approx$C>G\n    - weak N-glycosidic bond streng accssoced with A\n    - stable G due to H-bonding\n- odd- and even-electron parent anions:\n  - odd: w no M-B $\\rightarrow$ backbone cleavage without loss of B\n  - even: first loss a base, followed by backbone cleavage\n\n#### 2.1.6 other mass analyzers\n\n- triple quadrupoles (TQIT):\n  - low energy process $\\rightarrow$ sensitive\n  - more extensive structural info\n- quadrupole ion traps (QIT):\n  - beam-type collisional activation experiment\n  - multiple competitive dissociation reactions can happen\n- base loss on CID in triple quadrupoles is much less dependent on the identity of the base than in quadrupole ion traps\n- base loss not necesssary for backbone cleavages for a modified tetraribonucleotide\n\n#### 2.1.7 oligonucleotides with a modified nuclebase: CACGXG\n\n- loss of all non-terminal bases in conjuction with cleavage of their respective 3' C-O bonds\n- more electron withdrawing of X, more facile of the loss of B$^-$\n- more electron withdrawing of product ions, more likely to further fragemntation\n\n#### 2.1.8 large DNA anions: 50- to 108mers\n\n- predominant dissociation chanels depend on DNA molecule itself\n- base loss: AH>GH, CH>>TH\n\n#### 2.1.9 BIRD-FT-MS pm 7-mers\n\n- all backbone cleavages are preceded by base loss\n- prefered cleavage sites depends on the internal energy of the precursor ions\n  - effective T>540K: cleavage at C and G residues\n  - effective T<475K: dissociation at A residues dominates\n\n#### 2.1.10 DNA duplex ions\n\n- noncovalent dissociation of the complex into single strands\n- covalent fragmentation\n  - predominant channel: neutral base loss\n  - base loss initiated backbone fragmentation\n\n#### 2.1.11 RNA\n\n- base loss less important\n- loss pf a neutral or negatively charged B is the low-energy dissociation process\n- 5'-B prefer: C>>T>U\n- backbone fragmentation of RNA is decoupled from base loss\n- c/y ions in major\n\n### 2.2 Positive ESI\n\n#### 2.2.1 dinucleotide $(M+H)^+$\n\n- 3'-$BH_2^+$ loss > 5', except 3'-T\n\n#### 2.2.2 all trimers and 16 mixed-base tetramers $(M+H)^+$ in QIT\n\n- initial step:  neutral base loss\n  - loss depends on PA: C $\\approx$ G>A>>T\n  - positon: 5'>3'>internal\n- cleavage of 3'C-O phosphodiester bond $\\rightarrow$ w and (a-B)\n- dTTT\n  - protonaed at phosphat oxygen\n  - $z_2^+$ ion (also occur as a 2nd process in a few cases when 5'-B=C/G/A)\n\n#### 2.2.3 up to 10-mer in TQIT\n\n- charged B loss followed by w/(a-B)\n  - C>G>A>>T\n  - 3'>5'>internal\n  - agree with dimers, but trimers\n- poly-T: x-2H and z-2H\n\n#### 2.2.4 EBE-TOF MS\n\n- $BH_2^+$ loss agree with PA\n- charge of the precursor affects the abundance of ions from the bases more than position of the base\n- loss of T as an anion possible for $(M-2H)^{2-}$\n\n#### 2.2.5 ECD and IRMPD of doubly protonated\n\n- ECD\n  - polydG: radical w/d \"sequence\". no even-e a/z ions\n  - polydC: even-e w/d ions, a/z ions in most\n  - polydA: even-e w/d ions, little fragemntation than C/G\n  - polydT: poor ionization, low PA\n  - dGCATGC: even-e d-ion and a $z^\\cdot$-type\n- IRMPD\n  - similiar to CID: B, w/(a-B)\n  - more sequence info than ECD\n\n","source":"_posts/Gas-Phase Fragmentation of Oligonucleotide Ions.md","raw":"---\ntitle: Gas-Phase Framentation of Oligo Ions\ndate: 2019-01-09 12:00:27\ntags:\n- oligo\ncategories:\n- OligoReading\n---\n [Gas-Phase Fragmentation of Oligonucleotide Ions](https://www.sciencedirect.com/science/article/pii/S1387380604003264?via%3Dihub)\n\n- The preferred dissociation channels for a given ion are a function of the ion type, the structure of the molecule, the internal energy distribution of the ion and the time-frame over which the fragmentation reactions can evolve\n- McLuckey's nomenclature for backbone cleavages (a/w,b/x,c/y,d/z, 5'-frag:a,b,c,d; 3'-frag: w,x,y,z)\n\n*MALDI and mechanism not included.*\n\n## 1 hetero-dinucleotide FAB CID\n\n### 1.1 $(M+H)^+$\n\n- protonated 3'-(B$_2$+2H)$^+$ > 5'-(B$_1$+2H)$^+$\n  - except 3'-T; T: low proton affinity\n  - interaction between P and the 3'-B, incuding a partial positive charge on 3'-B $\\rightarrow$ enhace glycosidic bond cleavage\n- neutral 5'-(B$_1$+H) > neutral 3'-(B$_2$+H)\n  - loss of 3'-base only in dAG and dAC\n  - 4 bases similiar preference\n- $w_1>d_1$\n  - $(w_1+H_2)^+$ only not seen in dTG and dTC, where $(d_1+H_2)^+$ is not produced\n\n### 1.2 $(M-H)^-$\n\n- 5'-B$_1^-$>3'-B$_2^-$\n- 5'-(B$_1$+H) > 3'-(B$_2$+H) except dGA and dGT\n- $w_1^->d_1^-$\n\n### trend\n- basicity: $C^->T^-$, $A^->G^-$\n- 3'-terminus base is stabilized through H-bond interaction with the P: \n  - strength: G>T>C>A\n- acidities: A>T>G>C\n- proton affinity: cytidine(C+S), G+S, A+S > C > G > A > T+S > T\n\n## 2 ESI mass spectrometry\n\n### 2.1 Negative mass spec\n\n#### 2.1.1 mononucleotide\n\n- loss of B is facilitated by the presence of 3'-P rather than 5'-P\n- 3'-P: lower excitation threshold and freater fragmentation effiiciency\n- 2-B-5'-P\n  - water loss following loss of B\n  - neutral base loss dAp, dTp > dCp > dGp, and pdA, pdT >pdC >>pdG\n  - H-bond stablize G\n\n#### 2.1.2 deoxyribodinucleotide\n\n- Comlementary ions\n\n$$M^{n-} \\rightarrow m_a^{x-} + m_b^{y-}\\\\\n\\frac {|(M/n)-(m_a/x)|}{|(M/n)-(m_b/y)|}=\\frac {y}{x}$$\n\n- 5'-B > 3'-B\n- 5' loss for a given 3'-B: \n  - low charge parent ion: no obvious preference\n  - high charge parent ion : A$^-$>G$^-$>T$^-$>C$^-$ or A$^-$>T$^-$>G$^-$,C$^-$\n- 3'-B affects 5'-B loss: 3'-B=A>C>T>G\n- subsequent decomposition: w and (a-B)\n- loss of PO$_3^-$ from 5'-P ions (ex: w ions $\\rightarrow$ y) can compete effectively with loss of a base. Lower charge generally favors more greatly the loss of PO$_3^-$ group\n- Multiple base loss increses with increasing activation and incresing charge state\n\n#### 2.1.3 trinucleotide\n\n- 5'-B$_1$> B$_2$, B$_3$: A>T>G>C\n- loss of 5'-B depends on 3'-B=A>T>G>C\n- subsequent: w and (a-B)\n- c, x, y, z types also observed\n\n#### 2.1.4 tetranucleotide\n\n- (M-H)$^-$: 3'-B more readily than 5'-B loss\n- (M-2H)$^{2-}$\n  - same general trend as trinucleotide \n  - y more abundant\n\n#### 2.1.5 single-base nucleotide (3- to 8-mers)\n\n- nucleobase identity\n  - poly-T: loss of 5'-T\n  - poly-G: loss of 5'-G inhibited\n  - the ease of fragmetation: poly-A>>T$\\approx$C>G\n    - weak N-glycosidic bond streng accssoced with A\n    - stable G due to H-bonding\n- odd- and even-electron parent anions:\n  - odd: w no M-B $\\rightarrow$ backbone cleavage without loss of B\n  - even: first loss a base, followed by backbone cleavage\n\n#### 2.1.6 other mass analyzers\n\n- triple quadrupoles (TQIT):\n  - low energy process $\\rightarrow$ sensitive\n  - more extensive structural info\n- quadrupole ion traps (QIT):\n  - beam-type collisional activation experiment\n  - multiple competitive dissociation reactions can happen\n- base loss on CID in triple quadrupoles is much less dependent on the identity of the base than in quadrupole ion traps\n- base loss not necesssary for backbone cleavages for a modified tetraribonucleotide\n\n#### 2.1.7 oligonucleotides with a modified nuclebase: CACGXG\n\n- loss of all non-terminal bases in conjuction with cleavage of their respective 3' C-O bonds\n- more electron withdrawing of X, more facile of the loss of B$^-$\n- more electron withdrawing of product ions, more likely to further fragemntation\n\n#### 2.1.8 large DNA anions: 50- to 108mers\n\n- predominant dissociation chanels depend on DNA molecule itself\n- base loss: AH>GH, CH>>TH\n\n#### 2.1.9 BIRD-FT-MS pm 7-mers\n\n- all backbone cleavages are preceded by base loss\n- prefered cleavage sites depends on the internal energy of the precursor ions\n  - effective T>540K: cleavage at C and G residues\n  - effective T<475K: dissociation at A residues dominates\n\n#### 2.1.10 DNA duplex ions\n\n- noncovalent dissociation of the complex into single strands\n- covalent fragmentation\n  - predominant channel: neutral base loss\n  - base loss initiated backbone fragmentation\n\n#### 2.1.11 RNA\n\n- base loss less important\n- loss pf a neutral or negatively charged B is the low-energy dissociation process\n- 5'-B prefer: C>>T>U\n- backbone fragmentation of RNA is decoupled from base loss\n- c/y ions in major\n\n### 2.2 Positive ESI\n\n#### 2.2.1 dinucleotide $(M+H)^+$\n\n- 3'-$BH_2^+$ loss > 5', except 3'-T\n\n#### 2.2.2 all trimers and 16 mixed-base tetramers $(M+H)^+$ in QIT\n\n- initial step:  neutral base loss\n  - loss depends on PA: C $\\approx$ G>A>>T\n  - positon: 5'>3'>internal\n- cleavage of 3'C-O phosphodiester bond $\\rightarrow$ w and (a-B)\n- dTTT\n  - protonaed at phosphat oxygen\n  - $z_2^+$ ion (also occur as a 2nd process in a few cases when 5'-B=C/G/A)\n\n#### 2.2.3 up to 10-mer in TQIT\n\n- charged B loss followed by w/(a-B)\n  - C>G>A>>T\n  - 3'>5'>internal\n  - agree with dimers, but trimers\n- poly-T: x-2H and z-2H\n\n#### 2.2.4 EBE-TOF MS\n\n- $BH_2^+$ loss agree with PA\n- charge of the precursor affects the abundance of ions from the bases more than position of the base\n- loss of T as an anion possible for $(M-2H)^{2-}$\n\n#### 2.2.5 ECD and IRMPD of doubly protonated\n\n- ECD\n  - polydG: radical w/d \"sequence\". no even-e a/z ions\n  - polydC: even-e w/d ions, a/z ions in most\n  - polydA: even-e w/d ions, little fragemntation than C/G\n  - polydT: poor ionization, low PA\n  - dGCATGC: even-e d-ion and a $z^\\cdot$-type\n- IRMPD\n  - similiar to CID: B, w/(a-B)\n  - more sequence info than ECD\n\n","slug":"Gas-Phase Fragmentation of Oligonucleotide Ions","published":1,"updated":"2019-01-11T05:27:30.130Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrcn2vlr0000ua5s3nkxee2j","content":"<p> <a href=\"https://www.sciencedirect.com/science/article/pii/S1387380604003264?via%3Dihub\" target=\"_blank\" rel=\"noopener\">Gas-Phase Fragmentation of Oligonucleotide Ions</a></p>\n<ul>\n<li>The preferred dissociation channels for a given ion are a function of the ion type, the structure of the molecule, the internal energy distribution of the ion and the time-frame over which the fragmentation reactions can evolve</li>\n<li>McLuckey’s nomenclature for backbone cleavages (a/w,b/x,c/y,d/z, 5’-frag:a,b,c,d; 3’-frag: w,x,y,z)</li>\n</ul>\n<p><em>MALDI and mechanism not included.</em></p>\n<h2 id=\"1-hetero-dinucleotide-FAB-CID\"><a href=\"#1-hetero-dinucleotide-FAB-CID\" class=\"headerlink\" title=\"1 hetero-dinucleotide FAB CID\"></a>1 hetero-dinucleotide FAB CID</h2><h3 id=\"1-1-M-H\"><a href=\"#1-1-M-H\" class=\"headerlink\" title=\"1.1 $(M+H)^+$\"></a>1.1 $(M+H)^+$</h3><ul>\n<li>protonated 3’-(B$_2$+2H)$^+$ &gt; 5’-(B$_1$+2H)$^+$<ul>\n<li>except 3’-T; T: low proton affinity</li>\n<li>interaction between P and the 3’-B, incuding a partial positive charge on 3’-B $\\rightarrow$ enhace glycosidic bond cleavage</li>\n</ul>\n</li>\n<li>neutral 5’-(B$_1$+H) &gt; neutral 3’-(B$_2$+H)<ul>\n<li>loss of 3’-base only in dAG and dAC</li>\n<li>4 bases similiar preference</li>\n</ul>\n</li>\n<li>$w_1&gt;d_1$<ul>\n<li>$(w_1+H_2)^+$ only not seen in dTG and dTC, where $(d_1+H_2)^+$ is not produced</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"1-2-M-H\"><a href=\"#1-2-M-H\" class=\"headerlink\" title=\"1.2 $(M-H)^-$\"></a>1.2 $(M-H)^-$</h3><ul>\n<li>5’-B$_1^-$&gt;3’-B$_2^-$</li>\n<li>5’-(B$_1$+H) &gt; 3’-(B$_2$+H) except dGA and dGT</li>\n<li>$w_1^-&gt;d_1^-$</li>\n</ul>\n<h3 id=\"trend\"><a href=\"#trend\" class=\"headerlink\" title=\"trend\"></a>trend</h3><ul>\n<li>basicity: $C^-&gt;T^-$, $A^-&gt;G^-$</li>\n<li>3’-terminus base is stabilized through H-bond interaction with the P: <ul>\n<li>strength: G&gt;T&gt;C&gt;A</li>\n</ul>\n</li>\n<li>acidities: A&gt;T&gt;G&gt;C</li>\n<li>proton affinity: cytidine(C+S), G+S, A+S &gt; C &gt; G &gt; A &gt; T+S &gt; T</li>\n</ul>\n<h2 id=\"2-ESI-mass-spectrometry\"><a href=\"#2-ESI-mass-spectrometry\" class=\"headerlink\" title=\"2 ESI mass spectrometry\"></a>2 ESI mass spectrometry</h2><h3 id=\"2-1-Negative-mass-spec\"><a href=\"#2-1-Negative-mass-spec\" class=\"headerlink\" title=\"2.1 Negative mass spec\"></a>2.1 Negative mass spec</h3><h4 id=\"2-1-1-mononucleotide\"><a href=\"#2-1-1-mononucleotide\" class=\"headerlink\" title=\"2.1.1 mononucleotide\"></a>2.1.1 mononucleotide</h4><ul>\n<li>loss of B is facilitated by the presence of 3’-P rather than 5’-P</li>\n<li>3’-P: lower excitation threshold and freater fragmentation effiiciency</li>\n<li>2-B-5’-P<ul>\n<li>water loss following loss of B</li>\n<li>neutral base loss dAp, dTp &gt; dCp &gt; dGp, and pdA, pdT &gt;pdC &gt;&gt;pdG</li>\n<li>H-bond stablize G</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-1-2-deoxyribodinucleotide\"><a href=\"#2-1-2-deoxyribodinucleotide\" class=\"headerlink\" title=\"2.1.2 deoxyribodinucleotide\"></a>2.1.2 deoxyribodinucleotide</h4><ul>\n<li>Comlementary ions</li>\n</ul>\n<p>$$M^{n-} \\rightarrow m_a^{x-} + m_b^{y-}\\<br>\\frac {|(M/n)-(m_a/x)|}{|(M/n)-(m_b/y)|}=\\frac {y}{x}$$</p>\n<ul>\n<li>5’-B &gt; 3’-B</li>\n<li>5’ loss for a given 3’-B: <ul>\n<li>low charge parent ion: no obvious preference</li>\n<li>high charge parent ion : A$^-$&gt;G$^-$&gt;T$^-$&gt;C$^-$ or A$^-$&gt;T$^-$&gt;G$^-$,C$^-$</li>\n</ul>\n</li>\n<li>3’-B affects 5’-B loss: 3’-B=A&gt;C&gt;T&gt;G</li>\n<li>subsequent decomposition: w and (a-B)</li>\n<li>loss of PO$_3^-$ from 5’-P ions (ex: w ions $\\rightarrow$ y) can compete effectively with loss of a base. Lower charge generally favors more greatly the loss of PO$_3^-$ group</li>\n<li>Multiple base loss increses with increasing activation and incresing charge state</li>\n</ul>\n<h4 id=\"2-1-3-trinucleotide\"><a href=\"#2-1-3-trinucleotide\" class=\"headerlink\" title=\"2.1.3 trinucleotide\"></a>2.1.3 trinucleotide</h4><ul>\n<li>5’-B$_1$&gt; B$_2$, B$_3$: A&gt;T&gt;G&gt;C</li>\n<li>loss of 5’-B depends on 3’-B=A&gt;T&gt;G&gt;C</li>\n<li>subsequent: w and (a-B)</li>\n<li>c, x, y, z types also observed</li>\n</ul>\n<h4 id=\"2-1-4-tetranucleotide\"><a href=\"#2-1-4-tetranucleotide\" class=\"headerlink\" title=\"2.1.4 tetranucleotide\"></a>2.1.4 tetranucleotide</h4><ul>\n<li>(M-H)$^-$: 3’-B more readily than 5’-B loss</li>\n<li>(M-2H)$^{2-}$<ul>\n<li>same general trend as trinucleotide </li>\n<li>y more abundant</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-1-5-single-base-nucleotide-3-to-8-mers\"><a href=\"#2-1-5-single-base-nucleotide-3-to-8-mers\" class=\"headerlink\" title=\"2.1.5 single-base nucleotide (3- to 8-mers)\"></a>2.1.5 single-base nucleotide (3- to 8-mers)</h4><ul>\n<li>nucleobase identity<ul>\n<li>poly-T: loss of 5’-T</li>\n<li>poly-G: loss of 5’-G inhibited</li>\n<li>the ease of fragmetation: poly-A&gt;&gt;T$\\approx$C&gt;G<ul>\n<li>weak N-glycosidic bond streng accssoced with A</li>\n<li>stable G due to H-bonding</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>odd- and even-electron parent anions:<ul>\n<li>odd: w no M-B $\\rightarrow$ backbone cleavage without loss of B</li>\n<li>even: first loss a base, followed by backbone cleavage</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-1-6-other-mass-analyzers\"><a href=\"#2-1-6-other-mass-analyzers\" class=\"headerlink\" title=\"2.1.6 other mass analyzers\"></a>2.1.6 other mass analyzers</h4><ul>\n<li>triple quadrupoles (TQIT):<ul>\n<li>low energy process $\\rightarrow$ sensitive</li>\n<li>more extensive structural info</li>\n</ul>\n</li>\n<li>quadrupole ion traps (QIT):<ul>\n<li>beam-type collisional activation experiment</li>\n<li>multiple competitive dissociation reactions can happen</li>\n</ul>\n</li>\n<li>base loss on CID in triple quadrupoles is much less dependent on the identity of the base than in quadrupole ion traps</li>\n<li>base loss not necesssary for backbone cleavages for a modified tetraribonucleotide</li>\n</ul>\n<h4 id=\"2-1-7-oligonucleotides-with-a-modified-nuclebase-CACGXG\"><a href=\"#2-1-7-oligonucleotides-with-a-modified-nuclebase-CACGXG\" class=\"headerlink\" title=\"2.1.7 oligonucleotides with a modified nuclebase: CACGXG\"></a>2.1.7 oligonucleotides with a modified nuclebase: CACGXG</h4><ul>\n<li>loss of all non-terminal bases in conjuction with cleavage of their respective 3’ C-O bonds</li>\n<li>more electron withdrawing of X, more facile of the loss of B$^-$</li>\n<li>more electron withdrawing of product ions, more likely to further fragemntation</li>\n</ul>\n<h4 id=\"2-1-8-large-DNA-anions-50-to-108mers\"><a href=\"#2-1-8-large-DNA-anions-50-to-108mers\" class=\"headerlink\" title=\"2.1.8 large DNA anions: 50- to 108mers\"></a>2.1.8 large DNA anions: 50- to 108mers</h4><ul>\n<li>predominant dissociation chanels depend on DNA molecule itself</li>\n<li>base loss: AH&gt;GH, CH&gt;&gt;TH</li>\n</ul>\n<h4 id=\"2-1-9-BIRD-FT-MS-pm-7-mers\"><a href=\"#2-1-9-BIRD-FT-MS-pm-7-mers\" class=\"headerlink\" title=\"2.1.9 BIRD-FT-MS pm 7-mers\"></a>2.1.9 BIRD-FT-MS pm 7-mers</h4><ul>\n<li>all backbone cleavages are preceded by base loss</li>\n<li>prefered cleavage sites depends on the internal energy of the precursor ions<ul>\n<li>effective T&gt;540K: cleavage at C and G residues</li>\n<li>effective T&lt;475K: dissociation at A residues dominates</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-1-10-DNA-duplex-ions\"><a href=\"#2-1-10-DNA-duplex-ions\" class=\"headerlink\" title=\"2.1.10 DNA duplex ions\"></a>2.1.10 DNA duplex ions</h4><ul>\n<li>noncovalent dissociation of the complex into single strands</li>\n<li>covalent fragmentation<ul>\n<li>predominant channel: neutral base loss</li>\n<li>base loss initiated backbone fragmentation</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-1-11-RNA\"><a href=\"#2-1-11-RNA\" class=\"headerlink\" title=\"2.1.11 RNA\"></a>2.1.11 RNA</h4><ul>\n<li>base loss less important</li>\n<li>loss pf a neutral or negatively charged B is the low-energy dissociation process</li>\n<li>5’-B prefer: C&gt;&gt;T&gt;U</li>\n<li>backbone fragmentation of RNA is decoupled from base loss</li>\n<li>c/y ions in major</li>\n</ul>\n<h3 id=\"2-2-Positive-ESI\"><a href=\"#2-2-Positive-ESI\" class=\"headerlink\" title=\"2.2 Positive ESI\"></a>2.2 Positive ESI</h3><h4 id=\"2-2-1-dinucleotide-M-H\"><a href=\"#2-2-1-dinucleotide-M-H\" class=\"headerlink\" title=\"2.2.1 dinucleotide $(M+H)^+$\"></a>2.2.1 dinucleotide $(M+H)^+$</h4><ul>\n<li>3’-$BH_2^+$ loss &gt; 5’, except 3’-T</li>\n</ul>\n<h4 id=\"2-2-2-all-trimers-and-16-mixed-base-tetramers-M-H-in-QIT\"><a href=\"#2-2-2-all-trimers-and-16-mixed-base-tetramers-M-H-in-QIT\" class=\"headerlink\" title=\"2.2.2 all trimers and 16 mixed-base tetramers $(M+H)^+$ in QIT\"></a>2.2.2 all trimers and 16 mixed-base tetramers $(M+H)^+$ in QIT</h4><ul>\n<li>initial step:  neutral base loss<ul>\n<li>loss depends on PA: C $\\approx$ G&gt;A&gt;&gt;T</li>\n<li>positon: 5’&gt;3’&gt;internal</li>\n</ul>\n</li>\n<li>cleavage of 3’C-O phosphodiester bond $\\rightarrow$ w and (a-B)</li>\n<li>dTTT<ul>\n<li>protonaed at phosphat oxygen</li>\n<li>$z_2^+$ ion (also occur as a 2nd process in a few cases when 5’-B=C/G/A)</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-2-3-up-to-10-mer-in-TQIT\"><a href=\"#2-2-3-up-to-10-mer-in-TQIT\" class=\"headerlink\" title=\"2.2.3 up to 10-mer in TQIT\"></a>2.2.3 up to 10-mer in TQIT</h4><ul>\n<li>charged B loss followed by w/(a-B)<ul>\n<li>C&gt;G&gt;A&gt;&gt;T</li>\n<li>3’&gt;5’&gt;internal</li>\n<li>agree with dimers, but trimers</li>\n</ul>\n</li>\n<li>poly-T: x-2H and z-2H</li>\n</ul>\n<h4 id=\"2-2-4-EBE-TOF-MS\"><a href=\"#2-2-4-EBE-TOF-MS\" class=\"headerlink\" title=\"2.2.4 EBE-TOF MS\"></a>2.2.4 EBE-TOF MS</h4><ul>\n<li>$BH_2^+$ loss agree with PA</li>\n<li>charge of the precursor affects the abundance of ions from the bases more than position of the base</li>\n<li>loss of T as an anion possible for $(M-2H)^{2-}$</li>\n</ul>\n<h4 id=\"2-2-5-ECD-and-IRMPD-of-doubly-protonated\"><a href=\"#2-2-5-ECD-and-IRMPD-of-doubly-protonated\" class=\"headerlink\" title=\"2.2.5 ECD and IRMPD of doubly protonated\"></a>2.2.5 ECD and IRMPD of doubly protonated</h4><ul>\n<li>ECD<ul>\n<li>polydG: radical w/d “sequence”. no even-e a/z ions</li>\n<li>polydC: even-e w/d ions, a/z ions in most</li>\n<li>polydA: even-e w/d ions, little fragemntation than C/G</li>\n<li>polydT: poor ionization, low PA</li>\n<li>dGCATGC: even-e d-ion and a $z^\\cdot$-type</li>\n</ul>\n</li>\n<li>IRMPD<ul>\n<li>similiar to CID: B, w/(a-B)</li>\n<li>more sequence info than ECD</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p> <a href=\"https://www.sciencedirect.com/science/article/pii/S1387380604003264?via%3Dihub\" target=\"_blank\" rel=\"noopener\">Gas-Phase Fragmentation of Oligonucleotide Ions</a></p>\n<ul>\n<li>The preferred dissociation channels for a given ion are a function of the ion type, the structure of the molecule, the internal energy distribution of the ion and the time-frame over which the fragmentation reactions can evolve</li>\n<li>McLuckey’s nomenclature for backbone cleavages (a/w,b/x,c/y,d/z, 5’-frag:a,b,c,d; 3’-frag: w,x,y,z)</li>\n</ul>\n<p><em>MALDI and mechanism not included.</em></p>\n<h2 id=\"1-hetero-dinucleotide-FAB-CID\"><a href=\"#1-hetero-dinucleotide-FAB-CID\" class=\"headerlink\" title=\"1 hetero-dinucleotide FAB CID\"></a>1 hetero-dinucleotide FAB CID</h2><h3 id=\"1-1-M-H\"><a href=\"#1-1-M-H\" class=\"headerlink\" title=\"1.1 $(M+H)^+$\"></a>1.1 $(M+H)^+$</h3><ul>\n<li>protonated 3’-(B$_2$+2H)$^+$ &gt; 5’-(B$_1$+2H)$^+$<ul>\n<li>except 3’-T; T: low proton affinity</li>\n<li>interaction between P and the 3’-B, incuding a partial positive charge on 3’-B $\\rightarrow$ enhace glycosidic bond cleavage</li>\n</ul>\n</li>\n<li>neutral 5’-(B$_1$+H) &gt; neutral 3’-(B$_2$+H)<ul>\n<li>loss of 3’-base only in dAG and dAC</li>\n<li>4 bases similiar preference</li>\n</ul>\n</li>\n<li>$w_1&gt;d_1$<ul>\n<li>$(w_1+H_2)^+$ only not seen in dTG and dTC, where $(d_1+H_2)^+$ is not produced</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"1-2-M-H\"><a href=\"#1-2-M-H\" class=\"headerlink\" title=\"1.2 $(M-H)^-$\"></a>1.2 $(M-H)^-$</h3><ul>\n<li>5’-B$_1^-$&gt;3’-B$_2^-$</li>\n<li>5’-(B$_1$+H) &gt; 3’-(B$_2$+H) except dGA and dGT</li>\n<li>$w_1^-&gt;d_1^-$</li>\n</ul>\n<h3 id=\"trend\"><a href=\"#trend\" class=\"headerlink\" title=\"trend\"></a>trend</h3><ul>\n<li>basicity: $C^-&gt;T^-$, $A^-&gt;G^-$</li>\n<li>3’-terminus base is stabilized through H-bond interaction with the P: <ul>\n<li>strength: G&gt;T&gt;C&gt;A</li>\n</ul>\n</li>\n<li>acidities: A&gt;T&gt;G&gt;C</li>\n<li>proton affinity: cytidine(C+S), G+S, A+S &gt; C &gt; G &gt; A &gt; T+S &gt; T</li>\n</ul>\n<h2 id=\"2-ESI-mass-spectrometry\"><a href=\"#2-ESI-mass-spectrometry\" class=\"headerlink\" title=\"2 ESI mass spectrometry\"></a>2 ESI mass spectrometry</h2><h3 id=\"2-1-Negative-mass-spec\"><a href=\"#2-1-Negative-mass-spec\" class=\"headerlink\" title=\"2.1 Negative mass spec\"></a>2.1 Negative mass spec</h3><h4 id=\"2-1-1-mononucleotide\"><a href=\"#2-1-1-mononucleotide\" class=\"headerlink\" title=\"2.1.1 mononucleotide\"></a>2.1.1 mononucleotide</h4><ul>\n<li>loss of B is facilitated by the presence of 3’-P rather than 5’-P</li>\n<li>3’-P: lower excitation threshold and freater fragmentation effiiciency</li>\n<li>2-B-5’-P<ul>\n<li>water loss following loss of B</li>\n<li>neutral base loss dAp, dTp &gt; dCp &gt; dGp, and pdA, pdT &gt;pdC &gt;&gt;pdG</li>\n<li>H-bond stablize G</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-1-2-deoxyribodinucleotide\"><a href=\"#2-1-2-deoxyribodinucleotide\" class=\"headerlink\" title=\"2.1.2 deoxyribodinucleotide\"></a>2.1.2 deoxyribodinucleotide</h4><ul>\n<li>Comlementary ions</li>\n</ul>\n<p>$$M^{n-} \\rightarrow m_a^{x-} + m_b^{y-}\\<br>\\frac {|(M/n)-(m_a/x)|}{|(M/n)-(m_b/y)|}=\\frac {y}{x}$$</p>\n<ul>\n<li>5’-B &gt; 3’-B</li>\n<li>5’ loss for a given 3’-B: <ul>\n<li>low charge parent ion: no obvious preference</li>\n<li>high charge parent ion : A$^-$&gt;G$^-$&gt;T$^-$&gt;C$^-$ or A$^-$&gt;T$^-$&gt;G$^-$,C$^-$</li>\n</ul>\n</li>\n<li>3’-B affects 5’-B loss: 3’-B=A&gt;C&gt;T&gt;G</li>\n<li>subsequent decomposition: w and (a-B)</li>\n<li>loss of PO$_3^-$ from 5’-P ions (ex: w ions $\\rightarrow$ y) can compete effectively with loss of a base. Lower charge generally favors more greatly the loss of PO$_3^-$ group</li>\n<li>Multiple base loss increses with increasing activation and incresing charge state</li>\n</ul>\n<h4 id=\"2-1-3-trinucleotide\"><a href=\"#2-1-3-trinucleotide\" class=\"headerlink\" title=\"2.1.3 trinucleotide\"></a>2.1.3 trinucleotide</h4><ul>\n<li>5’-B$_1$&gt; B$_2$, B$_3$: A&gt;T&gt;G&gt;C</li>\n<li>loss of 5’-B depends on 3’-B=A&gt;T&gt;G&gt;C</li>\n<li>subsequent: w and (a-B)</li>\n<li>c, x, y, z types also observed</li>\n</ul>\n<h4 id=\"2-1-4-tetranucleotide\"><a href=\"#2-1-4-tetranucleotide\" class=\"headerlink\" title=\"2.1.4 tetranucleotide\"></a>2.1.4 tetranucleotide</h4><ul>\n<li>(M-H)$^-$: 3’-B more readily than 5’-B loss</li>\n<li>(M-2H)$^{2-}$<ul>\n<li>same general trend as trinucleotide </li>\n<li>y more abundant</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-1-5-single-base-nucleotide-3-to-8-mers\"><a href=\"#2-1-5-single-base-nucleotide-3-to-8-mers\" class=\"headerlink\" title=\"2.1.5 single-base nucleotide (3- to 8-mers)\"></a>2.1.5 single-base nucleotide (3- to 8-mers)</h4><ul>\n<li>nucleobase identity<ul>\n<li>poly-T: loss of 5’-T</li>\n<li>poly-G: loss of 5’-G inhibited</li>\n<li>the ease of fragmetation: poly-A&gt;&gt;T$\\approx$C&gt;G<ul>\n<li>weak N-glycosidic bond streng accssoced with A</li>\n<li>stable G due to H-bonding</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>odd- and even-electron parent anions:<ul>\n<li>odd: w no M-B $\\rightarrow$ backbone cleavage without loss of B</li>\n<li>even: first loss a base, followed by backbone cleavage</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-1-6-other-mass-analyzers\"><a href=\"#2-1-6-other-mass-analyzers\" class=\"headerlink\" title=\"2.1.6 other mass analyzers\"></a>2.1.6 other mass analyzers</h4><ul>\n<li>triple quadrupoles (TQIT):<ul>\n<li>low energy process $\\rightarrow$ sensitive</li>\n<li>more extensive structural info</li>\n</ul>\n</li>\n<li>quadrupole ion traps (QIT):<ul>\n<li>beam-type collisional activation experiment</li>\n<li>multiple competitive dissociation reactions can happen</li>\n</ul>\n</li>\n<li>base loss on CID in triple quadrupoles is much less dependent on the identity of the base than in quadrupole ion traps</li>\n<li>base loss not necesssary for backbone cleavages for a modified tetraribonucleotide</li>\n</ul>\n<h4 id=\"2-1-7-oligonucleotides-with-a-modified-nuclebase-CACGXG\"><a href=\"#2-1-7-oligonucleotides-with-a-modified-nuclebase-CACGXG\" class=\"headerlink\" title=\"2.1.7 oligonucleotides with a modified nuclebase: CACGXG\"></a>2.1.7 oligonucleotides with a modified nuclebase: CACGXG</h4><ul>\n<li>loss of all non-terminal bases in conjuction with cleavage of their respective 3’ C-O bonds</li>\n<li>more electron withdrawing of X, more facile of the loss of B$^-$</li>\n<li>more electron withdrawing of product ions, more likely to further fragemntation</li>\n</ul>\n<h4 id=\"2-1-8-large-DNA-anions-50-to-108mers\"><a href=\"#2-1-8-large-DNA-anions-50-to-108mers\" class=\"headerlink\" title=\"2.1.8 large DNA anions: 50- to 108mers\"></a>2.1.8 large DNA anions: 50- to 108mers</h4><ul>\n<li>predominant dissociation chanels depend on DNA molecule itself</li>\n<li>base loss: AH&gt;GH, CH&gt;&gt;TH</li>\n</ul>\n<h4 id=\"2-1-9-BIRD-FT-MS-pm-7-mers\"><a href=\"#2-1-9-BIRD-FT-MS-pm-7-mers\" class=\"headerlink\" title=\"2.1.9 BIRD-FT-MS pm 7-mers\"></a>2.1.9 BIRD-FT-MS pm 7-mers</h4><ul>\n<li>all backbone cleavages are preceded by base loss</li>\n<li>prefered cleavage sites depends on the internal energy of the precursor ions<ul>\n<li>effective T&gt;540K: cleavage at C and G residues</li>\n<li>effective T&lt;475K: dissociation at A residues dominates</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-1-10-DNA-duplex-ions\"><a href=\"#2-1-10-DNA-duplex-ions\" class=\"headerlink\" title=\"2.1.10 DNA duplex ions\"></a>2.1.10 DNA duplex ions</h4><ul>\n<li>noncovalent dissociation of the complex into single strands</li>\n<li>covalent fragmentation<ul>\n<li>predominant channel: neutral base loss</li>\n<li>base loss initiated backbone fragmentation</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-1-11-RNA\"><a href=\"#2-1-11-RNA\" class=\"headerlink\" title=\"2.1.11 RNA\"></a>2.1.11 RNA</h4><ul>\n<li>base loss less important</li>\n<li>loss pf a neutral or negatively charged B is the low-energy dissociation process</li>\n<li>5’-B prefer: C&gt;&gt;T&gt;U</li>\n<li>backbone fragmentation of RNA is decoupled from base loss</li>\n<li>c/y ions in major</li>\n</ul>\n<h3 id=\"2-2-Positive-ESI\"><a href=\"#2-2-Positive-ESI\" class=\"headerlink\" title=\"2.2 Positive ESI\"></a>2.2 Positive ESI</h3><h4 id=\"2-2-1-dinucleotide-M-H\"><a href=\"#2-2-1-dinucleotide-M-H\" class=\"headerlink\" title=\"2.2.1 dinucleotide $(M+H)^+$\"></a>2.2.1 dinucleotide $(M+H)^+$</h4><ul>\n<li>3’-$BH_2^+$ loss &gt; 5’, except 3’-T</li>\n</ul>\n<h4 id=\"2-2-2-all-trimers-and-16-mixed-base-tetramers-M-H-in-QIT\"><a href=\"#2-2-2-all-trimers-and-16-mixed-base-tetramers-M-H-in-QIT\" class=\"headerlink\" title=\"2.2.2 all trimers and 16 mixed-base tetramers $(M+H)^+$ in QIT\"></a>2.2.2 all trimers and 16 mixed-base tetramers $(M+H)^+$ in QIT</h4><ul>\n<li>initial step:  neutral base loss<ul>\n<li>loss depends on PA: C $\\approx$ G&gt;A&gt;&gt;T</li>\n<li>positon: 5’&gt;3’&gt;internal</li>\n</ul>\n</li>\n<li>cleavage of 3’C-O phosphodiester bond $\\rightarrow$ w and (a-B)</li>\n<li>dTTT<ul>\n<li>protonaed at phosphat oxygen</li>\n<li>$z_2^+$ ion (also occur as a 2nd process in a few cases when 5’-B=C/G/A)</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-2-3-up-to-10-mer-in-TQIT\"><a href=\"#2-2-3-up-to-10-mer-in-TQIT\" class=\"headerlink\" title=\"2.2.3 up to 10-mer in TQIT\"></a>2.2.3 up to 10-mer in TQIT</h4><ul>\n<li>charged B loss followed by w/(a-B)<ul>\n<li>C&gt;G&gt;A&gt;&gt;T</li>\n<li>3’&gt;5’&gt;internal</li>\n<li>agree with dimers, but trimers</li>\n</ul>\n</li>\n<li>poly-T: x-2H and z-2H</li>\n</ul>\n<h4 id=\"2-2-4-EBE-TOF-MS\"><a href=\"#2-2-4-EBE-TOF-MS\" class=\"headerlink\" title=\"2.2.4 EBE-TOF MS\"></a>2.2.4 EBE-TOF MS</h4><ul>\n<li>$BH_2^+$ loss agree with PA</li>\n<li>charge of the precursor affects the abundance of ions from the bases more than position of the base</li>\n<li>loss of T as an anion possible for $(M-2H)^{2-}$</li>\n</ul>\n<h4 id=\"2-2-5-ECD-and-IRMPD-of-doubly-protonated\"><a href=\"#2-2-5-ECD-and-IRMPD-of-doubly-protonated\" class=\"headerlink\" title=\"2.2.5 ECD and IRMPD of doubly protonated\"></a>2.2.5 ECD and IRMPD of doubly protonated</h4><ul>\n<li>ECD<ul>\n<li>polydG: radical w/d “sequence”. no even-e a/z ions</li>\n<li>polydC: even-e w/d ions, a/z ions in most</li>\n<li>polydA: even-e w/d ions, little fragemntation than C/G</li>\n<li>polydT: poor ionization, low PA</li>\n<li>dGCATGC: even-e d-ion and a $z^\\cdot$-type</li>\n</ul>\n</li>\n<li>IRMPD<ul>\n<li>similiar to CID: B, w/(a-B)</li>\n<li>more sequence info than ECD</li>\n</ul>\n</li>\n</ul>\n"},{"title":"Gaussian Troubleshooting","date":"2019-01-23T04:05:42.000Z","_content":"\nTroubleshooting about:  [Freq: Negative Frequency](#nfreq) | [Freq job never stops calculating vectors](#vecfreq) | [Opt: Energy Oscillates](#eosc) | [Opt: FormBX had a problem](#formbx) | [Transformation cannot fit in the specified MaxDisk](#maxdisk) | To be continue ...\n\n# <jump id='eosc'>Energy oscillates and opt never converges\n\nIf during geometry optimization the energy oscillates as shown in the following figure:\n![E_osc](https://raw.githubusercontent.com/yueliu96/blog_images/master/energy_osc.PNG)\n\nThis oscillation happens because one or more of the second derivatives is very close to zero.\n\nTry:\n1. restart the geometry optimization from the point with the lowest energy (step 60 for this case)\n2. `opt(calcfc)`--specifies that the force constants be computed at the first point using the current method. It will ensure that the calculation starts with accurate second derivatives, but may be too expensive to be practical\n3. It is recommended for molecules containing lots of tetrahedral centers and for computing very low frequency modes of systems to use [`Integral(UltraFine)`](http://gaussian.com/integral/)\n\n\n# <jump id='formbx'>FormBX had a problem</jump>\n\nIf get error message like:\n\n```\n GradGradGradGradGradGradGradGradGradGradGradGradGradGradGradGradGradGrad\n Berny optimization.\n Using GEDIIS/GDIIS optimizer.\n Bend failed for angle    33 -    87 -    81\n Tors failed for dihedral    32 -    33 -    87 -    81\n Tors failed for dihedral    34 -    33 -    87 -    81\n Tors failed for dihedral    86 -    33 -    87 -    81\n Tors failed for dihedral    15 -    81 -    87 -    33\n FormBX had a problem.\n Error termination via Lnk1e in /sw/contrib/gaussian/g16/B01/g16/l103.exe at Tue Jan 22 12:58:22 2019.\n```\n\nThat means the angle formed by atom 33, 87 and 81 is 180$^\\circ$. So, modify it manually and start over optimization again.\n\n# <jump id='nfreq'> Negative Frequency </jump>\n\nGaussian optimization algorithm uses the gradient descent to find the closest minmum ($f'(x)=0$). However, the gradient of a local maximum point is also 0, which corresponds to a transition state. A transition state should have one negative/imaginary frequency.\n\nFrequencies can be visualized after loading the output file into GaussView. What we should do is locate the imaginary frequency, move the atom/atom group in the direction of this vibration, reoptimize this modified structure and calculate the frequency again.\n\n# <jump id='vecfreq'> Freq Job Never Stops Calculating Vectors</jump>\n\nGaussian uses two different algorithms to do a frequency calculation (solving the CPHF equations) The  standard one uses a lot of RAM memory but is very fast. However, when RAM memory is not enough or the number of CPHF  equations exceeds 5000 by default, gaussian uses another algorithm, this tries to save RAM memory  by storing intermediate results on a hard disk. This takes very long making the calculations practically  inactive.\n\nIf limited by RAM memory, increase it by linkwords `%mem=xxx`. If  CPHF equations exceed 5000 and there is enough memory available, add an extra keyword: `CPHF(MaxInv=10000)` on the route card. This puts the maximum number of  CPHF equations for the basic algorithm to 10,000.\n\n# <jump id='maxdisk'>Transformation cannot fit in the specified MaxDisk</jump>\n\nWe will get this error when specifying `maxdisk=xxx` and the disk is not enough to finish the current job.\n\nThe MaxDisk keyword specifies the amount of disk storage available for scratch data. But some jobs, like CCSD, CCSD(T), QCISD(T), and BD(T) energies have fixed disk which cannot be limited by MaxDisk. In this case, if the disk storage is not enough, we will get error information like:\n\n```\n Semi-Direct transformation.\n ModeAB=           4 MOrb=            51 LenV=   26834989397\n LASXX=   3675829080 LTotXX=  3675829080 LenRXX=  7405142880\n LTotAB=  3729313800 MaxLAS=  4334140395 LenRXY=           0\n NonZer= 11080971960 LenScr= 22248854016 LnRSAI=  4334140395\n LnScr1=  8702274560 LExtra=   897554704 Total=  43587966555\n MaxDsk= 13421772800 SrtSym=           T ITran=            4\n Transformation cannot fit in the specified MaxDisk.\n Error termination via Lnk1e in /sw/contrib/gaussian/g16/B01/g16/l804.exe at Wed Dec 19 01:05:37 2018.\n Job cpu time:       0 days  7 hours 19 minutes 44.3 seconds.\n Elapsed time:       0 days  0 hours 15 minutes 43.2 seconds.\n File lengths (MBytes):  RWF=  63349 Int=      0 D2E=      0 Chk=     16 Scr=      1\n```\n\nWhere, `MaxDsk=13421772800` means I uses `maxdisk=100G` ($\\frac{13421772800\\times8}{1024^3}$); `Total=43587966555` means the minimum disk should be 325G ($\\frac{43587966555\\times8}{1024^3}$).\n\nFor Hyak, there is around 100G storage space for one node. So we can locate the largest scratch file (read and write file) to `/gscratch/scrubbed/username/` like:\n\n```bash\n%rwf=/gscratch/scrubbed/yueliu96/test.rwf\n%nosave\n```","source":"_posts/Gaussian-Troubleshooting.md","raw":"---\ntitle: Gaussian Troubleshooting\ndate: 2019-01-22 20:05:42\ntags:\n- software\ncategories:\n- Turecek Lab Tutorial\n---\n\nTroubleshooting about:  [Freq: Negative Frequency](#nfreq) | [Freq job never stops calculating vectors](#vecfreq) | [Opt: Energy Oscillates](#eosc) | [Opt: FormBX had a problem](#formbx) | [Transformation cannot fit in the specified MaxDisk](#maxdisk) | To be continue ...\n\n# <jump id='eosc'>Energy oscillates and opt never converges\n\nIf during geometry optimization the energy oscillates as shown in the following figure:\n![E_osc](https://raw.githubusercontent.com/yueliu96/blog_images/master/energy_osc.PNG)\n\nThis oscillation happens because one or more of the second derivatives is very close to zero.\n\nTry:\n1. restart the geometry optimization from the point with the lowest energy (step 60 for this case)\n2. `opt(calcfc)`--specifies that the force constants be computed at the first point using the current method. It will ensure that the calculation starts with accurate second derivatives, but may be too expensive to be practical\n3. It is recommended for molecules containing lots of tetrahedral centers and for computing very low frequency modes of systems to use [`Integral(UltraFine)`](http://gaussian.com/integral/)\n\n\n# <jump id='formbx'>FormBX had a problem</jump>\n\nIf get error message like:\n\n```\n GradGradGradGradGradGradGradGradGradGradGradGradGradGradGradGradGradGrad\n Berny optimization.\n Using GEDIIS/GDIIS optimizer.\n Bend failed for angle    33 -    87 -    81\n Tors failed for dihedral    32 -    33 -    87 -    81\n Tors failed for dihedral    34 -    33 -    87 -    81\n Tors failed for dihedral    86 -    33 -    87 -    81\n Tors failed for dihedral    15 -    81 -    87 -    33\n FormBX had a problem.\n Error termination via Lnk1e in /sw/contrib/gaussian/g16/B01/g16/l103.exe at Tue Jan 22 12:58:22 2019.\n```\n\nThat means the angle formed by atom 33, 87 and 81 is 180$^\\circ$. So, modify it manually and start over optimization again.\n\n# <jump id='nfreq'> Negative Frequency </jump>\n\nGaussian optimization algorithm uses the gradient descent to find the closest minmum ($f'(x)=0$). However, the gradient of a local maximum point is also 0, which corresponds to a transition state. A transition state should have one negative/imaginary frequency.\n\nFrequencies can be visualized after loading the output file into GaussView. What we should do is locate the imaginary frequency, move the atom/atom group in the direction of this vibration, reoptimize this modified structure and calculate the frequency again.\n\n# <jump id='vecfreq'> Freq Job Never Stops Calculating Vectors</jump>\n\nGaussian uses two different algorithms to do a frequency calculation (solving the CPHF equations) The  standard one uses a lot of RAM memory but is very fast. However, when RAM memory is not enough or the number of CPHF  equations exceeds 5000 by default, gaussian uses another algorithm, this tries to save RAM memory  by storing intermediate results on a hard disk. This takes very long making the calculations practically  inactive.\n\nIf limited by RAM memory, increase it by linkwords `%mem=xxx`. If  CPHF equations exceed 5000 and there is enough memory available, add an extra keyword: `CPHF(MaxInv=10000)` on the route card. This puts the maximum number of  CPHF equations for the basic algorithm to 10,000.\n\n# <jump id='maxdisk'>Transformation cannot fit in the specified MaxDisk</jump>\n\nWe will get this error when specifying `maxdisk=xxx` and the disk is not enough to finish the current job.\n\nThe MaxDisk keyword specifies the amount of disk storage available for scratch data. But some jobs, like CCSD, CCSD(T), QCISD(T), and BD(T) energies have fixed disk which cannot be limited by MaxDisk. In this case, if the disk storage is not enough, we will get error information like:\n\n```\n Semi-Direct transformation.\n ModeAB=           4 MOrb=            51 LenV=   26834989397\n LASXX=   3675829080 LTotXX=  3675829080 LenRXX=  7405142880\n LTotAB=  3729313800 MaxLAS=  4334140395 LenRXY=           0\n NonZer= 11080971960 LenScr= 22248854016 LnRSAI=  4334140395\n LnScr1=  8702274560 LExtra=   897554704 Total=  43587966555\n MaxDsk= 13421772800 SrtSym=           T ITran=            4\n Transformation cannot fit in the specified MaxDisk.\n Error termination via Lnk1e in /sw/contrib/gaussian/g16/B01/g16/l804.exe at Wed Dec 19 01:05:37 2018.\n Job cpu time:       0 days  7 hours 19 minutes 44.3 seconds.\n Elapsed time:       0 days  0 hours 15 minutes 43.2 seconds.\n File lengths (MBytes):  RWF=  63349 Int=      0 D2E=      0 Chk=     16 Scr=      1\n```\n\nWhere, `MaxDsk=13421772800` means I uses `maxdisk=100G` ($\\frac{13421772800\\times8}{1024^3}$); `Total=43587966555` means the minimum disk should be 325G ($\\frac{43587966555\\times8}{1024^3}$).\n\nFor Hyak, there is around 100G storage space for one node. So we can locate the largest scratch file (read and write file) to `/gscratch/scrubbed/username/` like:\n\n```bash\n%rwf=/gscratch/scrubbed/yueliu96/test.rwf\n%nosave\n```","slug":"Gaussian-Troubleshooting","published":1,"updated":"2019-01-25T04:29:04.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrcn2vlx0002ua5sm6mnt3u6","content":"<p>Troubleshooting about:  <a href=\"#nfreq\">Freq: Negative Frequency</a> | <a href=\"#vecfreq\">Freq job never stops calculating vectors</a> | <a href=\"#eosc\">Opt: Energy Oscillates</a> | <a href=\"#formbx\">Opt: FormBX had a problem</a> | <a href=\"#maxdisk\">Transformation cannot fit in the specified MaxDisk</a> | To be continue …</p>\n<h1 id=\"Energy-oscillates-and-opt-never-converges\"><a href=\"#Energy-oscillates-and-opt-never-converges\" class=\"headerlink\" title=\"Energy oscillates and opt never converges\"></a><jump id=\"eosc\">Energy oscillates and opt never converges</jump></h1><p>If during geometry optimization the energy oscillates as shown in the following figure:<br><img src=\"https://raw.githubusercontent.com/yueliu96/blog_images/master/energy_osc.PNG\" alt=\"E_osc\"></p>\n<p>This oscillation happens because one or more of the second derivatives is very close to zero.</p>\n<p>Try:</p>\n<ol>\n<li>restart the geometry optimization from the point with the lowest energy (step 60 for this case)</li>\n<li><code>opt(calcfc)</code>–specifies that the force constants be computed at the first point using the current method. It will ensure that the calculation starts with accurate second derivatives, but may be too expensive to be practical</li>\n<li>It is recommended for molecules containing lots of tetrahedral centers and for computing very low frequency modes of systems to use <a href=\"http://gaussian.com/integral/\" target=\"_blank\" rel=\"noopener\"><code>Integral(UltraFine)</code></a></li>\n</ol>\n<h1 id=\"FormBX-had-a-problem\"><a href=\"#FormBX-had-a-problem\" class=\"headerlink\" title=\"FormBX had a problem\"></a><jump id=\"formbx\">FormBX had a problem</jump></h1><p>If get error message like:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GradGradGradGradGradGradGradGradGradGradGradGradGradGradGradGradGradGrad</span><br><span class=\"line\">Berny optimization.</span><br><span class=\"line\">Using GEDIIS/GDIIS optimizer.</span><br><span class=\"line\">Bend failed for angle    33 -    87 -    81</span><br><span class=\"line\">Tors failed for dihedral    32 -    33 -    87 -    81</span><br><span class=\"line\">Tors failed for dihedral    34 -    33 -    87 -    81</span><br><span class=\"line\">Tors failed for dihedral    86 -    33 -    87 -    81</span><br><span class=\"line\">Tors failed for dihedral    15 -    81 -    87 -    33</span><br><span class=\"line\">FormBX had a problem.</span><br><span class=\"line\">Error termination via Lnk1e in /sw/contrib/gaussian/g16/B01/g16/l103.exe at Tue Jan 22 12:58:22 2019.</span><br></pre></td></tr></table></figure>\n<p>That means the angle formed by atom 33, 87 and 81 is 180$^\\circ$. So, modify it manually and start over optimization again.</p>\n<h1 id=\"Negative-Frequency\"><a href=\"#Negative-Frequency\" class=\"headerlink\" title=\" Negative Frequency \"></a><jump id=\"nfreq\"> Negative Frequency </jump></h1><p>Gaussian optimization algorithm uses the gradient descent to find the closest minmum ($f’(x)=0$). However, the gradient of a local maximum point is also 0, which corresponds to a transition state. A transition state should have one negative/imaginary frequency.</p>\n<p>Frequencies can be visualized after loading the output file into GaussView. What we should do is locate the imaginary frequency, move the atom/atom group in the direction of this vibration, reoptimize this modified structure and calculate the frequency again.</p>\n<h1 id=\"Freq-Job-Never-Stops-Calculating-Vectors\"><a href=\"#Freq-Job-Never-Stops-Calculating-Vectors\" class=\"headerlink\" title=\" Freq Job Never Stops Calculating Vectors\"></a><jump id=\"vecfreq\"> Freq Job Never Stops Calculating Vectors</jump></h1><p>Gaussian uses two different algorithms to do a frequency calculation (solving the CPHF equations) The  standard one uses a lot of RAM memory but is very fast. However, when RAM memory is not enough or the number of CPHF  equations exceeds 5000 by default, gaussian uses another algorithm, this tries to save RAM memory  by storing intermediate results on a hard disk. This takes very long making the calculations practically  inactive.</p>\n<p>If limited by RAM memory, increase it by linkwords <code>%mem=xxx</code>. If  CPHF equations exceed 5000 and there is enough memory available, add an extra keyword: <code>CPHF(MaxInv=10000)</code> on the route card. This puts the maximum number of  CPHF equations for the basic algorithm to 10,000.</p>\n<h1 id=\"Transformation-cannot-fit-in-the-specified-MaxDisk\"><a href=\"#Transformation-cannot-fit-in-the-specified-MaxDisk\" class=\"headerlink\" title=\"Transformation cannot fit in the specified MaxDisk\"></a><jump id=\"maxdisk\">Transformation cannot fit in the specified MaxDisk</jump></h1><p>We will get this error when specifying <code>maxdisk=xxx</code> and the disk is not enough to finish the current job.</p>\n<p>The MaxDisk keyword specifies the amount of disk storage available for scratch data. But some jobs, like CCSD, CCSD(T), QCISD(T), and BD(T) energies have fixed disk which cannot be limited by MaxDisk. In this case, if the disk storage is not enough, we will get error information like:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Semi-Direct transformation.</span><br><span class=\"line\">ModeAB=           4 MOrb=            51 LenV=   26834989397</span><br><span class=\"line\">LASXX=   3675829080 LTotXX=  3675829080 LenRXX=  7405142880</span><br><span class=\"line\">LTotAB=  3729313800 MaxLAS=  4334140395 LenRXY=           0</span><br><span class=\"line\">NonZer= 11080971960 LenScr= 22248854016 LnRSAI=  4334140395</span><br><span class=\"line\">LnScr1=  8702274560 LExtra=   897554704 Total=  43587966555</span><br><span class=\"line\">MaxDsk= 13421772800 SrtSym=           T ITran=            4</span><br><span class=\"line\">Transformation cannot fit in the specified MaxDisk.</span><br><span class=\"line\">Error termination via Lnk1e in /sw/contrib/gaussian/g16/B01/g16/l804.exe at Wed Dec 19 01:05:37 2018.</span><br><span class=\"line\">Job cpu time:       0 days  7 hours 19 minutes 44.3 seconds.</span><br><span class=\"line\">Elapsed time:       0 days  0 hours 15 minutes 43.2 seconds.</span><br><span class=\"line\">File lengths (MBytes):  RWF=  63349 Int=      0 D2E=      0 Chk=     16 Scr=      1</span><br></pre></td></tr></table></figure>\n<p>Where, <code>MaxDsk=13421772800</code> means I uses <code>maxdisk=100G</code> ($\\frac{13421772800\\times8}{1024^3}$); <code>Total=43587966555</code> means the minimum disk should be 325G ($\\frac{43587966555\\times8}{1024^3}$).</p>\n<p>For Hyak, there is around 100G storage space for one node. So we can locate the largest scratch file (read and write file) to <code>/gscratch/scrubbed/username/</code> like:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%rwf=/gscratch/scrubbed/yueliu96/test.rwf</span><br><span class=\"line\">%nosave</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>Troubleshooting about:  <a href=\"#nfreq\">Freq: Negative Frequency</a> | <a href=\"#vecfreq\">Freq job never stops calculating vectors</a> | <a href=\"#eosc\">Opt: Energy Oscillates</a> | <a href=\"#formbx\">Opt: FormBX had a problem</a> | <a href=\"#maxdisk\">Transformation cannot fit in the specified MaxDisk</a> | To be continue …</p>\n<h1 id=\"Energy-oscillates-and-opt-never-converges\"><a href=\"#Energy-oscillates-and-opt-never-converges\" class=\"headerlink\" title=\"Energy oscillates and opt never converges\"></a><jump id=\"eosc\">Energy oscillates and opt never converges</jump></h1><p>If during geometry optimization the energy oscillates as shown in the following figure:<br><img src=\"https://raw.githubusercontent.com/yueliu96/blog_images/master/energy_osc.PNG\" alt=\"E_osc\"></p>\n<p>This oscillation happens because one or more of the second derivatives is very close to zero.</p>\n<p>Try:</p>\n<ol>\n<li>restart the geometry optimization from the point with the lowest energy (step 60 for this case)</li>\n<li><code>opt(calcfc)</code>–specifies that the force constants be computed at the first point using the current method. It will ensure that the calculation starts with accurate second derivatives, but may be too expensive to be practical</li>\n<li>It is recommended for molecules containing lots of tetrahedral centers and for computing very low frequency modes of systems to use <a href=\"http://gaussian.com/integral/\" target=\"_blank\" rel=\"noopener\"><code>Integral(UltraFine)</code></a></li>\n</ol>\n<h1 id=\"FormBX-had-a-problem\"><a href=\"#FormBX-had-a-problem\" class=\"headerlink\" title=\"FormBX had a problem\"></a><jump id=\"formbx\">FormBX had a problem</jump></h1><p>If get error message like:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GradGradGradGradGradGradGradGradGradGradGradGradGradGradGradGradGradGrad</span><br><span class=\"line\">Berny optimization.</span><br><span class=\"line\">Using GEDIIS/GDIIS optimizer.</span><br><span class=\"line\">Bend failed for angle    33 -    87 -    81</span><br><span class=\"line\">Tors failed for dihedral    32 -    33 -    87 -    81</span><br><span class=\"line\">Tors failed for dihedral    34 -    33 -    87 -    81</span><br><span class=\"line\">Tors failed for dihedral    86 -    33 -    87 -    81</span><br><span class=\"line\">Tors failed for dihedral    15 -    81 -    87 -    33</span><br><span class=\"line\">FormBX had a problem.</span><br><span class=\"line\">Error termination via Lnk1e in /sw/contrib/gaussian/g16/B01/g16/l103.exe at Tue Jan 22 12:58:22 2019.</span><br></pre></td></tr></table></figure>\n<p>That means the angle formed by atom 33, 87 and 81 is 180$^\\circ$. So, modify it manually and start over optimization again.</p>\n<h1 id=\"Negative-Frequency\"><a href=\"#Negative-Frequency\" class=\"headerlink\" title=\" Negative Frequency \"></a><jump id=\"nfreq\"> Negative Frequency </jump></h1><p>Gaussian optimization algorithm uses the gradient descent to find the closest minmum ($f’(x)=0$). However, the gradient of a local maximum point is also 0, which corresponds to a transition state. A transition state should have one negative/imaginary frequency.</p>\n<p>Frequencies can be visualized after loading the output file into GaussView. What we should do is locate the imaginary frequency, move the atom/atom group in the direction of this vibration, reoptimize this modified structure and calculate the frequency again.</p>\n<h1 id=\"Freq-Job-Never-Stops-Calculating-Vectors\"><a href=\"#Freq-Job-Never-Stops-Calculating-Vectors\" class=\"headerlink\" title=\" Freq Job Never Stops Calculating Vectors\"></a><jump id=\"vecfreq\"> Freq Job Never Stops Calculating Vectors</jump></h1><p>Gaussian uses two different algorithms to do a frequency calculation (solving the CPHF equations) The  standard one uses a lot of RAM memory but is very fast. However, when RAM memory is not enough or the number of CPHF  equations exceeds 5000 by default, gaussian uses another algorithm, this tries to save RAM memory  by storing intermediate results on a hard disk. This takes very long making the calculations practically  inactive.</p>\n<p>If limited by RAM memory, increase it by linkwords <code>%mem=xxx</code>. If  CPHF equations exceed 5000 and there is enough memory available, add an extra keyword: <code>CPHF(MaxInv=10000)</code> on the route card. This puts the maximum number of  CPHF equations for the basic algorithm to 10,000.</p>\n<h1 id=\"Transformation-cannot-fit-in-the-specified-MaxDisk\"><a href=\"#Transformation-cannot-fit-in-the-specified-MaxDisk\" class=\"headerlink\" title=\"Transformation cannot fit in the specified MaxDisk\"></a><jump id=\"maxdisk\">Transformation cannot fit in the specified MaxDisk</jump></h1><p>We will get this error when specifying <code>maxdisk=xxx</code> and the disk is not enough to finish the current job.</p>\n<p>The MaxDisk keyword specifies the amount of disk storage available for scratch data. But some jobs, like CCSD, CCSD(T), QCISD(T), and BD(T) energies have fixed disk which cannot be limited by MaxDisk. In this case, if the disk storage is not enough, we will get error information like:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Semi-Direct transformation.</span><br><span class=\"line\">ModeAB=           4 MOrb=            51 LenV=   26834989397</span><br><span class=\"line\">LASXX=   3675829080 LTotXX=  3675829080 LenRXX=  7405142880</span><br><span class=\"line\">LTotAB=  3729313800 MaxLAS=  4334140395 LenRXY=           0</span><br><span class=\"line\">NonZer= 11080971960 LenScr= 22248854016 LnRSAI=  4334140395</span><br><span class=\"line\">LnScr1=  8702274560 LExtra=   897554704 Total=  43587966555</span><br><span class=\"line\">MaxDsk= 13421772800 SrtSym=           T ITran=            4</span><br><span class=\"line\">Transformation cannot fit in the specified MaxDisk.</span><br><span class=\"line\">Error termination via Lnk1e in /sw/contrib/gaussian/g16/B01/g16/l804.exe at Wed Dec 19 01:05:37 2018.</span><br><span class=\"line\">Job cpu time:       0 days  7 hours 19 minutes 44.3 seconds.</span><br><span class=\"line\">Elapsed time:       0 days  0 hours 15 minutes 43.2 seconds.</span><br><span class=\"line\">File lengths (MBytes):  RWF=  63349 Int=      0 D2E=      0 Chk=     16 Scr=      1</span><br></pre></td></tr></table></figure>\n<p>Where, <code>MaxDsk=13421772800</code> means I uses <code>maxdisk=100G</code> ($\\frac{13421772800\\times8}{1024^3}$); <code>Total=43587966555</code> means the minimum disk should be 325G ($\\frac{43587966555\\times8}{1024^3}$).</p>\n<p>For Hyak, there is around 100G storage space for one node. So we can locate the largest scratch file (read and write file) to <code>/gscratch/scrubbed/username/</code> like:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%rwf=/gscratch/scrubbed/yueliu96/test.rwf</span><br><span class=\"line\">%nosave</span><br></pre></td></tr></table></figure>"},{"title":"Hyak Tips","date":"2018-12-31T21:41:04.000Z","_content":"\nTips on: [file transfer](#scp) | [memory & disk space](#memdisk) | [python scripts](#pyscripts) | [squeue format](#squeue) | to be continue...\n\nHyak Mox Overview website: [click me](https://wiki.cac.washington.edu/display/hyakusers/Hyak+mox+Overview)\n\n# <jump id='scp'>File Transfer</jump>\n\n- from ikt to mox\n  \n  ```\n  hyakbbcp myfile mox1.hyak.uw.edu:mydirectory\n  hyakbbcp -r myfolder mox1.hyak.uw.edu:mydirectory\n  ```\n\n- from mox to ikt\n\n  ```\n  hyakbbcp myfile ikt1.hyak.uw.edu:mydirectory\n  hyakbbcp -r myfolder ikt1.hyak.uw.edu:mydirectory\n  ```\n- into hyak\n  \n  ```\n  scp myfile user@mox.hyak.uw.edu:path/of/destination\n  ```\n- out of hyak\n  \n  ```\n  scp user@ikt.hyak.uw.edu:path/of/your/file .\n  ```\n\n- into or out of hyak by sftp\n  \n  ```bash\n  sftp user@mox.hyak.uw.edu\n  get myfile   #move myfile from hyak to local direcotry\n  get -r myfolder \n  put myfile   #move myfile from local directory to hyak\n  put -r myfolder\n  ls           #list files and folders on hyak directory\n  lls          #list files and folders on local directory\n  ```\n\n# <jump id='memdisk'>Memory and Disk Space\n\n- Commonality\n  - Place to hold data\n  - Unit: bytes, kilobytes, megabytes, etc\n- Difference\n  - Memory is known as random access memory (RAM), which stores actively running programs on the computer. The more memory is, the more it is able to run complex programs and more programs at the same time.\n  - Disk space is a spindle of magnetic discs to store files you download, install or save.\n- Command\n  - mem: `free -g` (g:GB,m:MB,k:KB)\n  - disk space: \n    - `df -h`\n    - Hyak has usage_report.txt available on every partition (e.g. /gscratch/stf/usage_report.txt) recording the disk space usage. One can quickly know the usage by writing a simple python scripts:\n    \n    ```python\n    #!/usr/bin/env python\n\n    PTT = ['stf','chem','ilahie','scrubbed']\n    try:\n        print('%-10s%-12s%-12s%-12s%-12s%-15s%-16s' % ('Name','Use(GB)','Quota(GB)','Limit(GB)','Files','FilesQuota','FilesLimit'))\n        for p in PTT:\n            f = '/gscratch/'+p+'/usage_report.txt'\n            with open(f,'r') as fo:\n                lines = fo.readlines()\n            s = lines[2].split()\n            print('%-10s%-12s%-12s%-12s%-12s%-15s%-16s' % (s[0],s[2],s[3],s[4],s[6],s[7],s[8]))\n    except BaseException as err:\n        print(err)\n    ```\n\n    If store it to [gscratch_space.py](https://github.com/yueliu96/scripts_for_lab/blob/master/gscratch_space.py) in the home directory and run this script as `~/gscratch_space.py`, we can get:\n    \n    ```txt\n    Name      Use(GB)     Quota(GB)   Limit(GB)   Files       FilesQuota     FilesLimit      \n    stf       24437       45500       50050       3064981     68250000       75075000        \n    chem      8884        9000        9900        2327984     9000000        9900000         \n    ilahie    29325       35500       39050       1522158     53250000       58575000     \n    scrubbed  91518       200000      220000      12174263    200000000      220000000   \n    ```\n\n# <jump id='pyscripts'>Python Scripts</jump>\n\n- It's a good choice to store useful python scripts in user's home directory, whose quotas are set to 10 GB with a limit of 5,000 files. \n- Python scripts starting with `#!/usr/bin/env python`, can be executed by `directory/pyfile ...` besides `python pyfile ...`. \n- Use `chmod u+x pyfile` if it isn't executable\n- Batch operation of python scripts by bash command `for ...; do ...; done`\n  - example: \n   \n     If *xyz2gjf$.$py* (usage: `python xyz2gjf.py xyz-file` )is in a subdirecotry *myscripts* of home directory, run `chmod u+x ~/myscripts/xyz2gjf.py` first if it is not executable, move to a directory containing several xyz files and run `for i in *xyz; do ~/myscripts/xyz2gjf.py $i; done` to convert all *xyz files to gjf format.\n\n# <jump id='squeue'>Squeue Format</jump>\n\nadd `export SQUEUE_FORMAT=\"the-format-you-like\"` to /.bash_profile file and then run `source /.bash_profile`\n\n- My own version:\n  \n  ```bash\n  export SQUEUE_FORMAT=\"%.7i %9P %15j %.8u %.2t %.12M %.12L %.5C %.7m  %.4D %R\"\n  ```\n    what is like:\n\n    ```\n      JOBID PARTITION NAME          USER ST         TIME    TIME_LEFT  CPUS MIN_MEM  NODE NODELIST(REASON)\n     547841 chem      gN1_ccsd  yueliu96  R   1-23:14:00  10-12:46:00    28    245G     1 n2079  \n    ```\n- Note:\n  - `%.`: align rigt\n  - `%` withou dot: aligh left\n  - integer: length of occupied space\n  - different letters correspond to diffrent items, see [link](https://slurm.schedmd.com/squeue.html) for details\n\n","source":"_posts/Hyak-Tips.md","raw":"---\ntitle: Hyak Tips\ndate: 2018-12-31 13:41:04\ntags:\n- Hyak\ncategories:\n- Turecek Lab Tutorial\n---\n\nTips on: [file transfer](#scp) | [memory & disk space](#memdisk) | [python scripts](#pyscripts) | [squeue format](#squeue) | to be continue...\n\nHyak Mox Overview website: [click me](https://wiki.cac.washington.edu/display/hyakusers/Hyak+mox+Overview)\n\n# <jump id='scp'>File Transfer</jump>\n\n- from ikt to mox\n  \n  ```\n  hyakbbcp myfile mox1.hyak.uw.edu:mydirectory\n  hyakbbcp -r myfolder mox1.hyak.uw.edu:mydirectory\n  ```\n\n- from mox to ikt\n\n  ```\n  hyakbbcp myfile ikt1.hyak.uw.edu:mydirectory\n  hyakbbcp -r myfolder ikt1.hyak.uw.edu:mydirectory\n  ```\n- into hyak\n  \n  ```\n  scp myfile user@mox.hyak.uw.edu:path/of/destination\n  ```\n- out of hyak\n  \n  ```\n  scp user@ikt.hyak.uw.edu:path/of/your/file .\n  ```\n\n- into or out of hyak by sftp\n  \n  ```bash\n  sftp user@mox.hyak.uw.edu\n  get myfile   #move myfile from hyak to local direcotry\n  get -r myfolder \n  put myfile   #move myfile from local directory to hyak\n  put -r myfolder\n  ls           #list files and folders on hyak directory\n  lls          #list files and folders on local directory\n  ```\n\n# <jump id='memdisk'>Memory and Disk Space\n\n- Commonality\n  - Place to hold data\n  - Unit: bytes, kilobytes, megabytes, etc\n- Difference\n  - Memory is known as random access memory (RAM), which stores actively running programs on the computer. The more memory is, the more it is able to run complex programs and more programs at the same time.\n  - Disk space is a spindle of magnetic discs to store files you download, install or save.\n- Command\n  - mem: `free -g` (g:GB,m:MB,k:KB)\n  - disk space: \n    - `df -h`\n    - Hyak has usage_report.txt available on every partition (e.g. /gscratch/stf/usage_report.txt) recording the disk space usage. One can quickly know the usage by writing a simple python scripts:\n    \n    ```python\n    #!/usr/bin/env python\n\n    PTT = ['stf','chem','ilahie','scrubbed']\n    try:\n        print('%-10s%-12s%-12s%-12s%-12s%-15s%-16s' % ('Name','Use(GB)','Quota(GB)','Limit(GB)','Files','FilesQuota','FilesLimit'))\n        for p in PTT:\n            f = '/gscratch/'+p+'/usage_report.txt'\n            with open(f,'r') as fo:\n                lines = fo.readlines()\n            s = lines[2].split()\n            print('%-10s%-12s%-12s%-12s%-12s%-15s%-16s' % (s[0],s[2],s[3],s[4],s[6],s[7],s[8]))\n    except BaseException as err:\n        print(err)\n    ```\n\n    If store it to [gscratch_space.py](https://github.com/yueliu96/scripts_for_lab/blob/master/gscratch_space.py) in the home directory and run this script as `~/gscratch_space.py`, we can get:\n    \n    ```txt\n    Name      Use(GB)     Quota(GB)   Limit(GB)   Files       FilesQuota     FilesLimit      \n    stf       24437       45500       50050       3064981     68250000       75075000        \n    chem      8884        9000        9900        2327984     9000000        9900000         \n    ilahie    29325       35500       39050       1522158     53250000       58575000     \n    scrubbed  91518       200000      220000      12174263    200000000      220000000   \n    ```\n\n# <jump id='pyscripts'>Python Scripts</jump>\n\n- It's a good choice to store useful python scripts in user's home directory, whose quotas are set to 10 GB with a limit of 5,000 files. \n- Python scripts starting with `#!/usr/bin/env python`, can be executed by `directory/pyfile ...` besides `python pyfile ...`. \n- Use `chmod u+x pyfile` if it isn't executable\n- Batch operation of python scripts by bash command `for ...; do ...; done`\n  - example: \n   \n     If *xyz2gjf$.$py* (usage: `python xyz2gjf.py xyz-file` )is in a subdirecotry *myscripts* of home directory, run `chmod u+x ~/myscripts/xyz2gjf.py` first if it is not executable, move to a directory containing several xyz files and run `for i in *xyz; do ~/myscripts/xyz2gjf.py $i; done` to convert all *xyz files to gjf format.\n\n# <jump id='squeue'>Squeue Format</jump>\n\nadd `export SQUEUE_FORMAT=\"the-format-you-like\"` to /.bash_profile file and then run `source /.bash_profile`\n\n- My own version:\n  \n  ```bash\n  export SQUEUE_FORMAT=\"%.7i %9P %15j %.8u %.2t %.12M %.12L %.5C %.7m  %.4D %R\"\n  ```\n    what is like:\n\n    ```\n      JOBID PARTITION NAME          USER ST         TIME    TIME_LEFT  CPUS MIN_MEM  NODE NODELIST(REASON)\n     547841 chem      gN1_ccsd  yueliu96  R   1-23:14:00  10-12:46:00    28    245G     1 n2079  \n    ```\n- Note:\n  - `%.`: align rigt\n  - `%` withou dot: aligh left\n  - integer: length of occupied space\n  - different letters correspond to diffrent items, see [link](https://slurm.schedmd.com/squeue.html) for details\n\n","slug":"Hyak-Tips","published":1,"updated":"2019-01-23T06:33:27.916Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrcn2vm00005ua5s4n04omeh","content":"<p>Tips on: <a href=\"#scp\">file transfer</a> | <a href=\"#memdisk\">memory &amp; disk space</a> | <a href=\"#pyscripts\">python scripts</a> | <a href=\"#squeue\">squeue format</a> | to be continue…</p>\n<p>Hyak Mox Overview website: <a href=\"https://wiki.cac.washington.edu/display/hyakusers/Hyak+mox+Overview\" target=\"_blank\" rel=\"noopener\">click me</a></p>\n<h1 id=\"File-Transfer\"><a href=\"#File-Transfer\" class=\"headerlink\" title=\"File Transfer\"></a><jump id=\"scp\">File Transfer</jump></h1><ul>\n<li><p>from ikt to mox</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hyakbbcp myfile mox1.hyak.uw.edu:mydirectory</span><br><span class=\"line\">hyakbbcp -r myfolder mox1.hyak.uw.edu:mydirectory</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>from mox to ikt</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hyakbbcp myfile ikt1.hyak.uw.edu:mydirectory</span><br><span class=\"line\">hyakbbcp -r myfolder ikt1.hyak.uw.edu:mydirectory</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>into hyak</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp myfile user@mox.hyak.uw.edu:path/of/destination</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>out of hyak</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp user@ikt.hyak.uw.edu:path/of/your/file .</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>into or out of hyak by sftp</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sftp user@mox.hyak.uw.edu</span><br><span class=\"line\">get myfile   <span class=\"comment\">#move myfile from hyak to local direcotry</span></span><br><span class=\"line\">get -r myfolder </span><br><span class=\"line\">put myfile   <span class=\"comment\">#move myfile from local directory to hyak</span></span><br><span class=\"line\">put -r myfolder</span><br><span class=\"line\">ls           <span class=\"comment\">#list files and folders on hyak directory</span></span><br><span class=\"line\">lls          <span class=\"comment\">#list files and folders on local directory</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"Memory-and-Disk-Space\"><a href=\"#Memory-and-Disk-Space\" class=\"headerlink\" title=\"Memory and Disk Space\"></a><jump id=\"memdisk\">Memory and Disk Space</jump></h1><ul>\n<li>Commonality<ul>\n<li>Place to hold data</li>\n<li>Unit: bytes, kilobytes, megabytes, etc</li>\n</ul>\n</li>\n<li>Difference<ul>\n<li>Memory is known as random access memory (RAM), which stores actively running programs on the computer. The more memory is, the more it is able to run complex programs and more programs at the same time.</li>\n<li>Disk space is a spindle of magnetic discs to store files you download, install or save.</li>\n</ul>\n</li>\n<li><p>Command</p>\n<ul>\n<li>mem: <code>free -g</code> (g:GB,m:MB,k:KB)</li>\n<li><p>disk space: </p>\n<ul>\n<li><code>df -h</code></li>\n<li>Hyak has usage_report.txt available on every partition (e.g. /gscratch/stf/usage_report.txt) recording the disk space usage. One can quickly know the usage by writing a simple python scripts:</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"></span><br><span class=\"line\">PTT = [<span class=\"string\">'stf'</span>,<span class=\"string\">'chem'</span>,<span class=\"string\">'ilahie'</span>,<span class=\"string\">'scrubbed'</span>]</span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    print(<span class=\"string\">'%-10s%-12s%-12s%-12s%-12s%-15s%-16s'</span> % (<span class=\"string\">'Name'</span>,<span class=\"string\">'Use(GB)'</span>,<span class=\"string\">'Quota(GB)'</span>,<span class=\"string\">'Limit(GB)'</span>,<span class=\"string\">'Files'</span>,<span class=\"string\">'FilesQuota'</span>,<span class=\"string\">'FilesLimit'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">for</span> p <span class=\"keyword\">in</span> PTT:</span><br><span class=\"line\">        f = <span class=\"string\">'/gscratch/'</span>+p+<span class=\"string\">'/usage_report.txt'</span></span><br><span class=\"line\">        <span class=\"keyword\">with</span> open(f,<span class=\"string\">'r'</span>) <span class=\"keyword\">as</span> fo:</span><br><span class=\"line\">            lines = fo.readlines()</span><br><span class=\"line\">        s = lines[<span class=\"number\">2</span>].split()</span><br><span class=\"line\">        print(<span class=\"string\">'%-10s%-12s%-12s%-12s%-12s%-15s%-16s'</span> % (s[<span class=\"number\">0</span>],s[<span class=\"number\">2</span>],s[<span class=\"number\">3</span>],s[<span class=\"number\">4</span>],s[<span class=\"number\">6</span>],s[<span class=\"number\">7</span>],s[<span class=\"number\">8</span>]))</span><br><span class=\"line\"><span class=\"keyword\">except</span> BaseException <span class=\"keyword\">as</span> err:</span><br><span class=\"line\">    print(err)</span><br></pre></td></tr></table></figure>\n<p>If store it to <a href=\"https://github.com/yueliu96/scripts_for_lab/blob/master/gscratch_space.py\" target=\"_blank\" rel=\"noopener\">gscratch_space.py</a> in the home directory and run this script as <code>~/gscratch_space.py</code>, we can get:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Name      Use(GB)     Quota(GB)   Limit(GB)   Files       FilesQuota     FilesLimit      </span><br><span class=\"line\">stf       24437       45500       50050       3064981     68250000       75075000        </span><br><span class=\"line\">chem      8884        9000        9900        2327984     9000000        9900000         </span><br><span class=\"line\">ilahie    29325       35500       39050       1522158     53250000       58575000     </span><br><span class=\"line\">scrubbed  91518       200000      220000      12174263    200000000      220000000</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"Python-Scripts\"><a href=\"#Python-Scripts\" class=\"headerlink\" title=\"Python Scripts\"></a><jump id=\"pyscripts\">Python Scripts</jump></h1><ul>\n<li>It’s a good choice to store useful python scripts in user’s home directory, whose quotas are set to 10 GB with a limit of 5,000 files. </li>\n<li>Python scripts starting with <code>#!/usr/bin/env python</code>, can be executed by <code>directory/pyfile ...</code> besides <code>python pyfile ...</code>. </li>\n<li>Use <code>chmod u+x pyfile</code> if it isn’t executable</li>\n<li><p>Batch operation of python scripts by bash command <code>for ...; do ...; done</code></p>\n<ul>\n<li><p>example: </p>\n<p> If <em>xyz2gjf$.$py</em> (usage: <code>python xyz2gjf.py xyz-file</code> )is in a subdirecotry <em>myscripts</em> of home directory, run <code>chmod u+x ~/myscripts/xyz2gjf.py</code> first if it is not executable, move to a directory containing several xyz files and run <code>for i in *xyz; do ~/myscripts/xyz2gjf.py $i; done</code> to convert all *xyz files to gjf format.</p>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"Squeue-Format\"><a href=\"#Squeue-Format\" class=\"headerlink\" title=\"Squeue Format\"></a><jump id=\"squeue\">Squeue Format</jump></h1><p>add <code>export SQUEUE_FORMAT=&quot;the-format-you-like&quot;</code> to /.bash_profile file and then run <code>source /.bash_profile</code></p>\n<ul>\n<li><p>My own version:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> SQUEUE_FORMAT=<span class=\"string\">\"%.7i %9P %15j %.8u %.2t %.12M %.12L %.5C %.7m  %.4D %R\"</span></span><br></pre></td></tr></table></figure>\n<p>  what is like:</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> JOBID PARTITION NAME          USER ST         TIME    TIME_LEFT  CPUS MIN_MEM  NODE NODELIST(REASON)</span><br><span class=\"line\">547841 chem      gN1_ccsd  yueliu96  R   1-23:14:00  10-12:46:00    28    245G     1 n2079</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Note:</p>\n<ul>\n<li><code>%.</code>: align rigt</li>\n<li><code>%</code> withou dot: aligh left</li>\n<li>integer: length of occupied space</li>\n<li>different letters correspond to diffrent items, see <a href=\"https://slurm.schedmd.com/squeue.html\" target=\"_blank\" rel=\"noopener\">link</a> for details</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>Tips on: <a href=\"#scp\">file transfer</a> | <a href=\"#memdisk\">memory &amp; disk space</a> | <a href=\"#pyscripts\">python scripts</a> | <a href=\"#squeue\">squeue format</a> | to be continue…</p>\n<p>Hyak Mox Overview website: <a href=\"https://wiki.cac.washington.edu/display/hyakusers/Hyak+mox+Overview\" target=\"_blank\" rel=\"noopener\">click me</a></p>\n<h1 id=\"File-Transfer\"><a href=\"#File-Transfer\" class=\"headerlink\" title=\"File Transfer\"></a><jump id=\"scp\">File Transfer</jump></h1><ul>\n<li><p>from ikt to mox</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hyakbbcp myfile mox1.hyak.uw.edu:mydirectory</span><br><span class=\"line\">hyakbbcp -r myfolder mox1.hyak.uw.edu:mydirectory</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>from mox to ikt</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hyakbbcp myfile ikt1.hyak.uw.edu:mydirectory</span><br><span class=\"line\">hyakbbcp -r myfolder ikt1.hyak.uw.edu:mydirectory</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>into hyak</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp myfile user@mox.hyak.uw.edu:path/of/destination</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>out of hyak</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp user@ikt.hyak.uw.edu:path/of/your/file .</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>into or out of hyak by sftp</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sftp user@mox.hyak.uw.edu</span><br><span class=\"line\">get myfile   <span class=\"comment\">#move myfile from hyak to local direcotry</span></span><br><span class=\"line\">get -r myfolder </span><br><span class=\"line\">put myfile   <span class=\"comment\">#move myfile from local directory to hyak</span></span><br><span class=\"line\">put -r myfolder</span><br><span class=\"line\">ls           <span class=\"comment\">#list files and folders on hyak directory</span></span><br><span class=\"line\">lls          <span class=\"comment\">#list files and folders on local directory</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"Memory-and-Disk-Space\"><a href=\"#Memory-and-Disk-Space\" class=\"headerlink\" title=\"Memory and Disk Space\"></a><jump id=\"memdisk\">Memory and Disk Space</jump></h1><ul>\n<li>Commonality<ul>\n<li>Place to hold data</li>\n<li>Unit: bytes, kilobytes, megabytes, etc</li>\n</ul>\n</li>\n<li>Difference<ul>\n<li>Memory is known as random access memory (RAM), which stores actively running programs on the computer. The more memory is, the more it is able to run complex programs and more programs at the same time.</li>\n<li>Disk space is a spindle of magnetic discs to store files you download, install or save.</li>\n</ul>\n</li>\n<li><p>Command</p>\n<ul>\n<li>mem: <code>free -g</code> (g:GB,m:MB,k:KB)</li>\n<li><p>disk space: </p>\n<ul>\n<li><code>df -h</code></li>\n<li>Hyak has usage_report.txt available on every partition (e.g. /gscratch/stf/usage_report.txt) recording the disk space usage. One can quickly know the usage by writing a simple python scripts:</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"></span><br><span class=\"line\">PTT = [<span class=\"string\">'stf'</span>,<span class=\"string\">'chem'</span>,<span class=\"string\">'ilahie'</span>,<span class=\"string\">'scrubbed'</span>]</span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    print(<span class=\"string\">'%-10s%-12s%-12s%-12s%-12s%-15s%-16s'</span> % (<span class=\"string\">'Name'</span>,<span class=\"string\">'Use(GB)'</span>,<span class=\"string\">'Quota(GB)'</span>,<span class=\"string\">'Limit(GB)'</span>,<span class=\"string\">'Files'</span>,<span class=\"string\">'FilesQuota'</span>,<span class=\"string\">'FilesLimit'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">for</span> p <span class=\"keyword\">in</span> PTT:</span><br><span class=\"line\">        f = <span class=\"string\">'/gscratch/'</span>+p+<span class=\"string\">'/usage_report.txt'</span></span><br><span class=\"line\">        <span class=\"keyword\">with</span> open(f,<span class=\"string\">'r'</span>) <span class=\"keyword\">as</span> fo:</span><br><span class=\"line\">            lines = fo.readlines()</span><br><span class=\"line\">        s = lines[<span class=\"number\">2</span>].split()</span><br><span class=\"line\">        print(<span class=\"string\">'%-10s%-12s%-12s%-12s%-12s%-15s%-16s'</span> % (s[<span class=\"number\">0</span>],s[<span class=\"number\">2</span>],s[<span class=\"number\">3</span>],s[<span class=\"number\">4</span>],s[<span class=\"number\">6</span>],s[<span class=\"number\">7</span>],s[<span class=\"number\">8</span>]))</span><br><span class=\"line\"><span class=\"keyword\">except</span> BaseException <span class=\"keyword\">as</span> err:</span><br><span class=\"line\">    print(err)</span><br></pre></td></tr></table></figure>\n<p>If store it to <a href=\"https://github.com/yueliu96/scripts_for_lab/blob/master/gscratch_space.py\" target=\"_blank\" rel=\"noopener\">gscratch_space.py</a> in the home directory and run this script as <code>~/gscratch_space.py</code>, we can get:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Name      Use(GB)     Quota(GB)   Limit(GB)   Files       FilesQuota     FilesLimit      </span><br><span class=\"line\">stf       24437       45500       50050       3064981     68250000       75075000        </span><br><span class=\"line\">chem      8884        9000        9900        2327984     9000000        9900000         </span><br><span class=\"line\">ilahie    29325       35500       39050       1522158     53250000       58575000     </span><br><span class=\"line\">scrubbed  91518       200000      220000      12174263    200000000      220000000</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"Python-Scripts\"><a href=\"#Python-Scripts\" class=\"headerlink\" title=\"Python Scripts\"></a><jump id=\"pyscripts\">Python Scripts</jump></h1><ul>\n<li>It’s a good choice to store useful python scripts in user’s home directory, whose quotas are set to 10 GB with a limit of 5,000 files. </li>\n<li>Python scripts starting with <code>#!/usr/bin/env python</code>, can be executed by <code>directory/pyfile ...</code> besides <code>python pyfile ...</code>. </li>\n<li>Use <code>chmod u+x pyfile</code> if it isn’t executable</li>\n<li><p>Batch operation of python scripts by bash command <code>for ...; do ...; done</code></p>\n<ul>\n<li><p>example: </p>\n<p> If <em>xyz2gjf$.$py</em> (usage: <code>python xyz2gjf.py xyz-file</code> )is in a subdirecotry <em>myscripts</em> of home directory, run <code>chmod u+x ~/myscripts/xyz2gjf.py</code> first if it is not executable, move to a directory containing several xyz files and run <code>for i in *xyz; do ~/myscripts/xyz2gjf.py $i; done</code> to convert all *xyz files to gjf format.</p>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"Squeue-Format\"><a href=\"#Squeue-Format\" class=\"headerlink\" title=\"Squeue Format\"></a><jump id=\"squeue\">Squeue Format</jump></h1><p>add <code>export SQUEUE_FORMAT=&quot;the-format-you-like&quot;</code> to /.bash_profile file and then run <code>source /.bash_profile</code></p>\n<ul>\n<li><p>My own version:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> SQUEUE_FORMAT=<span class=\"string\">\"%.7i %9P %15j %.8u %.2t %.12M %.12L %.5C %.7m  %.4D %R\"</span></span><br></pre></td></tr></table></figure>\n<p>  what is like:</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> JOBID PARTITION NAME          USER ST         TIME    TIME_LEFT  CPUS MIN_MEM  NODE NODELIST(REASON)</span><br><span class=\"line\">547841 chem      gN1_ccsd  yueliu96  R   1-23:14:00  10-12:46:00    28    245G     1 n2079</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Note:</p>\n<ul>\n<li><code>%.</code>: align rigt</li>\n<li><code>%</code> withou dot: aligh left</li>\n<li>integer: length of occupied space</li>\n<li>different letters correspond to diffrent items, see <a href=\"https://slurm.schedmd.com/squeue.html\" target=\"_blank\" rel=\"noopener\">link</a> for details</li>\n</ul>\n</li>\n</ul>\n"},{"title":"Newton-X on Hyak","date":"2018-12-31T04:30:09.000Z","_content":"\n*[Newton-X](http://www.newtonx.org) is a general-purpose program package for excited-state molecular dynamics, which is used to simulate absorption spectrum with GAUSSIAN09 in our group.*\n\n*Input-file setup and output analysis are introduced here or could be found on its website. A fast setup could be achieved by [my python script](#pscript). Scripts attached here can run both in python2 and in python3.*\n\n# Newton-X Setup\n\n## Procedures\n\n### 1. geometry and normal mode input\n\nIn the working directory prepare two files: one is the optimized geometry in gaussian input format and the other is the normal mode calculation output file (gaussian frequency log file, usually calcuated with b3lyp method):\n\n`opt.gjf  freq.log`\n\n### 2. load newton-x environment\n\nTo work in the newton-x environment on Hyak, run `module load contrib/newtonX` or `module load contrib/newton-x`. Their difference is that newton-x contains other package like gaussin09. \n\nWe can check if we load successfully by command `$NX`, which should produce an info `-bash: /sw/contrib/newtonX/NX-2-B17/bin: Is a directory`. Or run `module list` to see all packages availabe to use.\n\n### 3. convert optimized geometry into newton-x format\n\nConvert optimized geometry (opt.gjf) into xyz format first, could be achieved by script [gjfcom2xyz.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/gjfcom2xyz.py): `python gjfcom2xyz.py opt.gjf`. opt.xyz could be produced.\n\n`$NX/xyz2nx < opt.xyz` generates newton-x geometry file named *geom*, whose second column is the atomic number, the following three columns are x, y and z coordinates in atomic units (*Bohr*) and the last one contains the atomic masses.\n\n### 4. newton-x working directory\n\nCreat a new directory *TDDFT_SPEC* in the working directory, copy/move *geom* to it, copy/move *freq.log* to it with a new name *freq.out*: \n\n```\nmkdir TDDFT_SPEC\nmv geom TDDFT_SPEC\ncp freq.log TDDFT_SPEC/freq.out\n```\n\n### 5. energy and transition moment input\n\nMove to the directory *TDDFT_SPEC* and create a new subdirectory called *JOB_AD*. Move into *JOB_AD* and prepare two files named, *basis* and *gaussian$.$com*. \n*basis* contains the basis set information, like `6-31+g(d,p)`. *gaussian$.$com* is same with the very first optimized geometry file *opt.gjf* but with different link command lines and route card, like (%rwf and %nosave could be deleted):\n\n```\n%mem=100gb\n%nprocshared=28\n%rwf=gaussian\n%nosave\n%chk=gaussian\n# TD(NStates=10) m062xd/6-31+g(d,p)  pop=none scf=(xqc,tight) Symmetry=None\n```\n\nNote that the subdirectory must be named with *JOB_AD* and the name of these two files must be *basis* and *gaussian$.$com* since Newton-X will search for them.\n\n### 6. newton-x input\n\nBack to the directory *TDDFT_SPEC*, use command `$NX/nxinp` and answer several quesitons by instructions to genetrate the newton-x input file *initqp_input*. Answers to the questions are `1; 2; numer of atoms; 300 (number of initial conditions); geom; 4; freq.out; 1; 310 (temperature); n; 1; 1 (ground state); number of states; 1; 100; 6.5; 0; 1; 7 (exit)`, respectively.\n\n### 7. splitting jobs\n\nThis step is to split the job among several computers (nodes), could be skipped and go directly to run the newton-x by `$NX/initcond.pl > initcond.log`.\n\n To split the job, run `NX/split_initcond.pl` in the directory *TDDFT_SPEC*. Two questions will be asked, the first one is the number of directories to split the job and the second one is if the job run in a batch system. This program produces one file named *split_initcond.log* and a directory called *INITIAL_CONDITIONS*. If the answer to the first quesiton is 10, 10 subdirectories called *I1,I2,...,I10* are inside *INITIAL_CONDITIONS*, each one containing a complete set of input files but with 30 (300 $\\div$ 10) initial conditions and iseed=-1 not 0.\n\n ### 8. submit newton-x job\n\nIn every directory containing a complete set of input files  (geom, freq.out, initqp_input and JOB_AD), create a sbatch file to submit the job to Hyak node.\n\n```bash\n#!/bin/bash\n#SBATCH --job-name=???\n#SBATCH --nodes=1\n#SBATCH --ntasks-per-node=28\n#SBATCH --time=??:00:00\n#SBATCH --mem=???G\n#SABTCH --workdir=???????\n#SBATCH --partition=???\n#SBATCH --account=???\n\necho 'This job will run on' $SLURM_JOB_NODELIST\n#set up time\nbegin=$(date +%s)\n\n#load newtonx and gauss09 environment\nmodule load contrib/newton-x\n\n$NX/initcond.pl > initcond.log\n\nend=$(date +%s)\necho 'Elapsed Time: '$(($end-$begin))'s'\n```\n\n## <jump id='pscript'>Scripts</jump>\n\n  python script [newtonx.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/newtonx.py) can do exactly what step 2 to step 8 do.\n\n- *Usage*\n  - `python newtonx.py geometry-gif-file freq-log`\n- *Descriptions*\n  - *TDDFT_SPEC* folder is created, which contains *geom*, *freq.log*, *initqp_input*, *split_initcond.log*, *newtonx$.$sh*, *JOB_AD*, *INITIAL_CONDITIONS*\n  - *I1 I2 ...* in *INITIAL_CONDITIONS*, each subfolder containing a complete set input -- *geom*, *freq.out*, *initqp_input* (iseed=1234,2468,...), *JOB_AD* and a sbatch file -- *nx_submit.sh*\n  - *nx_submit.sh* is the sbatch file same with what is listed in step 8, but with partition=ckpt, account=stf-ckpt.\n  - *newtonx$.$sh* contains a list of bash command like: `cd absolute-path-of-I1; sbatch -p ckpt -A stf-ckpt --time=20:00:00 nx_submit.sh`\n  - after satisfied with everything, run `bash newtonx.sh` to submit all jobs to hyak nodes; the final partition, account and time are decided by the setting in *newtonx$.$sh* even if *newtonx$.$sh* is different from *nx_submit.sh*\n- *Note*\n  - why ckpt?\n    - increasing the number of splitting jobs speeds up the task greatly\n    - [ckpt queue](https://wiki.cac.washington.edu/display/hyakusers/Mox_checkpoint) is a good choice to run short jobs that finish within 4 hours\n  - why iseed=1234,2468,...,1234*n?\n    - different iseed values guarantee no repeated jobs\n    - iseed=-1 may generate a super large number not suit for ckpt queue\n  \n# Newton-X Result\n\n## Procedures\n\n### merge splitting jobs\n\nAfter all sub-tasks finish, go to the directory *INITIAL_CONDITIONS* and run `$NX/merge_initcond.pl`. This program will ask the number of jobs to be merged and it will create a new directory called *I_merged* with merged results. All important data are in *final_optput.1.N* file, which contains transition information from state 1 to state *N*. \n\n### spectrum simulation\n\nMove to this directory and proceed with the spectrum simulation by command `$NX/nxinp`. The answers to the questions it will ask are `5 (spectra); 1 (spectra); 1 (initial state); 2-N (array of final states); F (Absorption); 0 (no restriction); -1; local; 1 (random seed); lorentz; 0.1 (delta); 310 (temperature); 1; 0.005; 3; 7 (exit)`, among which delta contronls the width of the curve.\n\nThe simulated cross section using a Lorentzian line shape with phenomenological broadening $\\delta=0.1eV$ is written to *cross-section.dat*, containing four columns of data -- DE/ev, lambda/nm, sigma/A^2 and +/-error/A^2.\n\n## <jump id='pscript'>Script</jump>\n\nAll the above steps can be achieved by script [nxplot.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/nxplot.py). \n\n- *Usage*\n  - `python nxplot.py`\n  -  run inside the directory *INITIAL_CONDITIONS*\n- *Descriptions*\n  - check if jobs completed\n  - merge splitting jobs\n  - spectrum simulation\n  - extract the lamda and sigma columns if lamda within 0-1200nm from *cross-section.dat* and written to *cross-section.tsv*\n  - plot *cross-section.tsv* if in python3 environment\n\n","source":"_posts/Newton-X-on-Hyak.md","raw":"---\ntitle: Newton-X on Hyak\ndate: 2018-12-30 20:30:09\ntags:\n- Hyak\n- ComputChem\n- software\ncategories:\n- Turecek Lab Tutorial\n---\n\n*[Newton-X](http://www.newtonx.org) is a general-purpose program package for excited-state molecular dynamics, which is used to simulate absorption spectrum with GAUSSIAN09 in our group.*\n\n*Input-file setup and output analysis are introduced here or could be found on its website. A fast setup could be achieved by [my python script](#pscript). Scripts attached here can run both in python2 and in python3.*\n\n# Newton-X Setup\n\n## Procedures\n\n### 1. geometry and normal mode input\n\nIn the working directory prepare two files: one is the optimized geometry in gaussian input format and the other is the normal mode calculation output file (gaussian frequency log file, usually calcuated with b3lyp method):\n\n`opt.gjf  freq.log`\n\n### 2. load newton-x environment\n\nTo work in the newton-x environment on Hyak, run `module load contrib/newtonX` or `module load contrib/newton-x`. Their difference is that newton-x contains other package like gaussin09. \n\nWe can check if we load successfully by command `$NX`, which should produce an info `-bash: /sw/contrib/newtonX/NX-2-B17/bin: Is a directory`. Or run `module list` to see all packages availabe to use.\n\n### 3. convert optimized geometry into newton-x format\n\nConvert optimized geometry (opt.gjf) into xyz format first, could be achieved by script [gjfcom2xyz.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/gjfcom2xyz.py): `python gjfcom2xyz.py opt.gjf`. opt.xyz could be produced.\n\n`$NX/xyz2nx < opt.xyz` generates newton-x geometry file named *geom*, whose second column is the atomic number, the following three columns are x, y and z coordinates in atomic units (*Bohr*) and the last one contains the atomic masses.\n\n### 4. newton-x working directory\n\nCreat a new directory *TDDFT_SPEC* in the working directory, copy/move *geom* to it, copy/move *freq.log* to it with a new name *freq.out*: \n\n```\nmkdir TDDFT_SPEC\nmv geom TDDFT_SPEC\ncp freq.log TDDFT_SPEC/freq.out\n```\n\n### 5. energy and transition moment input\n\nMove to the directory *TDDFT_SPEC* and create a new subdirectory called *JOB_AD*. Move into *JOB_AD* and prepare two files named, *basis* and *gaussian$.$com*. \n*basis* contains the basis set information, like `6-31+g(d,p)`. *gaussian$.$com* is same with the very first optimized geometry file *opt.gjf* but with different link command lines and route card, like (%rwf and %nosave could be deleted):\n\n```\n%mem=100gb\n%nprocshared=28\n%rwf=gaussian\n%nosave\n%chk=gaussian\n# TD(NStates=10) m062xd/6-31+g(d,p)  pop=none scf=(xqc,tight) Symmetry=None\n```\n\nNote that the subdirectory must be named with *JOB_AD* and the name of these two files must be *basis* and *gaussian$.$com* since Newton-X will search for them.\n\n### 6. newton-x input\n\nBack to the directory *TDDFT_SPEC*, use command `$NX/nxinp` and answer several quesitons by instructions to genetrate the newton-x input file *initqp_input*. Answers to the questions are `1; 2; numer of atoms; 300 (number of initial conditions); geom; 4; freq.out; 1; 310 (temperature); n; 1; 1 (ground state); number of states; 1; 100; 6.5; 0; 1; 7 (exit)`, respectively.\n\n### 7. splitting jobs\n\nThis step is to split the job among several computers (nodes), could be skipped and go directly to run the newton-x by `$NX/initcond.pl > initcond.log`.\n\n To split the job, run `NX/split_initcond.pl` in the directory *TDDFT_SPEC*. Two questions will be asked, the first one is the number of directories to split the job and the second one is if the job run in a batch system. This program produces one file named *split_initcond.log* and a directory called *INITIAL_CONDITIONS*. If the answer to the first quesiton is 10, 10 subdirectories called *I1,I2,...,I10* are inside *INITIAL_CONDITIONS*, each one containing a complete set of input files but with 30 (300 $\\div$ 10) initial conditions and iseed=-1 not 0.\n\n ### 8. submit newton-x job\n\nIn every directory containing a complete set of input files  (geom, freq.out, initqp_input and JOB_AD), create a sbatch file to submit the job to Hyak node.\n\n```bash\n#!/bin/bash\n#SBATCH --job-name=???\n#SBATCH --nodes=1\n#SBATCH --ntasks-per-node=28\n#SBATCH --time=??:00:00\n#SBATCH --mem=???G\n#SABTCH --workdir=???????\n#SBATCH --partition=???\n#SBATCH --account=???\n\necho 'This job will run on' $SLURM_JOB_NODELIST\n#set up time\nbegin=$(date +%s)\n\n#load newtonx and gauss09 environment\nmodule load contrib/newton-x\n\n$NX/initcond.pl > initcond.log\n\nend=$(date +%s)\necho 'Elapsed Time: '$(($end-$begin))'s'\n```\n\n## <jump id='pscript'>Scripts</jump>\n\n  python script [newtonx.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/newtonx.py) can do exactly what step 2 to step 8 do.\n\n- *Usage*\n  - `python newtonx.py geometry-gif-file freq-log`\n- *Descriptions*\n  - *TDDFT_SPEC* folder is created, which contains *geom*, *freq.log*, *initqp_input*, *split_initcond.log*, *newtonx$.$sh*, *JOB_AD*, *INITIAL_CONDITIONS*\n  - *I1 I2 ...* in *INITIAL_CONDITIONS*, each subfolder containing a complete set input -- *geom*, *freq.out*, *initqp_input* (iseed=1234,2468,...), *JOB_AD* and a sbatch file -- *nx_submit.sh*\n  - *nx_submit.sh* is the sbatch file same with what is listed in step 8, but with partition=ckpt, account=stf-ckpt.\n  - *newtonx$.$sh* contains a list of bash command like: `cd absolute-path-of-I1; sbatch -p ckpt -A stf-ckpt --time=20:00:00 nx_submit.sh`\n  - after satisfied with everything, run `bash newtonx.sh` to submit all jobs to hyak nodes; the final partition, account and time are decided by the setting in *newtonx$.$sh* even if *newtonx$.$sh* is different from *nx_submit.sh*\n- *Note*\n  - why ckpt?\n    - increasing the number of splitting jobs speeds up the task greatly\n    - [ckpt queue](https://wiki.cac.washington.edu/display/hyakusers/Mox_checkpoint) is a good choice to run short jobs that finish within 4 hours\n  - why iseed=1234,2468,...,1234*n?\n    - different iseed values guarantee no repeated jobs\n    - iseed=-1 may generate a super large number not suit for ckpt queue\n  \n# Newton-X Result\n\n## Procedures\n\n### merge splitting jobs\n\nAfter all sub-tasks finish, go to the directory *INITIAL_CONDITIONS* and run `$NX/merge_initcond.pl`. This program will ask the number of jobs to be merged and it will create a new directory called *I_merged* with merged results. All important data are in *final_optput.1.N* file, which contains transition information from state 1 to state *N*. \n\n### spectrum simulation\n\nMove to this directory and proceed with the spectrum simulation by command `$NX/nxinp`. The answers to the questions it will ask are `5 (spectra); 1 (spectra); 1 (initial state); 2-N (array of final states); F (Absorption); 0 (no restriction); -1; local; 1 (random seed); lorentz; 0.1 (delta); 310 (temperature); 1; 0.005; 3; 7 (exit)`, among which delta contronls the width of the curve.\n\nThe simulated cross section using a Lorentzian line shape with phenomenological broadening $\\delta=0.1eV$ is written to *cross-section.dat*, containing four columns of data -- DE/ev, lambda/nm, sigma/A^2 and +/-error/A^2.\n\n## <jump id='pscript'>Script</jump>\n\nAll the above steps can be achieved by script [nxplot.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/nxplot.py). \n\n- *Usage*\n  - `python nxplot.py`\n  -  run inside the directory *INITIAL_CONDITIONS*\n- *Descriptions*\n  - check if jobs completed\n  - merge splitting jobs\n  - spectrum simulation\n  - extract the lamda and sigma columns if lamda within 0-1200nm from *cross-section.dat* and written to *cross-section.tsv*\n  - plot *cross-section.tsv* if in python3 environment\n\n","slug":"Newton-X-on-Hyak","published":1,"updated":"2019-01-25T22:49:17.749Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrcn2vm20006ua5sw03pnznz","content":"<p><em><a href=\"http://www.newtonx.org\" target=\"_blank\" rel=\"noopener\">Newton-X</a> is a general-purpose program package for excited-state molecular dynamics, which is used to simulate absorption spectrum with GAUSSIAN09 in our group.</em></p>\n<p><em>Input-file setup and output analysis are introduced here or could be found on its website. A fast setup could be achieved by <a href=\"#pscript\">my python script</a>. Scripts attached here can run both in python2 and in python3.</em></p>\n<h1 id=\"Newton-X-Setup\"><a href=\"#Newton-X-Setup\" class=\"headerlink\" title=\"Newton-X Setup\"></a>Newton-X Setup</h1><h2 id=\"Procedures\"><a href=\"#Procedures\" class=\"headerlink\" title=\"Procedures\"></a>Procedures</h2><h3 id=\"1-geometry-and-normal-mode-input\"><a href=\"#1-geometry-and-normal-mode-input\" class=\"headerlink\" title=\"1. geometry and normal mode input\"></a>1. geometry and normal mode input</h3><p>In the working directory prepare two files: one is the optimized geometry in gaussian input format and the other is the normal mode calculation output file (gaussian frequency log file, usually calcuated with b3lyp method):</p>\n<p><code>opt.gjf  freq.log</code></p>\n<h3 id=\"2-load-newton-x-environment\"><a href=\"#2-load-newton-x-environment\" class=\"headerlink\" title=\"2. load newton-x environment\"></a>2. load newton-x environment</h3><p>To work in the newton-x environment on Hyak, run <code>module load contrib/newtonX</code> or <code>module load contrib/newton-x</code>. Their difference is that newton-x contains other package like gaussin09. </p>\n<p>We can check if we load successfully by command <code>$NX</code>, which should produce an info <code>-bash: /sw/contrib/newtonX/NX-2-B17/bin: Is a directory</code>. Or run <code>module list</code> to see all packages availabe to use.</p>\n<h3 id=\"3-convert-optimized-geometry-into-newton-x-format\"><a href=\"#3-convert-optimized-geometry-into-newton-x-format\" class=\"headerlink\" title=\"3. convert optimized geometry into newton-x format\"></a>3. convert optimized geometry into newton-x format</h3><p>Convert optimized geometry (opt.gjf) into xyz format first, could be achieved by script <a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/gjfcom2xyz.py\" target=\"_blank\" rel=\"noopener\">gjfcom2xyz.py</a>: <code>python gjfcom2xyz.py opt.gjf</code>. opt.xyz could be produced.</p>\n<p><code>$NX/xyz2nx &lt; opt.xyz</code> generates newton-x geometry file named <em>geom</em>, whose second column is the atomic number, the following three columns are x, y and z coordinates in atomic units (<em>Bohr</em>) and the last one contains the atomic masses.</p>\n<h3 id=\"4-newton-x-working-directory\"><a href=\"#4-newton-x-working-directory\" class=\"headerlink\" title=\"4. newton-x working directory\"></a>4. newton-x working directory</h3><p>Creat a new directory <em>TDDFT_SPEC</em> in the working directory, copy/move <em>geom</em> to it, copy/move <em>freq.log</em> to it with a new name <em>freq.out</em>: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir TDDFT_SPEC</span><br><span class=\"line\">mv geom TDDFT_SPEC</span><br><span class=\"line\">cp freq.log TDDFT_SPEC/freq.out</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-energy-and-transition-moment-input\"><a href=\"#5-energy-and-transition-moment-input\" class=\"headerlink\" title=\"5. energy and transition moment input\"></a>5. energy and transition moment input</h3><p>Move to the directory <em>TDDFT_SPEC</em> and create a new subdirectory called <em>JOB_AD</em>. Move into <em>JOB_AD</em> and prepare two files named, <em>basis</em> and <em>gaussian$.$com</em>.<br><em>basis</em> contains the basis set information, like <code>6-31+g(d,p)</code>. <em>gaussian$.$com</em> is same with the very first optimized geometry file <em>opt.gjf</em> but with different link command lines and route card, like (%rwf and %nosave could be deleted):</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%mem=100gb</span><br><span class=\"line\">%nprocshared=28</span><br><span class=\"line\">%rwf=gaussian</span><br><span class=\"line\">%nosave</span><br><span class=\"line\">%chk=gaussian</span><br><span class=\"line\"># TD(NStates=10) m062xd/6-31+g(d,p)  pop=none scf=(xqc,tight) Symmetry=None</span><br></pre></td></tr></table></figure>\n<p>Note that the subdirectory must be named with <em>JOB_AD</em> and the name of these two files must be <em>basis</em> and <em>gaussian$.$com</em> since Newton-X will search for them.</p>\n<h3 id=\"6-newton-x-input\"><a href=\"#6-newton-x-input\" class=\"headerlink\" title=\"6. newton-x input\"></a>6. newton-x input</h3><p>Back to the directory <em>TDDFT_SPEC</em>, use command <code>$NX/nxinp</code> and answer several quesitons by instructions to genetrate the newton-x input file <em>initqp_input</em>. Answers to the questions are <code>1; 2; numer of atoms; 300 (number of initial conditions); geom; 4; freq.out; 1; 310 (temperature); n; 1; 1 (ground state); number of states; 1; 100; 6.5; 0; 1; 7 (exit)</code>, respectively.</p>\n<h3 id=\"7-splitting-jobs\"><a href=\"#7-splitting-jobs\" class=\"headerlink\" title=\"7. splitting jobs\"></a>7. splitting jobs</h3><p>This step is to split the job among several computers (nodes), could be skipped and go directly to run the newton-x by <code>$NX/initcond.pl &gt; initcond.log</code>.</p>\n<p> To split the job, run <code>NX/split_initcond.pl</code> in the directory <em>TDDFT_SPEC</em>. Two questions will be asked, the first one is the number of directories to split the job and the second one is if the job run in a batch system. This program produces one file named <em>split_initcond.log</em> and a directory called <em>INITIAL_CONDITIONS</em>. If the answer to the first quesiton is 10, 10 subdirectories called <em>I1,I2,…,I10</em> are inside <em>INITIAL_CONDITIONS</em>, each one containing a complete set of input files but with 30 (300 $\\div$ 10) initial conditions and iseed=-1 not 0.</p>\n<h3 id=\"8-submit-newton-x-job\"><a href=\"#8-submit-newton-x-job\" class=\"headerlink\" title=\"8. submit newton-x job\"></a>8. submit newton-x job</h3><p>In every directory containing a complete set of input files  (geom, freq.out, initqp_input and JOB_AD), create a sbatch file to submit the job to Hyak node.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --job-name=???</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --nodes=1</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --ntasks-per-node=28</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --time=??:00:00</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --mem=???G</span></span><br><span class=\"line\"><span class=\"comment\">#SABTCH --workdir=???????</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --partition=???</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --account=???</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'This job will run on'</span> <span class=\"variable\">$SLURM_JOB_NODELIST</span></span><br><span class=\"line\"><span class=\"comment\">#set up time</span></span><br><span class=\"line\">begin=$(date +%s)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#load newtonx and gauss09 environment</span></span><br><span class=\"line\">module load contrib/newton-x</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$NX</span>/initcond.pl &gt; initcond.log</span><br><span class=\"line\"></span><br><span class=\"line\">end=$(date +%s)</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'Elapsed Time: '</span>$((<span class=\"variable\">$end</span>-<span class=\"variable\">$begin</span>))<span class=\"string\">'s'</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Scripts\"><a href=\"#Scripts\" class=\"headerlink\" title=\"Scripts\"></a><jump id=\"pscript\">Scripts</jump></h2><p>  python script <a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/newtonx.py\" target=\"_blank\" rel=\"noopener\">newtonx.py</a> can do exactly what step 2 to step 8 do.</p>\n<ul>\n<li><em>Usage</em><ul>\n<li><code>python newtonx.py geometry-gif-file freq-log</code></li>\n</ul>\n</li>\n<li><em>Descriptions</em><ul>\n<li><em>TDDFT_SPEC</em> folder is created, which contains <em>geom</em>, <em>freq.log</em>, <em>initqp_input</em>, <em>split_initcond.log</em>, <em>newtonx$.$sh</em>, <em>JOB_AD</em>, <em>INITIAL_CONDITIONS</em></li>\n<li><em>I1 I2 …</em> in <em>INITIAL_CONDITIONS</em>, each subfolder containing a complete set input – <em>geom</em>, <em>freq.out</em>, <em>initqp_input</em> (iseed=1234,2468,…), <em>JOB_AD</em> and a sbatch file – <em>nx_submit.sh</em></li>\n<li><em>nx_submit.sh</em> is the sbatch file same with what is listed in step 8, but with partition=ckpt, account=stf-ckpt.</li>\n<li><em>newtonx$.$sh</em> contains a list of bash command like: <code>cd absolute-path-of-I1; sbatch -p ckpt -A stf-ckpt --time=20:00:00 nx_submit.sh</code></li>\n<li>after satisfied with everything, run <code>bash newtonx.sh</code> to submit all jobs to hyak nodes; the final partition, account and time are decided by the setting in <em>newtonx$.$sh</em> even if <em>newtonx$.$sh</em> is different from <em>nx_submit.sh</em></li>\n</ul>\n</li>\n<li><em>Note</em><ul>\n<li>why ckpt?<ul>\n<li>increasing the number of splitting jobs speeds up the task greatly</li>\n<li><a href=\"https://wiki.cac.washington.edu/display/hyakusers/Mox_checkpoint\" target=\"_blank\" rel=\"noopener\">ckpt queue</a> is a good choice to run short jobs that finish within 4 hours</li>\n</ul>\n</li>\n<li>why iseed=1234,2468,…,1234*n?<ul>\n<li>different iseed values guarantee no repeated jobs</li>\n<li>iseed=-1 may generate a super large number not suit for ckpt queue</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"Newton-X-Result\"><a href=\"#Newton-X-Result\" class=\"headerlink\" title=\"Newton-X Result\"></a>Newton-X Result</h1><h2 id=\"Procedures-1\"><a href=\"#Procedures-1\" class=\"headerlink\" title=\"Procedures\"></a>Procedures</h2><h3 id=\"merge-splitting-jobs\"><a href=\"#merge-splitting-jobs\" class=\"headerlink\" title=\"merge splitting jobs\"></a>merge splitting jobs</h3><p>After all sub-tasks finish, go to the directory <em>INITIAL_CONDITIONS</em> and run <code>$NX/merge_initcond.pl</code>. This program will ask the number of jobs to be merged and it will create a new directory called <em>I_merged</em> with merged results. All important data are in <em>final_optput.1.N</em> file, which contains transition information from state 1 to state <em>N</em>. </p>\n<h3 id=\"spectrum-simulation\"><a href=\"#spectrum-simulation\" class=\"headerlink\" title=\"spectrum simulation\"></a>spectrum simulation</h3><p>Move to this directory and proceed with the spectrum simulation by command <code>$NX/nxinp</code>. The answers to the questions it will ask are <code>5 (spectra); 1 (spectra); 1 (initial state); 2-N (array of final states); F (Absorption); 0 (no restriction); -1; local; 1 (random seed); lorentz; 0.1 (delta); 310 (temperature); 1; 0.005; 3; 7 (exit)</code>, among which delta contronls the width of the curve.</p>\n<p>The simulated cross section using a Lorentzian line shape with phenomenological broadening $\\delta=0.1eV$ is written to <em>cross-section.dat</em>, containing four columns of data – DE/ev, lambda/nm, sigma/A^2 and +/-error/A^2.</p>\n<h2 id=\"Script\"><a href=\"#Script\" class=\"headerlink\" title=\"Script\"></a><jump id=\"pscript\">Script</jump></h2><p>All the above steps can be achieved by script <a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/nxplot.py\" target=\"_blank\" rel=\"noopener\">nxplot.py</a>. </p>\n<ul>\n<li><em>Usage</em><ul>\n<li><code>python nxplot.py</code></li>\n<li>run inside the directory <em>INITIAL_CONDITIONS</em></li>\n</ul>\n</li>\n<li><em>Descriptions</em><ul>\n<li>check if jobs completed</li>\n<li>merge splitting jobs</li>\n<li>spectrum simulation</li>\n<li>extract the lamda and sigma columns if lamda within 0-1200nm from <em>cross-section.dat</em> and written to <em>cross-section.tsv</em></li>\n<li>plot <em>cross-section.tsv</em> if in python3 environment</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><em><a href=\"http://www.newtonx.org\" target=\"_blank\" rel=\"noopener\">Newton-X</a> is a general-purpose program package for excited-state molecular dynamics, which is used to simulate absorption spectrum with GAUSSIAN09 in our group.</em></p>\n<p><em>Input-file setup and output analysis are introduced here or could be found on its website. A fast setup could be achieved by <a href=\"#pscript\">my python script</a>. Scripts attached here can run both in python2 and in python3.</em></p>\n<h1 id=\"Newton-X-Setup\"><a href=\"#Newton-X-Setup\" class=\"headerlink\" title=\"Newton-X Setup\"></a>Newton-X Setup</h1><h2 id=\"Procedures\"><a href=\"#Procedures\" class=\"headerlink\" title=\"Procedures\"></a>Procedures</h2><h3 id=\"1-geometry-and-normal-mode-input\"><a href=\"#1-geometry-and-normal-mode-input\" class=\"headerlink\" title=\"1. geometry and normal mode input\"></a>1. geometry and normal mode input</h3><p>In the working directory prepare two files: one is the optimized geometry in gaussian input format and the other is the normal mode calculation output file (gaussian frequency log file, usually calcuated with b3lyp method):</p>\n<p><code>opt.gjf  freq.log</code></p>\n<h3 id=\"2-load-newton-x-environment\"><a href=\"#2-load-newton-x-environment\" class=\"headerlink\" title=\"2. load newton-x environment\"></a>2. load newton-x environment</h3><p>To work in the newton-x environment on Hyak, run <code>module load contrib/newtonX</code> or <code>module load contrib/newton-x</code>. Their difference is that newton-x contains other package like gaussin09. </p>\n<p>We can check if we load successfully by command <code>$NX</code>, which should produce an info <code>-bash: /sw/contrib/newtonX/NX-2-B17/bin: Is a directory</code>. Or run <code>module list</code> to see all packages availabe to use.</p>\n<h3 id=\"3-convert-optimized-geometry-into-newton-x-format\"><a href=\"#3-convert-optimized-geometry-into-newton-x-format\" class=\"headerlink\" title=\"3. convert optimized geometry into newton-x format\"></a>3. convert optimized geometry into newton-x format</h3><p>Convert optimized geometry (opt.gjf) into xyz format first, could be achieved by script <a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/gjfcom2xyz.py\" target=\"_blank\" rel=\"noopener\">gjfcom2xyz.py</a>: <code>python gjfcom2xyz.py opt.gjf</code>. opt.xyz could be produced.</p>\n<p><code>$NX/xyz2nx &lt; opt.xyz</code> generates newton-x geometry file named <em>geom</em>, whose second column is the atomic number, the following three columns are x, y and z coordinates in atomic units (<em>Bohr</em>) and the last one contains the atomic masses.</p>\n<h3 id=\"4-newton-x-working-directory\"><a href=\"#4-newton-x-working-directory\" class=\"headerlink\" title=\"4. newton-x working directory\"></a>4. newton-x working directory</h3><p>Creat a new directory <em>TDDFT_SPEC</em> in the working directory, copy/move <em>geom</em> to it, copy/move <em>freq.log</em> to it with a new name <em>freq.out</em>: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir TDDFT_SPEC</span><br><span class=\"line\">mv geom TDDFT_SPEC</span><br><span class=\"line\">cp freq.log TDDFT_SPEC/freq.out</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-energy-and-transition-moment-input\"><a href=\"#5-energy-and-transition-moment-input\" class=\"headerlink\" title=\"5. energy and transition moment input\"></a>5. energy and transition moment input</h3><p>Move to the directory <em>TDDFT_SPEC</em> and create a new subdirectory called <em>JOB_AD</em>. Move into <em>JOB_AD</em> and prepare two files named, <em>basis</em> and <em>gaussian$.$com</em>.<br><em>basis</em> contains the basis set information, like <code>6-31+g(d,p)</code>. <em>gaussian$.$com</em> is same with the very first optimized geometry file <em>opt.gjf</em> but with different link command lines and route card, like (%rwf and %nosave could be deleted):</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%mem=100gb</span><br><span class=\"line\">%nprocshared=28</span><br><span class=\"line\">%rwf=gaussian</span><br><span class=\"line\">%nosave</span><br><span class=\"line\">%chk=gaussian</span><br><span class=\"line\"># TD(NStates=10) m062xd/6-31+g(d,p)  pop=none scf=(xqc,tight) Symmetry=None</span><br></pre></td></tr></table></figure>\n<p>Note that the subdirectory must be named with <em>JOB_AD</em> and the name of these two files must be <em>basis</em> and <em>gaussian$.$com</em> since Newton-X will search for them.</p>\n<h3 id=\"6-newton-x-input\"><a href=\"#6-newton-x-input\" class=\"headerlink\" title=\"6. newton-x input\"></a>6. newton-x input</h3><p>Back to the directory <em>TDDFT_SPEC</em>, use command <code>$NX/nxinp</code> and answer several quesitons by instructions to genetrate the newton-x input file <em>initqp_input</em>. Answers to the questions are <code>1; 2; numer of atoms; 300 (number of initial conditions); geom; 4; freq.out; 1; 310 (temperature); n; 1; 1 (ground state); number of states; 1; 100; 6.5; 0; 1; 7 (exit)</code>, respectively.</p>\n<h3 id=\"7-splitting-jobs\"><a href=\"#7-splitting-jobs\" class=\"headerlink\" title=\"7. splitting jobs\"></a>7. splitting jobs</h3><p>This step is to split the job among several computers (nodes), could be skipped and go directly to run the newton-x by <code>$NX/initcond.pl &gt; initcond.log</code>.</p>\n<p> To split the job, run <code>NX/split_initcond.pl</code> in the directory <em>TDDFT_SPEC</em>. Two questions will be asked, the first one is the number of directories to split the job and the second one is if the job run in a batch system. This program produces one file named <em>split_initcond.log</em> and a directory called <em>INITIAL_CONDITIONS</em>. If the answer to the first quesiton is 10, 10 subdirectories called <em>I1,I2,…,I10</em> are inside <em>INITIAL_CONDITIONS</em>, each one containing a complete set of input files but with 30 (300 $\\div$ 10) initial conditions and iseed=-1 not 0.</p>\n<h3 id=\"8-submit-newton-x-job\"><a href=\"#8-submit-newton-x-job\" class=\"headerlink\" title=\"8. submit newton-x job\"></a>8. submit newton-x job</h3><p>In every directory containing a complete set of input files  (geom, freq.out, initqp_input and JOB_AD), create a sbatch file to submit the job to Hyak node.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --job-name=???</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --nodes=1</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --ntasks-per-node=28</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --time=??:00:00</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --mem=???G</span></span><br><span class=\"line\"><span class=\"comment\">#SABTCH --workdir=???????</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --partition=???</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --account=???</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'This job will run on'</span> <span class=\"variable\">$SLURM_JOB_NODELIST</span></span><br><span class=\"line\"><span class=\"comment\">#set up time</span></span><br><span class=\"line\">begin=$(date +%s)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#load newtonx and gauss09 environment</span></span><br><span class=\"line\">module load contrib/newton-x</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$NX</span>/initcond.pl &gt; initcond.log</span><br><span class=\"line\"></span><br><span class=\"line\">end=$(date +%s)</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'Elapsed Time: '</span>$((<span class=\"variable\">$end</span>-<span class=\"variable\">$begin</span>))<span class=\"string\">'s'</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Scripts\"><a href=\"#Scripts\" class=\"headerlink\" title=\"Scripts\"></a><jump id=\"pscript\">Scripts</jump></h2><p>  python script <a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/newtonx.py\" target=\"_blank\" rel=\"noopener\">newtonx.py</a> can do exactly what step 2 to step 8 do.</p>\n<ul>\n<li><em>Usage</em><ul>\n<li><code>python newtonx.py geometry-gif-file freq-log</code></li>\n</ul>\n</li>\n<li><em>Descriptions</em><ul>\n<li><em>TDDFT_SPEC</em> folder is created, which contains <em>geom</em>, <em>freq.log</em>, <em>initqp_input</em>, <em>split_initcond.log</em>, <em>newtonx$.$sh</em>, <em>JOB_AD</em>, <em>INITIAL_CONDITIONS</em></li>\n<li><em>I1 I2 …</em> in <em>INITIAL_CONDITIONS</em>, each subfolder containing a complete set input – <em>geom</em>, <em>freq.out</em>, <em>initqp_input</em> (iseed=1234,2468,…), <em>JOB_AD</em> and a sbatch file – <em>nx_submit.sh</em></li>\n<li><em>nx_submit.sh</em> is the sbatch file same with what is listed in step 8, but with partition=ckpt, account=stf-ckpt.</li>\n<li><em>newtonx$.$sh</em> contains a list of bash command like: <code>cd absolute-path-of-I1; sbatch -p ckpt -A stf-ckpt --time=20:00:00 nx_submit.sh</code></li>\n<li>after satisfied with everything, run <code>bash newtonx.sh</code> to submit all jobs to hyak nodes; the final partition, account and time are decided by the setting in <em>newtonx$.$sh</em> even if <em>newtonx$.$sh</em> is different from <em>nx_submit.sh</em></li>\n</ul>\n</li>\n<li><em>Note</em><ul>\n<li>why ckpt?<ul>\n<li>increasing the number of splitting jobs speeds up the task greatly</li>\n<li><a href=\"https://wiki.cac.washington.edu/display/hyakusers/Mox_checkpoint\" target=\"_blank\" rel=\"noopener\">ckpt queue</a> is a good choice to run short jobs that finish within 4 hours</li>\n</ul>\n</li>\n<li>why iseed=1234,2468,…,1234*n?<ul>\n<li>different iseed values guarantee no repeated jobs</li>\n<li>iseed=-1 may generate a super large number not suit for ckpt queue</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"Newton-X-Result\"><a href=\"#Newton-X-Result\" class=\"headerlink\" title=\"Newton-X Result\"></a>Newton-X Result</h1><h2 id=\"Procedures-1\"><a href=\"#Procedures-1\" class=\"headerlink\" title=\"Procedures\"></a>Procedures</h2><h3 id=\"merge-splitting-jobs\"><a href=\"#merge-splitting-jobs\" class=\"headerlink\" title=\"merge splitting jobs\"></a>merge splitting jobs</h3><p>After all sub-tasks finish, go to the directory <em>INITIAL_CONDITIONS</em> and run <code>$NX/merge_initcond.pl</code>. This program will ask the number of jobs to be merged and it will create a new directory called <em>I_merged</em> with merged results. All important data are in <em>final_optput.1.N</em> file, which contains transition information from state 1 to state <em>N</em>. </p>\n<h3 id=\"spectrum-simulation\"><a href=\"#spectrum-simulation\" class=\"headerlink\" title=\"spectrum simulation\"></a>spectrum simulation</h3><p>Move to this directory and proceed with the spectrum simulation by command <code>$NX/nxinp</code>. The answers to the questions it will ask are <code>5 (spectra); 1 (spectra); 1 (initial state); 2-N (array of final states); F (Absorption); 0 (no restriction); -1; local; 1 (random seed); lorentz; 0.1 (delta); 310 (temperature); 1; 0.005; 3; 7 (exit)</code>, among which delta contronls the width of the curve.</p>\n<p>The simulated cross section using a Lorentzian line shape with phenomenological broadening $\\delta=0.1eV$ is written to <em>cross-section.dat</em>, containing four columns of data – DE/ev, lambda/nm, sigma/A^2 and +/-error/A^2.</p>\n<h2 id=\"Script\"><a href=\"#Script\" class=\"headerlink\" title=\"Script\"></a><jump id=\"pscript\">Script</jump></h2><p>All the above steps can be achieved by script <a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/nxplot.py\" target=\"_blank\" rel=\"noopener\">nxplot.py</a>. </p>\n<ul>\n<li><em>Usage</em><ul>\n<li><code>python nxplot.py</code></li>\n<li>run inside the directory <em>INITIAL_CONDITIONS</em></li>\n</ul>\n</li>\n<li><em>Descriptions</em><ul>\n<li>check if jobs completed</li>\n<li>merge splitting jobs</li>\n<li>spectrum simulation</li>\n<li>extract the lamda and sigma columns if lamda within 0-1200nm from <em>cross-section.dat</em> and written to <em>cross-section.tsv</em></li>\n<li>plot <em>cross-section.tsv</em> if in python3 environment</li>\n</ul>\n</li>\n</ul>\n"},{"title":"OligoReading--DNA Damage","date":"2019-01-15T07:16:30.000Z","_content":"\n# [Irreversible Electron Attachment - A Key to DNA Damage by Solvated Electrons in Aqueous Solution](https://pubs.rsc.org/en/content/articlelanding/2015/ob/c5ob01542a#!divAbstract)\n\n- oligomers bombared with low energy electrons in vacuum $\\rightarrow$ damage to TXT trimers (X=A, G, T or C)\n- hydrated electrons ($e_{aq}^-$, major form of lectrons generated during radio therapy) are negligible factor in damage to native DNA\n  - $^\\cdot OH$ radical induce damgage\n  - $e_{aq}^-$ forms when hypoxia\n- brominated nucleobases have a potential to sensitize DNA\n  - bromopyrimidines lead to more strand breaks than bromopurines\n\n# [Resonant Formation of DNA Strand Breaks by Low-Energy (3 to 20 eV) Electrons](http://science.sciencemag.org/content/287/5458/1658.long)\n\n- low-energy electrons (1~20eV) are able to induce genotoxic damage, such as single- and double-strand breaks, even electron enrgy well below the ionaization limit of DNA (7.5~)\n- DNA damage by 3-20eV electrons is highly dependent on the initial kinetic energy of the incident electron, where thresholds near 3 to 5 eV and intense peaks near 10eV\n- the mechanisms of DNA damage depend not only on the quantum of energy absorbed, but also on the nature of the particle that deposits the energy\n  - electron with energies below 15eV initiate fragmentation of small molecules essentially by attachment of the incident electron\n  - this leads to the formation of a resonace state (a transient molecular anion TMA)\n  - TMA decays by electron autodetachment (d1) or by dissociation along one or several specific bonds (d2)\n  - the branching ratio between d1 and d2 depends in part on the above intrinsic characteristics of the specific TMA; the final damage yields also depend on extrinsic effects\n- result\n  - DNA strand breaks (below 14eV) are initiated by resonant electron attachment to the various basic DNA components, followed by bond dissociations within th eTMA's lifetime, ususally femtoseconds\n  - Some fragmentation products subsequenctly react locally with other DNA components, leading to a double damaged site with breaks on opposing strands (E required for two ionizations are above 20 eV, here are below 20eV)","source":"_posts/OligoReading-DNA-Damage.md","raw":"---\ntitle: OligoReading--DNA Damage\ndate: 2019-01-14 23:16:30\ntags:\n- oligo\ncategories:\n- OligoReading\n---\n\n# [Irreversible Electron Attachment - A Key to DNA Damage by Solvated Electrons in Aqueous Solution](https://pubs.rsc.org/en/content/articlelanding/2015/ob/c5ob01542a#!divAbstract)\n\n- oligomers bombared with low energy electrons in vacuum $\\rightarrow$ damage to TXT trimers (X=A, G, T or C)\n- hydrated electrons ($e_{aq}^-$, major form of lectrons generated during radio therapy) are negligible factor in damage to native DNA\n  - $^\\cdot OH$ radical induce damgage\n  - $e_{aq}^-$ forms when hypoxia\n- brominated nucleobases have a potential to sensitize DNA\n  - bromopyrimidines lead to more strand breaks than bromopurines\n\n# [Resonant Formation of DNA Strand Breaks by Low-Energy (3 to 20 eV) Electrons](http://science.sciencemag.org/content/287/5458/1658.long)\n\n- low-energy electrons (1~20eV) are able to induce genotoxic damage, such as single- and double-strand breaks, even electron enrgy well below the ionaization limit of DNA (7.5~)\n- DNA damage by 3-20eV electrons is highly dependent on the initial kinetic energy of the incident electron, where thresholds near 3 to 5 eV and intense peaks near 10eV\n- the mechanisms of DNA damage depend not only on the quantum of energy absorbed, but also on the nature of the particle that deposits the energy\n  - electron with energies below 15eV initiate fragmentation of small molecules essentially by attachment of the incident electron\n  - this leads to the formation of a resonace state (a transient molecular anion TMA)\n  - TMA decays by electron autodetachment (d1) or by dissociation along one or several specific bonds (d2)\n  - the branching ratio between d1 and d2 depends in part on the above intrinsic characteristics of the specific TMA; the final damage yields also depend on extrinsic effects\n- result\n  - DNA strand breaks (below 14eV) are initiated by resonant electron attachment to the various basic DNA components, followed by bond dissociations within th eTMA's lifetime, ususally femtoseconds\n  - Some fragmentation products subsequenctly react locally with other DNA components, leading to a double damaged site with breaks on opposing strands (E required for two ionizations are above 20 eV, here are below 20eV)","slug":"OligoReading-DNA-Damage","published":1,"updated":"2019-01-15T07:20:54.111Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrcn2vm30007ua5s1t9tukdn","content":"<h1 id=\"Irreversible-Electron-Attachment-A-Key-to-DNA-Damage-by-Solvated-Electrons-in-Aqueous-Solution\"><a href=\"#Irreversible-Electron-Attachment-A-Key-to-DNA-Damage-by-Solvated-Electrons-in-Aqueous-Solution\" class=\"headerlink\" title=\"Irreversible Electron Attachment - A Key to DNA Damage by Solvated Electrons in Aqueous Solution\"></a><a href=\"https://pubs.rsc.org/en/content/articlelanding/2015/ob/c5ob01542a#!divAbstract\" target=\"_blank\" rel=\"noopener\">Irreversible Electron Attachment - A Key to DNA Damage by Solvated Electrons in Aqueous Solution</a></h1><ul>\n<li>oligomers bombared with low energy electrons in vacuum $\\rightarrow$ damage to TXT trimers (X=A, G, T or C)</li>\n<li>hydrated electrons ($e_{aq}^-$, major form of lectrons generated during radio therapy) are negligible factor in damage to native DNA<ul>\n<li>$^\\cdot OH$ radical induce damgage</li>\n<li>$e_{aq}^-$ forms when hypoxia</li>\n</ul>\n</li>\n<li>brominated nucleobases have a potential to sensitize DNA<ul>\n<li>bromopyrimidines lead to more strand breaks than bromopurines</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"Resonant-Formation-of-DNA-Strand-Breaks-by-Low-Energy-3-to-20-eV-Electrons\"><a href=\"#Resonant-Formation-of-DNA-Strand-Breaks-by-Low-Energy-3-to-20-eV-Electrons\" class=\"headerlink\" title=\"Resonant Formation of DNA Strand Breaks by Low-Energy (3 to 20 eV) Electrons\"></a><a href=\"http://science.sciencemag.org/content/287/5458/1658.long\" target=\"_blank\" rel=\"noopener\">Resonant Formation of DNA Strand Breaks by Low-Energy (3 to 20 eV) Electrons</a></h1><ul>\n<li>low-energy electrons (1~20eV) are able to induce genotoxic damage, such as single- and double-strand breaks, even electron enrgy well below the ionaization limit of DNA (7.5~)</li>\n<li>DNA damage by 3-20eV electrons is highly dependent on the initial kinetic energy of the incident electron, where thresholds near 3 to 5 eV and intense peaks near 10eV</li>\n<li>the mechanisms of DNA damage depend not only on the quantum of energy absorbed, but also on the nature of the particle that deposits the energy<ul>\n<li>electron with energies below 15eV initiate fragmentation of small molecules essentially by attachment of the incident electron</li>\n<li>this leads to the formation of a resonace state (a transient molecular anion TMA)</li>\n<li>TMA decays by electron autodetachment (d1) or by dissociation along one or several specific bonds (d2)</li>\n<li>the branching ratio between d1 and d2 depends in part on the above intrinsic characteristics of the specific TMA; the final damage yields also depend on extrinsic effects</li>\n</ul>\n</li>\n<li>result<ul>\n<li>DNA strand breaks (below 14eV) are initiated by resonant electron attachment to the various basic DNA components, followed by bond dissociations within th eTMA’s lifetime, ususally femtoseconds</li>\n<li>Some fragmentation products subsequenctly react locally with other DNA components, leading to a double damaged site with breaks on opposing strands (E required for two ionizations are above 20 eV, here are below 20eV)</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Irreversible-Electron-Attachment-A-Key-to-DNA-Damage-by-Solvated-Electrons-in-Aqueous-Solution\"><a href=\"#Irreversible-Electron-Attachment-A-Key-to-DNA-Damage-by-Solvated-Electrons-in-Aqueous-Solution\" class=\"headerlink\" title=\"Irreversible Electron Attachment - A Key to DNA Damage by Solvated Electrons in Aqueous Solution\"></a><a href=\"https://pubs.rsc.org/en/content/articlelanding/2015/ob/c5ob01542a#!divAbstract\" target=\"_blank\" rel=\"noopener\">Irreversible Electron Attachment - A Key to DNA Damage by Solvated Electrons in Aqueous Solution</a></h1><ul>\n<li>oligomers bombared with low energy electrons in vacuum $\\rightarrow$ damage to TXT trimers (X=A, G, T or C)</li>\n<li>hydrated electrons ($e_{aq}^-$, major form of lectrons generated during radio therapy) are negligible factor in damage to native DNA<ul>\n<li>$^\\cdot OH$ radical induce damgage</li>\n<li>$e_{aq}^-$ forms when hypoxia</li>\n</ul>\n</li>\n<li>brominated nucleobases have a potential to sensitize DNA<ul>\n<li>bromopyrimidines lead to more strand breaks than bromopurines</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"Resonant-Formation-of-DNA-Strand-Breaks-by-Low-Energy-3-to-20-eV-Electrons\"><a href=\"#Resonant-Formation-of-DNA-Strand-Breaks-by-Low-Energy-3-to-20-eV-Electrons\" class=\"headerlink\" title=\"Resonant Formation of DNA Strand Breaks by Low-Energy (3 to 20 eV) Electrons\"></a><a href=\"http://science.sciencemag.org/content/287/5458/1658.long\" target=\"_blank\" rel=\"noopener\">Resonant Formation of DNA Strand Breaks by Low-Energy (3 to 20 eV) Electrons</a></h1><ul>\n<li>low-energy electrons (1~20eV) are able to induce genotoxic damage, such as single- and double-strand breaks, even electron enrgy well below the ionaization limit of DNA (7.5~)</li>\n<li>DNA damage by 3-20eV electrons is highly dependent on the initial kinetic energy of the incident electron, where thresholds near 3 to 5 eV and intense peaks near 10eV</li>\n<li>the mechanisms of DNA damage depend not only on the quantum of energy absorbed, but also on the nature of the particle that deposits the energy<ul>\n<li>electron with energies below 15eV initiate fragmentation of small molecules essentially by attachment of the incident electron</li>\n<li>this leads to the formation of a resonace state (a transient molecular anion TMA)</li>\n<li>TMA decays by electron autodetachment (d1) or by dissociation along one or several specific bonds (d2)</li>\n<li>the branching ratio between d1 and d2 depends in part on the above intrinsic characteristics of the specific TMA; the final damage yields also depend on extrinsic effects</li>\n</ul>\n</li>\n<li>result<ul>\n<li>DNA strand breaks (below 14eV) are initiated by resonant electron attachment to the various basic DNA components, followed by bond dissociations within th eTMA’s lifetime, ususally femtoseconds</li>\n<li>Some fragmentation products subsequenctly react locally with other DNA components, leading to a double damaged site with breaks on opposing strands (E required for two ionizations are above 20 eV, here are below 20eV)</li>\n</ul>\n</li>\n</ul>\n"},{"title":"Mopac with Cuby4","date":"2018-12-29T06:03:11.000Z","_content":"\n*Two types of jobs, optimization and dynamics with pm6 method, are introduced here. Linked python scripts should be useful to setup input and analyze result, which can run both in python2 and in python3.*\n\n*[Mopac](http://openmopac.net/Manual/index.html) is a general-purpose semiempirical molecular orbital package for the study of solid state and molecular structures and reactions. Several semiempirical methods are used to calculate electronic part, among which we usually choose PM6 method to run geometry optimization and molecular dynamics. Just like other computational software packages, Mopac works in 3 steps: create a data file which describes molecular system and specifies job types; command Mopac to carry out the calcualtion with that data-file (on Hyak node); extract the desired result from the output-file.*\n\n# Input Setup\n\n[Cuby](http://cuby4.molecular.cz) provides an unified access to various computational methods available in different software packages, including gaussian, mopac, turbomole, etc. It is a computational chemistry framework written in ruby, which does very little for itself, but calls external softwares to do the calculations and works with their results. To work with cuby, two input files are needed: xyz file and yaml file. \n\n## xyz-file\n\nxyz file contains the geometry of the molecule system -- the first line is the number of atoms, the second line is the comment line (could be blank) and the remaining lines are atoms Cartesian coordinates. Take $H_2O$ as an example:\n\n  ```\n  3\n\n  O                 -0.54954964    0.83729475    0.01780404\n  H                 -0.87000423    1.74223058    0.01780404\n  H                  0.41045036    0.83729475    0.01780404\n  ```\n\n Common input files we use are gaussian input files. The script, [gjfcom2xyz.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/gjfcom2xyz.py) can convert the input file from gaussian input format to xyz format. \n\n- *Usage*\n  - `python gjfcom2xyz.py input-file`\n- *Descriptions*\n  - use charge and multiplicity (chg&mp) as a key to locate the start of coordinates\n  - every lines containing 4 elements after chg&mp is considered as coordinate line.\n\npython script [xyz2gjf.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/xyz2gjf.py) can convert xyz format back to gaussian input format.\n\n- *Usage*\n  - `python xyz2gjf.py xyz-file`\n- *Descriptions*\n  - every line after the second line contains 4 elements and the last three elements are float is considered as coordinate line\n  - route card, charge and multiplicity are defined by default, could be changed later or modified in the scripts.\n\n## yaml-file\n\nyaml file is a list of keywords, which is the bridge to connect cuby with computational softwares.\n\n### optimize-yaml\n\n*Example--inp.yaml*:\n\n```yaml\njob: optimize\ngeometry: test.xyz\ncharge: 2\nmultiplicity: 1\ninterface: mopac\nmethod: pm6\nspin_restricted: auto_uhf\nmaxcycles: 2000\nprint: timing\nmopac_precise: yes\nmopac_peptide_bond_fix: yes\nmodifiers: dispersion3, h_bonds4\nmodifier_h_bonds:\n  h_bonds4_scale_charged: no\n  h_bonds4_extra_scaling: {}\n```\n\n*Explanations*:\n- job: optimize\n  - simple geometry optimization of molecule specified in test.xyz file\n  - the calculation produces these additional files:\n    - optimized.xyz - the optimized geometry\n    - history_inp.xyz - record of all the steps\n- spin_restricted: auto_uhf\n  - uhf for any open-shell systems, rhf is used for closed shells\n- maxcycles: 2000\n  - maximum number of cycles of optimization or molecular dynamics\n- print: timing\n  - print time spent in the program\n- [mopac_precise](http://openmopac.net/manual/precise.html): yes\n  - use tight thresholds, needed for accurate gradient\n- [mopac_peptide_bond_fix](http://openmopac.net/manual/mmok.html): yes\n  - controls the corerction for peptide bond torsion\n- modifiers\n  - a list of interfaces applied as a modifiers to this calculations.\n\n### dynamics-yaml\n\n*Example--anneal.yaml*:\n\n```yaml\njob: dynamics\ngeometry: test.xyz\ncharge: 2\nmultiplicity: 1\nspin_restricted: auto_uhf\ninterface: mopac\nmethod: pm6\nmopac_precise: yes\nmopac_peptide_bond_fix: yes\nmodifiers: dispersion3, h_bonds4\nmodifier_h_bonds:\n  h_bonds4_scale_charged: no\n  h_bonds4_extra_scaling: {}\nmaxcycles: 20000\ntimestep: 0.001\ninit_temp: 310\ntemperature: 310\nthermostat: berendsen\nthermostat_tc: 0.05\n```\n\n*Explanations*:\n- job: dynamics\n  - molecular dynamics simulation of molecule specified in test.xyz file\n  - the calculation produces these additional files:\n    - last.xyz - the last geometry\n    - trajectory_test.xyz - record of all the cycles (20000 here)\n    - LOG - standard output and error information for every cycle\n- maxcycles: 20000\n  - 20 ps of MD simulation (the default step is 1 fs)\n- init_temp: 310\n  - temperature (K) used to generate initial random velocities\n- temperature: 310\n  - temperature (K) to be maintained by the thermostat\n- thermostat: berendsen\n  - selection of thermostat algorithm\n- thermostat_tc: 0.05\n  - Thermostat time constant (ps) setting strength of the coupling to the thermostat. The exact mening of the value is different in different algorithms.\n\n*Note*:\n- add `scf_cycles: 1000` for open-shell system to define the maximum number of SCF iterations\n\n### Other Keywords\n- `job_cleanup: yes | no`\n  - delete directories with external calculations when job finishes successfuly, default is yes\n- `mopac_keywords: \"\"`\n  - extra keywords (in the MOPAC format) added into the input\n- `scf_convergence: 7`\n  - change SCF convergence threshold (energy): set to $10^{-7}$ a.u.\n- click [here](http://cuby4.molecular.cz/keywords.html) to see more\n\n# Submit to Hyak\n\nBesides xyz and yaml (test.yaml) files, sbatch file (test.sh) also needed:\n\n```bash\n#!/bin/bash\n#SBATCH --job-name=???\n#SBATCH --nodes=1\n#SBATCH --time=??:00:00\n#SBATCH --mem=???GB\n#SBATCH --workdir=????????????\n#SBATCH --partition=???\n#SBATCH --account=???\n\nmodule load contrib/mopac16\nsource /usr/lusers/yueliu96/.rvm/scripts/rvm\nldd /sw/contrib/cuby4/cuby4/classes/algebra/algebra_c.so > ldd.log\ncuby4 test.yaml &>LOG    \n## results and error information will be written to file LOG\n## cuby4 test.yaml: same information will be written to slurm file\n```\nrun `sbatch test.sh` to submit it.\n\n## Parallel-Run\n\nMost nodes on hyak.mox have 28 processors, however, the code in MOPAC only allows a single processor to be used for a single calculation. If several calculations to be run, each calculation could be started on a different processor in one node.\n\n```bash\n#!/bin/bash\n#SBATCH --job-name=??????\n#SBATCH --nodes=1\n#SBATCH --time=??:00:00\n#SBATCH --mem=???G\n#SBATCH --workdir=??????\n#SBATCH --partition=???\n#SBATCH --account=???\n\nmodule load parallel-20170722\nmodule load contrib/mopac16\nsource /usr/lusers/yueliu96/.rvm/scripts/rvm\nldd /sw/contrib/cuby4/cuby4/classes/algebra/algebra_c.so > ldd.log\ncat tasklists.sh | parallel -j 28\n```\nwhere, tasklists$.$sh is :\n\n```bash\ncd absolute-directory-1; cuby4 test.yaml &>LOG\ncd absolute-directory-2; cuby4 test.yaml &>LOG\n......\n```\n\nthere should exist xyz and yaml files in every absolute directory.\n\n## Scripts for Parallel-Run\n- [pm6opt_parallel.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/pm6opt_parallel.py)\n- [pm6bomd_parallel.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/pm6bomd_parallel.py)\n  \nTo run pm6-optimize or pm6-BOMD for several different molecules, create their xyz files in the working directory:\n\n```\ntest1.xyz test2.xyz test3.xyz\n```\n\nand then run `python pm6opt_parallel.py` or `python pm6bomd_parallel.py`. tasklists$.$sh file, parallel_run$.$sh file and sub-directories for every xyz file will be created, in where xyz and yaml files are created correspondingly:\n\n```\ndtest1  dtest2 dtest3 taskslists.sh parallel_run.sh\n```\n\nin `dtest1`: `test1.xyz inp.yaml` if it is opt job; `test1.xyz anneal.yaml` if it is dynamics job.\n\n# Output Analysis\n\n## opt output\n\nOptimization job produces optimized.xyz and histotry_xxx.xyz (xxx depends on the name of yaml file). The optimized.xyz is the optimized geometry in xyz formatted, where energy value is on the second line.\n\nIn the parallel-run case, one directory has several subdirectories containing finished optimized job (optimized.xyz), python script [extract_pm6opt.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/extract_pm6opt.py) can be used to extract optimized geometry and energy.\n\n- *Usage*:\n  - `python extract_pm6opt.py`\n  - run in the directory containing these subdirectories\n- *Descriptions*:\n  - read optimized.xyz in all subdirectories whose name starts with 'd', change their format from xyz to gaussian input and extract energies from these xyz files\n  - all new files are written to a new directory optresult\n  - the name of the structures and the gaussian input files depends on these subdirectories -- *test* if *dtest*\n\n## dynamics output \n\nDynamics job creates additional file trajectory_*.xyz containing geometry information of all steps, which can be visualized by [VMD](https://www.ks.uiuc.edu/Research/vmd/) software. The user can extract specific snapshots from the trajcetroy according to the stepsize set by VMD. Or use the python script [traj2xyz.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/traj2xyzs.py) to achieve the same goal as VMD extractor.\n\n- *Usage*:\n  - `python traj2xyz.py stride`\n  - stride must be an integer\n  - stride=100: 200 snapshots out of 200000 will be extracted from trajectory\n  - run in the directory containing child-directory where trajectory_*.xyz locates\n- *Descriptions*:\n  - go through all subdirectories to locate trajectory_*.xyz, extract an exact number of geometries from trajectory and wirtten them to new subdirectories correspondingly\n  - the name of new subdirectories and snapshots are based on the name of subdirectories\n  - if originally `dtesta dtestb`, then after run this script: `dtesta dtesta_snapshots dtestb dtestb_snapshots`; in `dtesta_snapshots`: `testa_snap1.xyz testa_snap2.xyz ...`\n","source":"_posts/Mopac-with-Cuby4.md","raw":"---\ntitle: Mopac with Cuby4\ndate: 2018-12-28 22:03:11\ntags:\n- Hyak\n- ComputChem\n- software\ncategories:\n- Turecek Lab Tutorial\n---\n\n*Two types of jobs, optimization and dynamics with pm6 method, are introduced here. Linked python scripts should be useful to setup input and analyze result, which can run both in python2 and in python3.*\n\n*[Mopac](http://openmopac.net/Manual/index.html) is a general-purpose semiempirical molecular orbital package for the study of solid state and molecular structures and reactions. Several semiempirical methods are used to calculate electronic part, among which we usually choose PM6 method to run geometry optimization and molecular dynamics. Just like other computational software packages, Mopac works in 3 steps: create a data file which describes molecular system and specifies job types; command Mopac to carry out the calcualtion with that data-file (on Hyak node); extract the desired result from the output-file.*\n\n# Input Setup\n\n[Cuby](http://cuby4.molecular.cz) provides an unified access to various computational methods available in different software packages, including gaussian, mopac, turbomole, etc. It is a computational chemistry framework written in ruby, which does very little for itself, but calls external softwares to do the calculations and works with their results. To work with cuby, two input files are needed: xyz file and yaml file. \n\n## xyz-file\n\nxyz file contains the geometry of the molecule system -- the first line is the number of atoms, the second line is the comment line (could be blank) and the remaining lines are atoms Cartesian coordinates. Take $H_2O$ as an example:\n\n  ```\n  3\n\n  O                 -0.54954964    0.83729475    0.01780404\n  H                 -0.87000423    1.74223058    0.01780404\n  H                  0.41045036    0.83729475    0.01780404\n  ```\n\n Common input files we use are gaussian input files. The script, [gjfcom2xyz.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/gjfcom2xyz.py) can convert the input file from gaussian input format to xyz format. \n\n- *Usage*\n  - `python gjfcom2xyz.py input-file`\n- *Descriptions*\n  - use charge and multiplicity (chg&mp) as a key to locate the start of coordinates\n  - every lines containing 4 elements after chg&mp is considered as coordinate line.\n\npython script [xyz2gjf.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/xyz2gjf.py) can convert xyz format back to gaussian input format.\n\n- *Usage*\n  - `python xyz2gjf.py xyz-file`\n- *Descriptions*\n  - every line after the second line contains 4 elements and the last three elements are float is considered as coordinate line\n  - route card, charge and multiplicity are defined by default, could be changed later or modified in the scripts.\n\n## yaml-file\n\nyaml file is a list of keywords, which is the bridge to connect cuby with computational softwares.\n\n### optimize-yaml\n\n*Example--inp.yaml*:\n\n```yaml\njob: optimize\ngeometry: test.xyz\ncharge: 2\nmultiplicity: 1\ninterface: mopac\nmethod: pm6\nspin_restricted: auto_uhf\nmaxcycles: 2000\nprint: timing\nmopac_precise: yes\nmopac_peptide_bond_fix: yes\nmodifiers: dispersion3, h_bonds4\nmodifier_h_bonds:\n  h_bonds4_scale_charged: no\n  h_bonds4_extra_scaling: {}\n```\n\n*Explanations*:\n- job: optimize\n  - simple geometry optimization of molecule specified in test.xyz file\n  - the calculation produces these additional files:\n    - optimized.xyz - the optimized geometry\n    - history_inp.xyz - record of all the steps\n- spin_restricted: auto_uhf\n  - uhf for any open-shell systems, rhf is used for closed shells\n- maxcycles: 2000\n  - maximum number of cycles of optimization or molecular dynamics\n- print: timing\n  - print time spent in the program\n- [mopac_precise](http://openmopac.net/manual/precise.html): yes\n  - use tight thresholds, needed for accurate gradient\n- [mopac_peptide_bond_fix](http://openmopac.net/manual/mmok.html): yes\n  - controls the corerction for peptide bond torsion\n- modifiers\n  - a list of interfaces applied as a modifiers to this calculations.\n\n### dynamics-yaml\n\n*Example--anneal.yaml*:\n\n```yaml\njob: dynamics\ngeometry: test.xyz\ncharge: 2\nmultiplicity: 1\nspin_restricted: auto_uhf\ninterface: mopac\nmethod: pm6\nmopac_precise: yes\nmopac_peptide_bond_fix: yes\nmodifiers: dispersion3, h_bonds4\nmodifier_h_bonds:\n  h_bonds4_scale_charged: no\n  h_bonds4_extra_scaling: {}\nmaxcycles: 20000\ntimestep: 0.001\ninit_temp: 310\ntemperature: 310\nthermostat: berendsen\nthermostat_tc: 0.05\n```\n\n*Explanations*:\n- job: dynamics\n  - molecular dynamics simulation of molecule specified in test.xyz file\n  - the calculation produces these additional files:\n    - last.xyz - the last geometry\n    - trajectory_test.xyz - record of all the cycles (20000 here)\n    - LOG - standard output and error information for every cycle\n- maxcycles: 20000\n  - 20 ps of MD simulation (the default step is 1 fs)\n- init_temp: 310\n  - temperature (K) used to generate initial random velocities\n- temperature: 310\n  - temperature (K) to be maintained by the thermostat\n- thermostat: berendsen\n  - selection of thermostat algorithm\n- thermostat_tc: 0.05\n  - Thermostat time constant (ps) setting strength of the coupling to the thermostat. The exact mening of the value is different in different algorithms.\n\n*Note*:\n- add `scf_cycles: 1000` for open-shell system to define the maximum number of SCF iterations\n\n### Other Keywords\n- `job_cleanup: yes | no`\n  - delete directories with external calculations when job finishes successfuly, default is yes\n- `mopac_keywords: \"\"`\n  - extra keywords (in the MOPAC format) added into the input\n- `scf_convergence: 7`\n  - change SCF convergence threshold (energy): set to $10^{-7}$ a.u.\n- click [here](http://cuby4.molecular.cz/keywords.html) to see more\n\n# Submit to Hyak\n\nBesides xyz and yaml (test.yaml) files, sbatch file (test.sh) also needed:\n\n```bash\n#!/bin/bash\n#SBATCH --job-name=???\n#SBATCH --nodes=1\n#SBATCH --time=??:00:00\n#SBATCH --mem=???GB\n#SBATCH --workdir=????????????\n#SBATCH --partition=???\n#SBATCH --account=???\n\nmodule load contrib/mopac16\nsource /usr/lusers/yueliu96/.rvm/scripts/rvm\nldd /sw/contrib/cuby4/cuby4/classes/algebra/algebra_c.so > ldd.log\ncuby4 test.yaml &>LOG    \n## results and error information will be written to file LOG\n## cuby4 test.yaml: same information will be written to slurm file\n```\nrun `sbatch test.sh` to submit it.\n\n## Parallel-Run\n\nMost nodes on hyak.mox have 28 processors, however, the code in MOPAC only allows a single processor to be used for a single calculation. If several calculations to be run, each calculation could be started on a different processor in one node.\n\n```bash\n#!/bin/bash\n#SBATCH --job-name=??????\n#SBATCH --nodes=1\n#SBATCH --time=??:00:00\n#SBATCH --mem=???G\n#SBATCH --workdir=??????\n#SBATCH --partition=???\n#SBATCH --account=???\n\nmodule load parallel-20170722\nmodule load contrib/mopac16\nsource /usr/lusers/yueliu96/.rvm/scripts/rvm\nldd /sw/contrib/cuby4/cuby4/classes/algebra/algebra_c.so > ldd.log\ncat tasklists.sh | parallel -j 28\n```\nwhere, tasklists$.$sh is :\n\n```bash\ncd absolute-directory-1; cuby4 test.yaml &>LOG\ncd absolute-directory-2; cuby4 test.yaml &>LOG\n......\n```\n\nthere should exist xyz and yaml files in every absolute directory.\n\n## Scripts for Parallel-Run\n- [pm6opt_parallel.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/pm6opt_parallel.py)\n- [pm6bomd_parallel.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/pm6bomd_parallel.py)\n  \nTo run pm6-optimize or pm6-BOMD for several different molecules, create their xyz files in the working directory:\n\n```\ntest1.xyz test2.xyz test3.xyz\n```\n\nand then run `python pm6opt_parallel.py` or `python pm6bomd_parallel.py`. tasklists$.$sh file, parallel_run$.$sh file and sub-directories for every xyz file will be created, in where xyz and yaml files are created correspondingly:\n\n```\ndtest1  dtest2 dtest3 taskslists.sh parallel_run.sh\n```\n\nin `dtest1`: `test1.xyz inp.yaml` if it is opt job; `test1.xyz anneal.yaml` if it is dynamics job.\n\n# Output Analysis\n\n## opt output\n\nOptimization job produces optimized.xyz and histotry_xxx.xyz (xxx depends on the name of yaml file). The optimized.xyz is the optimized geometry in xyz formatted, where energy value is on the second line.\n\nIn the parallel-run case, one directory has several subdirectories containing finished optimized job (optimized.xyz), python script [extract_pm6opt.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/extract_pm6opt.py) can be used to extract optimized geometry and energy.\n\n- *Usage*:\n  - `python extract_pm6opt.py`\n  - run in the directory containing these subdirectories\n- *Descriptions*:\n  - read optimized.xyz in all subdirectories whose name starts with 'd', change their format from xyz to gaussian input and extract energies from these xyz files\n  - all new files are written to a new directory optresult\n  - the name of the structures and the gaussian input files depends on these subdirectories -- *test* if *dtest*\n\n## dynamics output \n\nDynamics job creates additional file trajectory_*.xyz containing geometry information of all steps, which can be visualized by [VMD](https://www.ks.uiuc.edu/Research/vmd/) software. The user can extract specific snapshots from the trajcetroy according to the stepsize set by VMD. Or use the python script [traj2xyz.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/traj2xyzs.py) to achieve the same goal as VMD extractor.\n\n- *Usage*:\n  - `python traj2xyz.py stride`\n  - stride must be an integer\n  - stride=100: 200 snapshots out of 200000 will be extracted from trajectory\n  - run in the directory containing child-directory where trajectory_*.xyz locates\n- *Descriptions*:\n  - go through all subdirectories to locate trajectory_*.xyz, extract an exact number of geometries from trajectory and wirtten them to new subdirectories correspondingly\n  - the name of new subdirectories and snapshots are based on the name of subdirectories\n  - if originally `dtesta dtestb`, then after run this script: `dtesta dtesta_snapshots dtestb dtestb_snapshots`; in `dtesta_snapshots`: `testa_snap1.xyz testa_snap2.xyz ...`\n","slug":"Mopac-with-Cuby4","published":1,"updated":"2019-01-15T07:28:40.096Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrcn2vru000sua5sl51zl7hv","content":"<p><em>Two types of jobs, optimization and dynamics with pm6 method, are introduced here. Linked python scripts should be useful to setup input and analyze result, which can run both in python2 and in python3.</em></p>\n<p><em><a href=\"http://openmopac.net/Manual/index.html\" target=\"_blank\" rel=\"noopener\">Mopac</a> is a general-purpose semiempirical molecular orbital package for the study of solid state and molecular structures and reactions. Several semiempirical methods are used to calculate electronic part, among which we usually choose PM6 method to run geometry optimization and molecular dynamics. Just like other computational software packages, Mopac works in 3 steps: create a data file which describes molecular system and specifies job types; command Mopac to carry out the calcualtion with that data-file (on Hyak node); extract the desired result from the output-file.</em></p>\n<h1 id=\"Input-Setup\"><a href=\"#Input-Setup\" class=\"headerlink\" title=\"Input Setup\"></a>Input Setup</h1><p><a href=\"http://cuby4.molecular.cz\" target=\"_blank\" rel=\"noopener\">Cuby</a> provides an unified access to various computational methods available in different software packages, including gaussian, mopac, turbomole, etc. It is a computational chemistry framework written in ruby, which does very little for itself, but calls external softwares to do the calculations and works with their results. To work with cuby, two input files are needed: xyz file and yaml file. </p>\n<h2 id=\"xyz-file\"><a href=\"#xyz-file\" class=\"headerlink\" title=\"xyz-file\"></a>xyz-file</h2><p>xyz file contains the geometry of the molecule system – the first line is the number of atoms, the second line is the comment line (could be blank) and the remaining lines are atoms Cartesian coordinates. Take $H_2O$ as an example:</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br><span class=\"line\"></span><br><span class=\"line\">O                 -0.54954964    0.83729475    0.01780404</span><br><span class=\"line\">H                 -0.87000423    1.74223058    0.01780404</span><br><span class=\"line\">H                  0.41045036    0.83729475    0.01780404</span><br></pre></td></tr></table></figure>\n<p> Common input files we use are gaussian input files. The script, <a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/gjfcom2xyz.py\" target=\"_blank\" rel=\"noopener\">gjfcom2xyz.py</a> can convert the input file from gaussian input format to xyz format. </p>\n<ul>\n<li><em>Usage</em><ul>\n<li><code>python gjfcom2xyz.py input-file</code></li>\n</ul>\n</li>\n<li><em>Descriptions</em><ul>\n<li>use charge and multiplicity (chg&amp;mp) as a key to locate the start of coordinates</li>\n<li>every lines containing 4 elements after chg&amp;mp is considered as coordinate line.</li>\n</ul>\n</li>\n</ul>\n<p>python script <a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/xyz2gjf.py\" target=\"_blank\" rel=\"noopener\">xyz2gjf.py</a> can convert xyz format back to gaussian input format.</p>\n<ul>\n<li><em>Usage</em><ul>\n<li><code>python xyz2gjf.py xyz-file</code></li>\n</ul>\n</li>\n<li><em>Descriptions</em><ul>\n<li>every line after the second line contains 4 elements and the last three elements are float is considered as coordinate line</li>\n<li>route card, charge and multiplicity are defined by default, could be changed later or modified in the scripts.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"yaml-file\"><a href=\"#yaml-file\" class=\"headerlink\" title=\"yaml-file\"></a>yaml-file</h2><p>yaml file is a list of keywords, which is the bridge to connect cuby with computational softwares.</p>\n<h3 id=\"optimize-yaml\"><a href=\"#optimize-yaml\" class=\"headerlink\" title=\"optimize-yaml\"></a>optimize-yaml</h3><p><em>Example–inp.yaml</em>:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">job:</span> <span class=\"string\">optimize</span></span><br><span class=\"line\"><span class=\"attr\">geometry:</span> <span class=\"string\">test.xyz</span></span><br><span class=\"line\"><span class=\"attr\">charge:</span> <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"attr\">multiplicity:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">interface:</span> <span class=\"string\">mopac</span></span><br><span class=\"line\"><span class=\"attr\">method:</span> <span class=\"string\">pm6</span></span><br><span class=\"line\"><span class=\"attr\">spin_restricted:</span> <span class=\"string\">auto_uhf</span></span><br><span class=\"line\"><span class=\"attr\">maxcycles:</span> <span class=\"number\">2000</span></span><br><span class=\"line\"><span class=\"attr\">print:</span> <span class=\"string\">timing</span></span><br><span class=\"line\"><span class=\"attr\">mopac_precise:</span> <span class=\"literal\">yes</span></span><br><span class=\"line\"><span class=\"attr\">mopac_peptide_bond_fix:</span> <span class=\"literal\">yes</span></span><br><span class=\"line\"><span class=\"attr\">modifiers:</span> <span class=\"string\">dispersion3,</span> <span class=\"string\">h_bonds4</span></span><br><span class=\"line\"><span class=\"attr\">modifier_h_bonds:</span></span><br><span class=\"line\"><span class=\"attr\">  h_bonds4_scale_charged:</span> <span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">  h_bonds4_extra_scaling:</span> <span class=\"string\">&#123;&#125;</span></span><br></pre></td></tr></table></figure>\n<p><em>Explanations</em>:</p>\n<ul>\n<li>job: optimize<ul>\n<li>simple geometry optimization of molecule specified in test.xyz file</li>\n<li>the calculation produces these additional files:<ul>\n<li>optimized.xyz - the optimized geometry</li>\n<li>history_inp.xyz - record of all the steps</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>spin_restricted: auto_uhf<ul>\n<li>uhf for any open-shell systems, rhf is used for closed shells</li>\n</ul>\n</li>\n<li>maxcycles: 2000<ul>\n<li>maximum number of cycles of optimization or molecular dynamics</li>\n</ul>\n</li>\n<li>print: timing<ul>\n<li>print time spent in the program</li>\n</ul>\n</li>\n<li><a href=\"http://openmopac.net/manual/precise.html\" target=\"_blank\" rel=\"noopener\">mopac_precise</a>: yes<ul>\n<li>use tight thresholds, needed for accurate gradient</li>\n</ul>\n</li>\n<li><a href=\"http://openmopac.net/manual/mmok.html\" target=\"_blank\" rel=\"noopener\">mopac_peptide_bond_fix</a>: yes<ul>\n<li>controls the corerction for peptide bond torsion</li>\n</ul>\n</li>\n<li>modifiers<ul>\n<li>a list of interfaces applied as a modifiers to this calculations.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"dynamics-yaml\"><a href=\"#dynamics-yaml\" class=\"headerlink\" title=\"dynamics-yaml\"></a>dynamics-yaml</h3><p><em>Example–anneal.yaml</em>:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">job:</span> <span class=\"string\">dynamics</span></span><br><span class=\"line\"><span class=\"attr\">geometry:</span> <span class=\"string\">test.xyz</span></span><br><span class=\"line\"><span class=\"attr\">charge:</span> <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"attr\">multiplicity:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">spin_restricted:</span> <span class=\"string\">auto_uhf</span></span><br><span class=\"line\"><span class=\"attr\">interface:</span> <span class=\"string\">mopac</span></span><br><span class=\"line\"><span class=\"attr\">method:</span> <span class=\"string\">pm6</span></span><br><span class=\"line\"><span class=\"attr\">mopac_precise:</span> <span class=\"literal\">yes</span></span><br><span class=\"line\"><span class=\"attr\">mopac_peptide_bond_fix:</span> <span class=\"literal\">yes</span></span><br><span class=\"line\"><span class=\"attr\">modifiers:</span> <span class=\"string\">dispersion3,</span> <span class=\"string\">h_bonds4</span></span><br><span class=\"line\"><span class=\"attr\">modifier_h_bonds:</span></span><br><span class=\"line\"><span class=\"attr\">  h_bonds4_scale_charged:</span> <span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">  h_bonds4_extra_scaling:</span> <span class=\"string\">&#123;&#125;</span></span><br><span class=\"line\"><span class=\"attr\">maxcycles:</span> <span class=\"number\">20000</span></span><br><span class=\"line\"><span class=\"attr\">timestep:</span> <span class=\"number\">0.001</span></span><br><span class=\"line\"><span class=\"attr\">init_temp:</span> <span class=\"number\">310</span></span><br><span class=\"line\"><span class=\"attr\">temperature:</span> <span class=\"number\">310</span></span><br><span class=\"line\"><span class=\"attr\">thermostat:</span> <span class=\"string\">berendsen</span></span><br><span class=\"line\"><span class=\"attr\">thermostat_tc:</span> <span class=\"number\">0.05</span></span><br></pre></td></tr></table></figure>\n<p><em>Explanations</em>:</p>\n<ul>\n<li>job: dynamics<ul>\n<li>molecular dynamics simulation of molecule specified in test.xyz file</li>\n<li>the calculation produces these additional files:<ul>\n<li>last.xyz - the last geometry</li>\n<li>trajectory_test.xyz - record of all the cycles (20000 here)</li>\n<li>LOG - standard output and error information for every cycle</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>maxcycles: 20000<ul>\n<li>20 ps of MD simulation (the default step is 1 fs)</li>\n</ul>\n</li>\n<li>init_temp: 310<ul>\n<li>temperature (K) used to generate initial random velocities</li>\n</ul>\n</li>\n<li>temperature: 310<ul>\n<li>temperature (K) to be maintained by the thermostat</li>\n</ul>\n</li>\n<li>thermostat: berendsen<ul>\n<li>selection of thermostat algorithm</li>\n</ul>\n</li>\n<li>thermostat_tc: 0.05<ul>\n<li>Thermostat time constant (ps) setting strength of the coupling to the thermostat. The exact mening of the value is different in different algorithms.</li>\n</ul>\n</li>\n</ul>\n<p><em>Note</em>:</p>\n<ul>\n<li>add <code>scf_cycles: 1000</code> for open-shell system to define the maximum number of SCF iterations</li>\n</ul>\n<h3 id=\"Other-Keywords\"><a href=\"#Other-Keywords\" class=\"headerlink\" title=\"Other Keywords\"></a>Other Keywords</h3><ul>\n<li><code>job_cleanup: yes | no</code><ul>\n<li>delete directories with external calculations when job finishes successfuly, default is yes</li>\n</ul>\n</li>\n<li><code>mopac_keywords: &quot;&quot;</code><ul>\n<li>extra keywords (in the MOPAC format) added into the input</li>\n</ul>\n</li>\n<li><code>scf_convergence: 7</code><ul>\n<li>change SCF convergence threshold (energy): set to $10^{-7}$ a.u.</li>\n</ul>\n</li>\n<li>click <a href=\"http://cuby4.molecular.cz/keywords.html\" target=\"_blank\" rel=\"noopener\">here</a> to see more</li>\n</ul>\n<h1 id=\"Submit-to-Hyak\"><a href=\"#Submit-to-Hyak\" class=\"headerlink\" title=\"Submit to Hyak\"></a>Submit to Hyak</h1><p>Besides xyz and yaml (test.yaml) files, sbatch file (test.sh) also needed:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --job-name=???</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --nodes=1</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --time=??:00:00</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --mem=???GB</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --workdir=????????????</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --partition=???</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --account=???</span></span><br><span class=\"line\"></span><br><span class=\"line\">module load contrib/mopac16</span><br><span class=\"line\"><span class=\"built_in\">source</span> /usr/lusers/yueliu96/.rvm/scripts/rvm</span><br><span class=\"line\">ldd /sw/contrib/cuby4/cuby4/classes/algebra/algebra_c.so &gt; ldd.log</span><br><span class=\"line\">cuby4 test.yaml &amp;&gt;LOG    </span><br><span class=\"line\"><span class=\"comment\">## results and error information will be written to file LOG</span></span><br><span class=\"line\"><span class=\"comment\">## cuby4 test.yaml: same information will be written to slurm file</span></span><br></pre></td></tr></table></figure>\n<p>run <code>sbatch test.sh</code> to submit it.</p>\n<h2 id=\"Parallel-Run\"><a href=\"#Parallel-Run\" class=\"headerlink\" title=\"Parallel-Run\"></a>Parallel-Run</h2><p>Most nodes on hyak.mox have 28 processors, however, the code in MOPAC only allows a single processor to be used for a single calculation. If several calculations to be run, each calculation could be started on a different processor in one node.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --job-name=??????</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --nodes=1</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --time=??:00:00</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --mem=???G</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --workdir=??????</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --partition=???</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --account=???</span></span><br><span class=\"line\"></span><br><span class=\"line\">module load parallel-20170722</span><br><span class=\"line\">module load contrib/mopac16</span><br><span class=\"line\"><span class=\"built_in\">source</span> /usr/lusers/yueliu96/.rvm/scripts/rvm</span><br><span class=\"line\">ldd /sw/contrib/cuby4/cuby4/classes/algebra/algebra_c.so &gt; ldd.log</span><br><span class=\"line\">cat tasklists.sh | parallel -j 28</span><br></pre></td></tr></table></figure>\n<p>where, tasklists$.$sh is :</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> absolute-directory-1; cuby4 test.yaml &amp;&gt;LOG</span><br><span class=\"line\"><span class=\"built_in\">cd</span> absolute-directory-2; cuby4 test.yaml &amp;&gt;LOG</span><br><span class=\"line\">......</span><br></pre></td></tr></table></figure>\n<p>there should exist xyz and yaml files in every absolute directory.</p>\n<h2 id=\"Scripts-for-Parallel-Run\"><a href=\"#Scripts-for-Parallel-Run\" class=\"headerlink\" title=\"Scripts for Parallel-Run\"></a>Scripts for Parallel-Run</h2><ul>\n<li><a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/pm6opt_parallel.py\" target=\"_blank\" rel=\"noopener\">pm6opt_parallel.py</a></li>\n<li><a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/pm6bomd_parallel.py\" target=\"_blank\" rel=\"noopener\">pm6bomd_parallel.py</a></li>\n</ul>\n<p>To run pm6-optimize or pm6-BOMD for several different molecules, create their xyz files in the working directory:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test1.xyz test2.xyz test3.xyz</span><br></pre></td></tr></table></figure>\n<p>and then run <code>python pm6opt_parallel.py</code> or <code>python pm6bomd_parallel.py</code>. tasklists$.$sh file, parallel_run$.$sh file and sub-directories for every xyz file will be created, in where xyz and yaml files are created correspondingly:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dtest1  dtest2 dtest3 taskslists.sh parallel_run.sh</span><br></pre></td></tr></table></figure>\n<p>in <code>dtest1</code>: <code>test1.xyz inp.yaml</code> if it is opt job; <code>test1.xyz anneal.yaml</code> if it is dynamics job.</p>\n<h1 id=\"Output-Analysis\"><a href=\"#Output-Analysis\" class=\"headerlink\" title=\"Output Analysis\"></a>Output Analysis</h1><h2 id=\"opt-output\"><a href=\"#opt-output\" class=\"headerlink\" title=\"opt output\"></a>opt output</h2><p>Optimization job produces optimized.xyz and histotry_xxx.xyz (xxx depends on the name of yaml file). The optimized.xyz is the optimized geometry in xyz formatted, where energy value is on the second line.</p>\n<p>In the parallel-run case, one directory has several subdirectories containing finished optimized job (optimized.xyz), python script <a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/extract_pm6opt.py\" target=\"_blank\" rel=\"noopener\">extract_pm6opt.py</a> can be used to extract optimized geometry and energy.</p>\n<ul>\n<li><em>Usage</em>:<ul>\n<li><code>python extract_pm6opt.py</code></li>\n<li>run in the directory containing these subdirectories</li>\n</ul>\n</li>\n<li><em>Descriptions</em>:<ul>\n<li>read optimized.xyz in all subdirectories whose name starts with ‘d’, change their format from xyz to gaussian input and extract energies from these xyz files</li>\n<li>all new files are written to a new directory optresult</li>\n<li>the name of the structures and the gaussian input files depends on these subdirectories – <em>test</em> if <em>dtest</em></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"dynamics-output\"><a href=\"#dynamics-output\" class=\"headerlink\" title=\"dynamics output\"></a>dynamics output</h2><p>Dynamics job creates additional file trajectory_*.xyz containing geometry information of all steps, which can be visualized by <a href=\"https://www.ks.uiuc.edu/Research/vmd/\" target=\"_blank\" rel=\"noopener\">VMD</a> software. The user can extract specific snapshots from the trajcetroy according to the stepsize set by VMD. Or use the python script <a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/traj2xyzs.py\" target=\"_blank\" rel=\"noopener\">traj2xyz.py</a> to achieve the same goal as VMD extractor.</p>\n<ul>\n<li><em>Usage</em>:<ul>\n<li><code>python traj2xyz.py stride</code></li>\n<li>stride must be an integer</li>\n<li>stride=100: 200 snapshots out of 200000 will be extracted from trajectory</li>\n<li>run in the directory containing child-directory where trajectory_*.xyz locates</li>\n</ul>\n</li>\n<li><em>Descriptions</em>:<ul>\n<li>go through all subdirectories to locate trajectory_*.xyz, extract an exact number of geometries from trajectory and wirtten them to new subdirectories correspondingly</li>\n<li>the name of new subdirectories and snapshots are based on the name of subdirectories</li>\n<li>if originally <code>dtesta dtestb</code>, then after run this script: <code>dtesta dtesta_snapshots dtestb dtestb_snapshots</code>; in <code>dtesta_snapshots</code>: <code>testa_snap1.xyz testa_snap2.xyz ...</code></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><em>Two types of jobs, optimization and dynamics with pm6 method, are introduced here. Linked python scripts should be useful to setup input and analyze result, which can run both in python2 and in python3.</em></p>\n<p><em><a href=\"http://openmopac.net/Manual/index.html\" target=\"_blank\" rel=\"noopener\">Mopac</a> is a general-purpose semiempirical molecular orbital package for the study of solid state and molecular structures and reactions. Several semiempirical methods are used to calculate electronic part, among which we usually choose PM6 method to run geometry optimization and molecular dynamics. Just like other computational software packages, Mopac works in 3 steps: create a data file which describes molecular system and specifies job types; command Mopac to carry out the calcualtion with that data-file (on Hyak node); extract the desired result from the output-file.</em></p>\n<h1 id=\"Input-Setup\"><a href=\"#Input-Setup\" class=\"headerlink\" title=\"Input Setup\"></a>Input Setup</h1><p><a href=\"http://cuby4.molecular.cz\" target=\"_blank\" rel=\"noopener\">Cuby</a> provides an unified access to various computational methods available in different software packages, including gaussian, mopac, turbomole, etc. It is a computational chemistry framework written in ruby, which does very little for itself, but calls external softwares to do the calculations and works with their results. To work with cuby, two input files are needed: xyz file and yaml file. </p>\n<h2 id=\"xyz-file\"><a href=\"#xyz-file\" class=\"headerlink\" title=\"xyz-file\"></a>xyz-file</h2><p>xyz file contains the geometry of the molecule system – the first line is the number of atoms, the second line is the comment line (could be blank) and the remaining lines are atoms Cartesian coordinates. Take $H_2O$ as an example:</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br><span class=\"line\"></span><br><span class=\"line\">O                 -0.54954964    0.83729475    0.01780404</span><br><span class=\"line\">H                 -0.87000423    1.74223058    0.01780404</span><br><span class=\"line\">H                  0.41045036    0.83729475    0.01780404</span><br></pre></td></tr></table></figure>\n<p> Common input files we use are gaussian input files. The script, <a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/gjfcom2xyz.py\" target=\"_blank\" rel=\"noopener\">gjfcom2xyz.py</a> can convert the input file from gaussian input format to xyz format. </p>\n<ul>\n<li><em>Usage</em><ul>\n<li><code>python gjfcom2xyz.py input-file</code></li>\n</ul>\n</li>\n<li><em>Descriptions</em><ul>\n<li>use charge and multiplicity (chg&amp;mp) as a key to locate the start of coordinates</li>\n<li>every lines containing 4 elements after chg&amp;mp is considered as coordinate line.</li>\n</ul>\n</li>\n</ul>\n<p>python script <a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/xyz2gjf.py\" target=\"_blank\" rel=\"noopener\">xyz2gjf.py</a> can convert xyz format back to gaussian input format.</p>\n<ul>\n<li><em>Usage</em><ul>\n<li><code>python xyz2gjf.py xyz-file</code></li>\n</ul>\n</li>\n<li><em>Descriptions</em><ul>\n<li>every line after the second line contains 4 elements and the last three elements are float is considered as coordinate line</li>\n<li>route card, charge and multiplicity are defined by default, could be changed later or modified in the scripts.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"yaml-file\"><a href=\"#yaml-file\" class=\"headerlink\" title=\"yaml-file\"></a>yaml-file</h2><p>yaml file is a list of keywords, which is the bridge to connect cuby with computational softwares.</p>\n<h3 id=\"optimize-yaml\"><a href=\"#optimize-yaml\" class=\"headerlink\" title=\"optimize-yaml\"></a>optimize-yaml</h3><p><em>Example–inp.yaml</em>:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">job:</span> <span class=\"string\">optimize</span></span><br><span class=\"line\"><span class=\"attr\">geometry:</span> <span class=\"string\">test.xyz</span></span><br><span class=\"line\"><span class=\"attr\">charge:</span> <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"attr\">multiplicity:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">interface:</span> <span class=\"string\">mopac</span></span><br><span class=\"line\"><span class=\"attr\">method:</span> <span class=\"string\">pm6</span></span><br><span class=\"line\"><span class=\"attr\">spin_restricted:</span> <span class=\"string\">auto_uhf</span></span><br><span class=\"line\"><span class=\"attr\">maxcycles:</span> <span class=\"number\">2000</span></span><br><span class=\"line\"><span class=\"attr\">print:</span> <span class=\"string\">timing</span></span><br><span class=\"line\"><span class=\"attr\">mopac_precise:</span> <span class=\"literal\">yes</span></span><br><span class=\"line\"><span class=\"attr\">mopac_peptide_bond_fix:</span> <span class=\"literal\">yes</span></span><br><span class=\"line\"><span class=\"attr\">modifiers:</span> <span class=\"string\">dispersion3,</span> <span class=\"string\">h_bonds4</span></span><br><span class=\"line\"><span class=\"attr\">modifier_h_bonds:</span></span><br><span class=\"line\"><span class=\"attr\">  h_bonds4_scale_charged:</span> <span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">  h_bonds4_extra_scaling:</span> <span class=\"string\">&#123;&#125;</span></span><br></pre></td></tr></table></figure>\n<p><em>Explanations</em>:</p>\n<ul>\n<li>job: optimize<ul>\n<li>simple geometry optimization of molecule specified in test.xyz file</li>\n<li>the calculation produces these additional files:<ul>\n<li>optimized.xyz - the optimized geometry</li>\n<li>history_inp.xyz - record of all the steps</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>spin_restricted: auto_uhf<ul>\n<li>uhf for any open-shell systems, rhf is used for closed shells</li>\n</ul>\n</li>\n<li>maxcycles: 2000<ul>\n<li>maximum number of cycles of optimization or molecular dynamics</li>\n</ul>\n</li>\n<li>print: timing<ul>\n<li>print time spent in the program</li>\n</ul>\n</li>\n<li><a href=\"http://openmopac.net/manual/precise.html\" target=\"_blank\" rel=\"noopener\">mopac_precise</a>: yes<ul>\n<li>use tight thresholds, needed for accurate gradient</li>\n</ul>\n</li>\n<li><a href=\"http://openmopac.net/manual/mmok.html\" target=\"_blank\" rel=\"noopener\">mopac_peptide_bond_fix</a>: yes<ul>\n<li>controls the corerction for peptide bond torsion</li>\n</ul>\n</li>\n<li>modifiers<ul>\n<li>a list of interfaces applied as a modifiers to this calculations.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"dynamics-yaml\"><a href=\"#dynamics-yaml\" class=\"headerlink\" title=\"dynamics-yaml\"></a>dynamics-yaml</h3><p><em>Example–anneal.yaml</em>:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">job:</span> <span class=\"string\">dynamics</span></span><br><span class=\"line\"><span class=\"attr\">geometry:</span> <span class=\"string\">test.xyz</span></span><br><span class=\"line\"><span class=\"attr\">charge:</span> <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"attr\">multiplicity:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">spin_restricted:</span> <span class=\"string\">auto_uhf</span></span><br><span class=\"line\"><span class=\"attr\">interface:</span> <span class=\"string\">mopac</span></span><br><span class=\"line\"><span class=\"attr\">method:</span> <span class=\"string\">pm6</span></span><br><span class=\"line\"><span class=\"attr\">mopac_precise:</span> <span class=\"literal\">yes</span></span><br><span class=\"line\"><span class=\"attr\">mopac_peptide_bond_fix:</span> <span class=\"literal\">yes</span></span><br><span class=\"line\"><span class=\"attr\">modifiers:</span> <span class=\"string\">dispersion3,</span> <span class=\"string\">h_bonds4</span></span><br><span class=\"line\"><span class=\"attr\">modifier_h_bonds:</span></span><br><span class=\"line\"><span class=\"attr\">  h_bonds4_scale_charged:</span> <span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">  h_bonds4_extra_scaling:</span> <span class=\"string\">&#123;&#125;</span></span><br><span class=\"line\"><span class=\"attr\">maxcycles:</span> <span class=\"number\">20000</span></span><br><span class=\"line\"><span class=\"attr\">timestep:</span> <span class=\"number\">0.001</span></span><br><span class=\"line\"><span class=\"attr\">init_temp:</span> <span class=\"number\">310</span></span><br><span class=\"line\"><span class=\"attr\">temperature:</span> <span class=\"number\">310</span></span><br><span class=\"line\"><span class=\"attr\">thermostat:</span> <span class=\"string\">berendsen</span></span><br><span class=\"line\"><span class=\"attr\">thermostat_tc:</span> <span class=\"number\">0.05</span></span><br></pre></td></tr></table></figure>\n<p><em>Explanations</em>:</p>\n<ul>\n<li>job: dynamics<ul>\n<li>molecular dynamics simulation of molecule specified in test.xyz file</li>\n<li>the calculation produces these additional files:<ul>\n<li>last.xyz - the last geometry</li>\n<li>trajectory_test.xyz - record of all the cycles (20000 here)</li>\n<li>LOG - standard output and error information for every cycle</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>maxcycles: 20000<ul>\n<li>20 ps of MD simulation (the default step is 1 fs)</li>\n</ul>\n</li>\n<li>init_temp: 310<ul>\n<li>temperature (K) used to generate initial random velocities</li>\n</ul>\n</li>\n<li>temperature: 310<ul>\n<li>temperature (K) to be maintained by the thermostat</li>\n</ul>\n</li>\n<li>thermostat: berendsen<ul>\n<li>selection of thermostat algorithm</li>\n</ul>\n</li>\n<li>thermostat_tc: 0.05<ul>\n<li>Thermostat time constant (ps) setting strength of the coupling to the thermostat. The exact mening of the value is different in different algorithms.</li>\n</ul>\n</li>\n</ul>\n<p><em>Note</em>:</p>\n<ul>\n<li>add <code>scf_cycles: 1000</code> for open-shell system to define the maximum number of SCF iterations</li>\n</ul>\n<h3 id=\"Other-Keywords\"><a href=\"#Other-Keywords\" class=\"headerlink\" title=\"Other Keywords\"></a>Other Keywords</h3><ul>\n<li><code>job_cleanup: yes | no</code><ul>\n<li>delete directories with external calculations when job finishes successfuly, default is yes</li>\n</ul>\n</li>\n<li><code>mopac_keywords: &quot;&quot;</code><ul>\n<li>extra keywords (in the MOPAC format) added into the input</li>\n</ul>\n</li>\n<li><code>scf_convergence: 7</code><ul>\n<li>change SCF convergence threshold (energy): set to $10^{-7}$ a.u.</li>\n</ul>\n</li>\n<li>click <a href=\"http://cuby4.molecular.cz/keywords.html\" target=\"_blank\" rel=\"noopener\">here</a> to see more</li>\n</ul>\n<h1 id=\"Submit-to-Hyak\"><a href=\"#Submit-to-Hyak\" class=\"headerlink\" title=\"Submit to Hyak\"></a>Submit to Hyak</h1><p>Besides xyz and yaml (test.yaml) files, sbatch file (test.sh) also needed:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --job-name=???</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --nodes=1</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --time=??:00:00</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --mem=???GB</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --workdir=????????????</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --partition=???</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --account=???</span></span><br><span class=\"line\"></span><br><span class=\"line\">module load contrib/mopac16</span><br><span class=\"line\"><span class=\"built_in\">source</span> /usr/lusers/yueliu96/.rvm/scripts/rvm</span><br><span class=\"line\">ldd /sw/contrib/cuby4/cuby4/classes/algebra/algebra_c.so &gt; ldd.log</span><br><span class=\"line\">cuby4 test.yaml &amp;&gt;LOG    </span><br><span class=\"line\"><span class=\"comment\">## results and error information will be written to file LOG</span></span><br><span class=\"line\"><span class=\"comment\">## cuby4 test.yaml: same information will be written to slurm file</span></span><br></pre></td></tr></table></figure>\n<p>run <code>sbatch test.sh</code> to submit it.</p>\n<h2 id=\"Parallel-Run\"><a href=\"#Parallel-Run\" class=\"headerlink\" title=\"Parallel-Run\"></a>Parallel-Run</h2><p>Most nodes on hyak.mox have 28 processors, however, the code in MOPAC only allows a single processor to be used for a single calculation. If several calculations to be run, each calculation could be started on a different processor in one node.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --job-name=??????</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --nodes=1</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --time=??:00:00</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --mem=???G</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --workdir=??????</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --partition=???</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --account=???</span></span><br><span class=\"line\"></span><br><span class=\"line\">module load parallel-20170722</span><br><span class=\"line\">module load contrib/mopac16</span><br><span class=\"line\"><span class=\"built_in\">source</span> /usr/lusers/yueliu96/.rvm/scripts/rvm</span><br><span class=\"line\">ldd /sw/contrib/cuby4/cuby4/classes/algebra/algebra_c.so &gt; ldd.log</span><br><span class=\"line\">cat tasklists.sh | parallel -j 28</span><br></pre></td></tr></table></figure>\n<p>where, tasklists$.$sh is :</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> absolute-directory-1; cuby4 test.yaml &amp;&gt;LOG</span><br><span class=\"line\"><span class=\"built_in\">cd</span> absolute-directory-2; cuby4 test.yaml &amp;&gt;LOG</span><br><span class=\"line\">......</span><br></pre></td></tr></table></figure>\n<p>there should exist xyz and yaml files in every absolute directory.</p>\n<h2 id=\"Scripts-for-Parallel-Run\"><a href=\"#Scripts-for-Parallel-Run\" class=\"headerlink\" title=\"Scripts for Parallel-Run\"></a>Scripts for Parallel-Run</h2><ul>\n<li><a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/pm6opt_parallel.py\" target=\"_blank\" rel=\"noopener\">pm6opt_parallel.py</a></li>\n<li><a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/pm6bomd_parallel.py\" target=\"_blank\" rel=\"noopener\">pm6bomd_parallel.py</a></li>\n</ul>\n<p>To run pm6-optimize or pm6-BOMD for several different molecules, create their xyz files in the working directory:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test1.xyz test2.xyz test3.xyz</span><br></pre></td></tr></table></figure>\n<p>and then run <code>python pm6opt_parallel.py</code> or <code>python pm6bomd_parallel.py</code>. tasklists$.$sh file, parallel_run$.$sh file and sub-directories for every xyz file will be created, in where xyz and yaml files are created correspondingly:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dtest1  dtest2 dtest3 taskslists.sh parallel_run.sh</span><br></pre></td></tr></table></figure>\n<p>in <code>dtest1</code>: <code>test1.xyz inp.yaml</code> if it is opt job; <code>test1.xyz anneal.yaml</code> if it is dynamics job.</p>\n<h1 id=\"Output-Analysis\"><a href=\"#Output-Analysis\" class=\"headerlink\" title=\"Output Analysis\"></a>Output Analysis</h1><h2 id=\"opt-output\"><a href=\"#opt-output\" class=\"headerlink\" title=\"opt output\"></a>opt output</h2><p>Optimization job produces optimized.xyz and histotry_xxx.xyz (xxx depends on the name of yaml file). The optimized.xyz is the optimized geometry in xyz formatted, where energy value is on the second line.</p>\n<p>In the parallel-run case, one directory has several subdirectories containing finished optimized job (optimized.xyz), python script <a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/extract_pm6opt.py\" target=\"_blank\" rel=\"noopener\">extract_pm6opt.py</a> can be used to extract optimized geometry and energy.</p>\n<ul>\n<li><em>Usage</em>:<ul>\n<li><code>python extract_pm6opt.py</code></li>\n<li>run in the directory containing these subdirectories</li>\n</ul>\n</li>\n<li><em>Descriptions</em>:<ul>\n<li>read optimized.xyz in all subdirectories whose name starts with ‘d’, change their format from xyz to gaussian input and extract energies from these xyz files</li>\n<li>all new files are written to a new directory optresult</li>\n<li>the name of the structures and the gaussian input files depends on these subdirectories – <em>test</em> if <em>dtest</em></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"dynamics-output\"><a href=\"#dynamics-output\" class=\"headerlink\" title=\"dynamics output\"></a>dynamics output</h2><p>Dynamics job creates additional file trajectory_*.xyz containing geometry information of all steps, which can be visualized by <a href=\"https://www.ks.uiuc.edu/Research/vmd/\" target=\"_blank\" rel=\"noopener\">VMD</a> software. The user can extract specific snapshots from the trajcetroy according to the stepsize set by VMD. Or use the python script <a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/traj2xyzs.py\" target=\"_blank\" rel=\"noopener\">traj2xyz.py</a> to achieve the same goal as VMD extractor.</p>\n<ul>\n<li><em>Usage</em>:<ul>\n<li><code>python traj2xyz.py stride</code></li>\n<li>stride must be an integer</li>\n<li>stride=100: 200 snapshots out of 200000 will be extracted from trajectory</li>\n<li>run in the directory containing child-directory where trajectory_*.xyz locates</li>\n</ul>\n</li>\n<li><em>Descriptions</em>:<ul>\n<li>go through all subdirectories to locate trajectory_*.xyz, extract an exact number of geometries from trajectory and wirtten them to new subdirectories correspondingly</li>\n<li>the name of new subdirectories and snapshots are based on the name of subdirectories</li>\n<li>if originally <code>dtesta dtestb</code>, then after run this script: <code>dtesta dtesta_snapshots dtestb dtestb_snapshots</code>; in <code>dtesta_snapshots</code>: <code>testa_snap1.xyz testa_snap2.xyz ...</code></li>\n</ul>\n</li>\n</ul>\n"},{"title":"Out of Field Proposal","date":"2019-01-16T23:47:38.000Z","_content":"\n# Goal\n\n- how concentration, temperature, bilayer, time and pH affects gp41\n  - secondary structures ($\\alpha$-helix, $\\beta$-strand and turn/loop?)\n  - tilt angles (if all $\\alpha$-helix, or one is $3_{10}$ helix)\n\n## [Oligomeric Structure and Three-Dimensional Fold of the HIV gp41 Membrane-Proximal External Region and Transmembrane Domain in Phospholipid Bilayers](https://pubs.acs.org/doi/10.1021/jacs.8b04010)\n\n### HIV-1 glycoprotein, gp41\n\n- mediate fusion of the virus lipid envelope with the target cell membrane during virus entry into cells\n- MPER and TMD\n  - membrane-proximal external region (MPER)\n    - harbors the epitopes for four broadly neutralizing antibodies\n    - binds to the membrane surface\n  - transmembrane domain (TMD)\n    - anchors the protein to the virus lipid envelope\n    - spans the bilayer\n  - both are important for HIV entry into cells\n    - Trp-to-Ala mutations in MPER and deletion of the MPER $\\rightarrow$ abrogate virus entry and membrane fusion\n    - replace gp41 TMD with other TMD $\\rightarrow$ impact fusion activity\n    - truncate C-terminus of TMD in simian HIV $\\rightarrow$ reduce fusogenicity\n\n  structure unchanged within 235K to 303K\n\n### MPER-TMD Structure\n\n- Turn Structure\n  - helix-turn-helix\n  - MPER as bound to the membrane surface while TMD spans the bilayer\n  - monomeric\n- Continuous Helix\n  - continuous helix, perpendicular to the membrane plane\n  - tilted orientation for long helix to reduce the hydrophobic mismatch between the peptide adn the bilayer portion of the bicelle\n- trimeric-MPER + monomeric-TMD\n- Helix-turn-helix trimer\n  - most $\\alpha$-helix: membrane-independent\n  - TMD 50% $\\beta$-strand: a combination of the amino acid sequence and the spontaneous negative curvature of PE membranes\n  - but not uniquely constrian the turn structure bewteen W678 and K683 at the atomic level\n\nThese divergent structural conclusions may arise from the truncated nature of th epeptide sequences in most studies, but could also reflect an inherent conformational plasticity of this region of gp41, which may be importanct for the protein to fold into different structures at different stages of virus-cell fusion\n\nheterogeneity in the protein oligomeric states, differenced in th ebicelle stability and size and the differenct P/L ratios used\n\n### Notes\n\n- $\\beta$-strand conformation is correlated with membrane dehydration\n- a monomeric membrane-spanning $\\alpha$-helix is expected to undergo rapid uniaxial diffusion in the membrane, while a highly oligomerized peptide or a peptide that contains an extended segment on the membrane surface is expected to be immobilized\n- MPER-TMD trimer is insensitive to the peptide concentration\n\n### Question\n- inconsistent and contradictory structural information abounds in the literature about the C-terminal membrane-interaction region of gp41\n- difficulty of crystallizing and solubilizaing the MPER-TMD, most structural studies of this functionally important domain were carried out using either only MPER or only TMD\n- FP and TMD disorder the cell and virus membranes by mechanisms that still poorly understood\n\n# SFG Theory\n\n## [Biological Macromolecules at Interfaces Probed by Chiral Vibrational Sum Frequency Generation Spectroscopy](https://pubs.acs.org/doi/10.1021/cr4006044)\n\nSecond-order nonlinear optical technique, which uses two pulsed lase sources, one at infrared (IR) frequency ($\\omega_{IR}$) and the other at visible frequency ($\\omega_{VIS}$). When this two beams are made to spatially and temporally overlap at surfaces, a second order nonlinear optical process producing polarization at the sum frequency ($\\omega_{IR}+\\omega_{VIS}$) can be induced to generate SFG signal.\n\nThe electric field of SFG signals $E_{SFG}^I \\propto \\sum_{JK}\\chi_{IJK}^{(2)} E_{VIS}^J E_{IR}^K$. $\\chi_{IJK}^{(2)}$ is an element of the second-order susceptibility tensor, which contains structural and chemical information about the target medium. It is nonzero only when the medium lacks centrosymmetry and the second-order susceptibility of an interface consists of a nonresonant term, $\\chi_{NR}^{(2)}$, and a sum of vibrationally resonant terms, $\\chi_q^{(2)}$\n$$\\chi^{(2)}=\\chi_{NR}^{(2)}+\\sum_q \\chi_q^{(2)}=\\chi_{NR}^{(2)}+\\sum_q \\frac{A_q}{\\omega_{IR}-\\omega_q+i\\Gamma_q}$$\nwhere $A_q$ is the amplitude, $\\Gamma_q$ is the damping coefficient, $\\omega_q$ is the resonat frequency of the qth vibrational mode, and $w_{IR}$ is the frequency of the incident IR beam. The SFG signal is enhanced when $\\omega_{IR}$ is in resonance with $\\omega_q$. Thus, SFG is a surface-specific vibrational spectroscopy\n\n## [Molecular Chemical Structure on Poly(methyl methacrylate) (PMMA) Surface Studied by Sum Frequency Generation (SFG) Vibrational Spectroscopy](https://pubs.acs.org/doi/full/10.1021/jp013161d) \n\nIn an SFG setup, a pulsed visible laser beam (532nm) and a tunable pulsed IR beam are overlapped spatially and temporally on a surface. The light emitted by the nonlinear process at the sum frequency, $\\omega=\\omega_1+\\omega_2$, is detected by a photodector. The intensity of output is proportional to the square of the samples's second-order nonlinear susceptibility, which vanishes when a material has inversion symmetry under the electric-dipole approximation. Bothe theoretical calculations and experimental results show that SFG is submonolayer sensitive. Aplot of SFG intensities vs the frequency of the IR laser produces the vibrational spectrum of the surface species. As SFG is a polarized light experiment, the orientation of surface molecules can also be deduced by using different polarization combinations of input and output beams.\n\n![sfg setup](https://raw.githubusercontent.com/yueliu96/blog_images/master/sfg_setup.jpg)\n$$I(\\omega)=\\frac{8\\pi^3\\omega^2sec^2\\beta}{c^3n_1(\\omega)n_1(\\omega_1)n_1(\\omega_2)}|\\chi_{eff}^{(2)}|^2I_1(\\omega_1)I_2(\\omega_2)$$\nwhere $n_i(\\omega)$ is the refractive index of medium i at frequency $\\omega$, $\\beta$ is thereflection angle of the sum frequency field, $I_1(\\omega_1)$ and $I_2(\\omega_2)$ are the intensities of the two input files. $\\chi_{eff}^{(2)}$ is the effective second-order nonlinear susceptibility tensor of the surface, which is related to the second-order nonlinear susceptibility $\\chi^{(2)}$ in the lab coordinate system.\n\nDifferent component of $\\chi^{(2)}$ are related to the respective componets of the molecular hyperpolarizability (in the molecular coordinated system, which is a product of IR and Raman transition moments) by the average orientational angle of the functional group. Therefore, we can deduce the orientation information of each functional group after determining the corresponding components of $\\chi^{(2)}$ by fitting SFG spectra and knowing the molecular hyperpolarizability.\n\n$$\n\\chi_{eff,ssp}^{(2)}=L_{yy}(\\omega_{SFG})L_{yy}(\\omega_{Vis})L_{zz}(\\omega_{IR})sin\\beta_{IR} \\chi_{yyz}^{(2)}\n$$\n\n$$\n\\chi_{eff,ppp}^{(2)}=-L_{xx}(\\omega_{SFG})L_{xx}(\\omega_{Vis})L_{zz}(\\omega_{IR})cos\\beta_{SFG}cos\\beta_{Vis}sin\\beta_{IR}\\chi^{(2)}_{xxz}\\\\\\\\\n-L_{xx}(\\omega_{SFG})L_{zz}(\\omega_{Vis})L_{xx}(\\omega_{IR})cos\\beta_{SFG}sin\\beta_{Vis}cos\\beta_{IR}\\chi^{(2)}_{xzx}\\\\\\\\\n+L_{zz}(\\omega_{SFG})L_{xx}(\\omega_{Vis})L_{xx}(\\omega_{IR})sin\\beta_{SFG}cos\\beta_{Vis}cos\\beta_{IR}\\chi^{(2)}_{zxx}\\\\\\\\\n+L_{zz}(\\omega_{SFG})L_{zz}(\\omega_{Vis})L_{zz}(\\omega_{IR})sin\\beta_{SFG}sin\\beta_{Vis}sin\\beta_{IR}\\chi^{(2)}_{zzz} \\tag{1}\n$$\n\nHere $\\chi_{xyz}$ is one componaent of $\\chi^{(2)}$ with the lab coordinates chosedn such that z is along the interface normal and x is in the incident plane. $\\chi_{eff,ssp}^{(2)}$ is a component of the effective second-order nonlinear susceptibility measured in the experiment, means the element obtained by s-polarized SF beam, s-polarized visible beam and p-polarized IR beam. $\\beta_{x}$ is the angle between the surface normal and the x beam. $L_{ii} (i=x,y\\ or\\ z)$ are the Fresnel coefficients. Using the near total reflection geometry, the first three items in equation (1) are approxiamated to be 0. \n\nWith IR-visible SFG, if the IR frequency is near vibrational resonance, $\\chi_{eff}^{(2)}$ can be written as \n\n$$\\chi_{eff}^{(2)}=\\chi_{nr}+\\sum_q \\frac{A_q}{\\omega_{IR}-\\omega_q+i\\Gamma_q}$$\n\n$\\chi_{nr}$ arises from the nonresonant background contribution\n\n$$\nI_{SFG}=|A_0+\\sum_j^\\text{num of peaks}\\frac{A_j}{\\omega-\\omega_j+i\\Gamma_j}|^2\\\\\n\\chi^{(2)}_{eff}(j)=\\frac{A_j}{\\Gamma_j}$$\nwhere $A_j$, $\\omega_j$ and $\\Gamma_j$ are the strength, resonant frequency and damping coefficient of the vibrational mode j, respectively. And they can be obtained by fitting the spectrum\n\n# SFG Method\n\n## Tell $\\beta$-strand and $\\beta$-sheet\n\n### [Misfolding of Human Islet Amyloid Polypeptide at Lipid Membrane Populates through β-Sheet Conformers without Involving α-Helical Intermediates](https://pubs.acs.org/doi/10.1021/jacs.8b08537)\n\n1. advantage of this article\n- quickly capture the transient intermediates in situ and in real time\n- identify the formation of $\\beta$-hairpin-like monomers, $\\beta$-sheet oligomers and fibrils\n- reveal the mechanism of amyloid aggregation at the lipid membrane\n- method\n  - X-ray crystallography: high-rsolution, but not enough time resolution to probe the real-time aggregation\n\n2. method\n\n   the combination of interface-sensitive chiral amide I, achiral amide II and amide III spectral signals of the protein backbone generated in sum frequency generation vibrational spectroscopy (SFG-VS) can provide a unique and powerful tool to capture the hIAPP intermediates at the interface d uring the agggregation process with sufficient structural temporal resolutions\n\n   develop a highly-sensitive femtosecond SFG-VS system, can acquire the ssp and psp sepctra simultaneously with a recording time of < 5 seconds\n\n   Amide II vibrations arise from the out-of-phase combination of the C-N stretch and the N-H in-plane deformation\n\n- $\\alpha$-helix: achiral: 1660, 1280\n- $\\beta$-sheet:\n  - chiral amide I mode:\n    - $\\beta$-hairpin-like monomer (2 antiparallel hydrogen bonded $\\beta$-strands connected by a $beta$-turn or short loop): 1630-1643\n    - B mode parallel $\\beta$-sheet oligomers and fibruls: 1624 (<1630)\n    - A mode parrallel $\\beta$-sheet: 1670\n  - chiral N-H stretch mode: 3285 $cm^{-1}$\n  - achiral amide I\n    - 1625\n    - 1680\n  - achiral amide II at 1540: $\\beta$-sheet oligomers and fibrils\n- loop: achiral: 1660, 1230\n- coil: achiral: 1660\n- turn: achiral: 1660\n  \n## Orientation angles\n\n### [Observing a Model Ion Channel Gating Action in Model Cell Membranes in Real Time in Situ: Membrane Potential Change Induced Alamethicin Orientation Change](https://pubs.acs.org/doi/10.1021/ja2110784)\n\n![sfg](https://pubs.acs.org/appl/literatum/publisher/achs/journals/content/jacsat/2012/jacsat.2012.134.issue-14/ja2110784/production/images/large/ja-2011-110784_0004.jpeg)\n\n#### $3_{10}$-helix\n\nA $3_{10}$ helix is a type of secondary structure found in proteins and polypeptides. Of the numerous protein secondary structures present, it is the 4th most common type observed; following $\\alpha$-helices, $\\beta$-sheeots and reverse turns. $3_{10}$ helices constitute nearly 10%-15% of all helices in protein secondary structures, and are typically observed as extensions of $\\alpha$-helices fond at either their N- or C- termini.\n\n\n#### alamethicin\n\nPredominantly helical with an N-terminal $\\alpha$-helix and a C-terminal domain containing a $3_{10}$-helical element. The Pro14 residue separating the two domains induces a $20^\\circ-35^\\circ$ bend in alamethicin\n\n#### SFG result\n\n- 1670$cm^{-1}$: a helical structure dominated by $\\alpha$-helix with minor contribution from a $3_{10}$-helix\n- 1635: $3_{10}$-helical structure\n- 1720: carbonyl groups of lipid bilayer\n- the relationship between the measured ppp and ssp intensity ratios of the peaks at 1670 and 1635 $cm^{-1}$, it is possible to determine the orientation angles $\\theta_1$ and $\\theta_2$\n- SFG signal intensity is related to the number of molecules detected and their orientations\n\n[Surpport Information](https://pubs.acs.org/doi/suppl/10.1021/ja2110784/suppl_file/ja2110784_si_001.pdf)\n\n### [Orientation Determination of Protein Helical Secondary Structures Using Linear and Nonlinear Vibrational Spectroscopy](https://pubs.acs.org/doi/abs/10.1021/jp904153z)\n\nSFG amide I signals can be collected using different polarization combinations of the input laser beams and output signal beam to measure the second-order nonlinear hyperpolarizability elements through the orientation distribution of these helices.\n$$I_{ssp}\\propto (-L_{yy}(\\omega)L_{zz}(\\omega_1)L_{yy}(\\omega_2)sin\\beta_2 \\chi_{yyz})^2$$\nwhere $L_{ii}(\\omega)$ is a Fresnel coefficient and local field correction factor and $\\beta,\\ \\beta_1\\ and\\ \\beta_2$ are angles of the signal, visible and IR beams with respect to the surface normal, respectively.\n\nwhen input or output beam angle is close to the critical angle of the total internal reflection:\n$$I_{ppp}\\propto |L_{zz}(\\omega)L_{zz}(\\omega_1)L_{zz}(\\omega_2)sin\\beta sin\\beta_1sin\\beta_2 \\chi_{zzz}|^2 $$\n![SFG tilt](https://raw.githubusercontent.com/yueliu96/blog_images/master/SFGorien.jpeg)\n\n**Pauling's $\\alpha$-Helix**\n\nPauling's assumption: each peptide bond is planar due to the resonace structure between teh carbonyl C=O bond and teh amide C-N bond. On the basis of this assumption, two helical models were constructed and proposed, a $\\gamma$-helix (not discovered in any protein structures) and an $\\alpha$-helix, with 5.1 residues per turn and 3.6 residues per turn, respectively.\n\n$\\alpha$-helix: it repeats itselt every 5.4\n$\\overset{\\circ}{A}$ along the helical axis. Every backbone carbonyl C=O and N-H group on a peptide unit is hydrogen bonded to another N-H and C=O, respectively. Additionally, the backbone C=O groups point in the same direction, while the N-H groups point in the opposite direction.\n\nThree amide I vibrational modes of $\\alpha$-helices, A, $E_1$ and $E_2$. A and $E_1$ are IR-active, while the all three modes are Raman-active. Because a SFG-active mode needs to be both IR- and Raman-active, only the A and $E_1$ modes are SFG-active.\n\n### [Interactions of Alamethicin with Model Cell Membranes Investigated Using Sum Frequency Generation Vibrational Spectroscopy in Real Time in Situ](https://pubs.acs.org/doi/10.1021/jp911174d)\n![alam tilt](https://raw.githubusercontent.com/yueliu96/blog_images/master/alam%20helix%20angle.jpeg)\n\n# To Be Read \n\n[In Situ Molecular Level Studies on Membrane Related Peptides and Proteins in Real Time Using Sum Frequency Generation Vibrational Spectroscopy](https://www.sciencedirect.com/science/article/pii/S1047847709000744?via%3Dihub)\n\n\n\n[Structure and Orientation of Interfacial Proteins Determined by Sum Frequency Generation Vibrational Spectroscopy: Method and Application](https://www.sciencedirect.com/science/article/pii/B9780124165960000075?via%3Dihub)\n\n# Useful Link\n\n1. [Protein Secondary Structure](http://www.cryst.bbk.ac.uk/PPS2/course/section8/ss-960531_1.html)","source":"_posts/Out-of-Field-Proposal.md","raw":"---\ntitle: Out of Field Proposal\ndate: 2019-01-16 15:47:38\ntags:\ncategories:\n- NoteBook\n---\n\n# Goal\n\n- how concentration, temperature, bilayer, time and pH affects gp41\n  - secondary structures ($\\alpha$-helix, $\\beta$-strand and turn/loop?)\n  - tilt angles (if all $\\alpha$-helix, or one is $3_{10}$ helix)\n\n## [Oligomeric Structure and Three-Dimensional Fold of the HIV gp41 Membrane-Proximal External Region and Transmembrane Domain in Phospholipid Bilayers](https://pubs.acs.org/doi/10.1021/jacs.8b04010)\n\n### HIV-1 glycoprotein, gp41\n\n- mediate fusion of the virus lipid envelope with the target cell membrane during virus entry into cells\n- MPER and TMD\n  - membrane-proximal external region (MPER)\n    - harbors the epitopes for four broadly neutralizing antibodies\n    - binds to the membrane surface\n  - transmembrane domain (TMD)\n    - anchors the protein to the virus lipid envelope\n    - spans the bilayer\n  - both are important for HIV entry into cells\n    - Trp-to-Ala mutations in MPER and deletion of the MPER $\\rightarrow$ abrogate virus entry and membrane fusion\n    - replace gp41 TMD with other TMD $\\rightarrow$ impact fusion activity\n    - truncate C-terminus of TMD in simian HIV $\\rightarrow$ reduce fusogenicity\n\n  structure unchanged within 235K to 303K\n\n### MPER-TMD Structure\n\n- Turn Structure\n  - helix-turn-helix\n  - MPER as bound to the membrane surface while TMD spans the bilayer\n  - monomeric\n- Continuous Helix\n  - continuous helix, perpendicular to the membrane plane\n  - tilted orientation for long helix to reduce the hydrophobic mismatch between the peptide adn the bilayer portion of the bicelle\n- trimeric-MPER + monomeric-TMD\n- Helix-turn-helix trimer\n  - most $\\alpha$-helix: membrane-independent\n  - TMD 50% $\\beta$-strand: a combination of the amino acid sequence and the spontaneous negative curvature of PE membranes\n  - but not uniquely constrian the turn structure bewteen W678 and K683 at the atomic level\n\nThese divergent structural conclusions may arise from the truncated nature of th epeptide sequences in most studies, but could also reflect an inherent conformational plasticity of this region of gp41, which may be importanct for the protein to fold into different structures at different stages of virus-cell fusion\n\nheterogeneity in the protein oligomeric states, differenced in th ebicelle stability and size and the differenct P/L ratios used\n\n### Notes\n\n- $\\beta$-strand conformation is correlated with membrane dehydration\n- a monomeric membrane-spanning $\\alpha$-helix is expected to undergo rapid uniaxial diffusion in the membrane, while a highly oligomerized peptide or a peptide that contains an extended segment on the membrane surface is expected to be immobilized\n- MPER-TMD trimer is insensitive to the peptide concentration\n\n### Question\n- inconsistent and contradictory structural information abounds in the literature about the C-terminal membrane-interaction region of gp41\n- difficulty of crystallizing and solubilizaing the MPER-TMD, most structural studies of this functionally important domain were carried out using either only MPER or only TMD\n- FP and TMD disorder the cell and virus membranes by mechanisms that still poorly understood\n\n# SFG Theory\n\n## [Biological Macromolecules at Interfaces Probed by Chiral Vibrational Sum Frequency Generation Spectroscopy](https://pubs.acs.org/doi/10.1021/cr4006044)\n\nSecond-order nonlinear optical technique, which uses two pulsed lase sources, one at infrared (IR) frequency ($\\omega_{IR}$) and the other at visible frequency ($\\omega_{VIS}$). When this two beams are made to spatially and temporally overlap at surfaces, a second order nonlinear optical process producing polarization at the sum frequency ($\\omega_{IR}+\\omega_{VIS}$) can be induced to generate SFG signal.\n\nThe electric field of SFG signals $E_{SFG}^I \\propto \\sum_{JK}\\chi_{IJK}^{(2)} E_{VIS}^J E_{IR}^K$. $\\chi_{IJK}^{(2)}$ is an element of the second-order susceptibility tensor, which contains structural and chemical information about the target medium. It is nonzero only when the medium lacks centrosymmetry and the second-order susceptibility of an interface consists of a nonresonant term, $\\chi_{NR}^{(2)}$, and a sum of vibrationally resonant terms, $\\chi_q^{(2)}$\n$$\\chi^{(2)}=\\chi_{NR}^{(2)}+\\sum_q \\chi_q^{(2)}=\\chi_{NR}^{(2)}+\\sum_q \\frac{A_q}{\\omega_{IR}-\\omega_q+i\\Gamma_q}$$\nwhere $A_q$ is the amplitude, $\\Gamma_q$ is the damping coefficient, $\\omega_q$ is the resonat frequency of the qth vibrational mode, and $w_{IR}$ is the frequency of the incident IR beam. The SFG signal is enhanced when $\\omega_{IR}$ is in resonance with $\\omega_q$. Thus, SFG is a surface-specific vibrational spectroscopy\n\n## [Molecular Chemical Structure on Poly(methyl methacrylate) (PMMA) Surface Studied by Sum Frequency Generation (SFG) Vibrational Spectroscopy](https://pubs.acs.org/doi/full/10.1021/jp013161d) \n\nIn an SFG setup, a pulsed visible laser beam (532nm) and a tunable pulsed IR beam are overlapped spatially and temporally on a surface. The light emitted by the nonlinear process at the sum frequency, $\\omega=\\omega_1+\\omega_2$, is detected by a photodector. The intensity of output is proportional to the square of the samples's second-order nonlinear susceptibility, which vanishes when a material has inversion symmetry under the electric-dipole approximation. Bothe theoretical calculations and experimental results show that SFG is submonolayer sensitive. Aplot of SFG intensities vs the frequency of the IR laser produces the vibrational spectrum of the surface species. As SFG is a polarized light experiment, the orientation of surface molecules can also be deduced by using different polarization combinations of input and output beams.\n\n![sfg setup](https://raw.githubusercontent.com/yueliu96/blog_images/master/sfg_setup.jpg)\n$$I(\\omega)=\\frac{8\\pi^3\\omega^2sec^2\\beta}{c^3n_1(\\omega)n_1(\\omega_1)n_1(\\omega_2)}|\\chi_{eff}^{(2)}|^2I_1(\\omega_1)I_2(\\omega_2)$$\nwhere $n_i(\\omega)$ is the refractive index of medium i at frequency $\\omega$, $\\beta$ is thereflection angle of the sum frequency field, $I_1(\\omega_1)$ and $I_2(\\omega_2)$ are the intensities of the two input files. $\\chi_{eff}^{(2)}$ is the effective second-order nonlinear susceptibility tensor of the surface, which is related to the second-order nonlinear susceptibility $\\chi^{(2)}$ in the lab coordinate system.\n\nDifferent component of $\\chi^{(2)}$ are related to the respective componets of the molecular hyperpolarizability (in the molecular coordinated system, which is a product of IR and Raman transition moments) by the average orientational angle of the functional group. Therefore, we can deduce the orientation information of each functional group after determining the corresponding components of $\\chi^{(2)}$ by fitting SFG spectra and knowing the molecular hyperpolarizability.\n\n$$\n\\chi_{eff,ssp}^{(2)}=L_{yy}(\\omega_{SFG})L_{yy}(\\omega_{Vis})L_{zz}(\\omega_{IR})sin\\beta_{IR} \\chi_{yyz}^{(2)}\n$$\n\n$$\n\\chi_{eff,ppp}^{(2)}=-L_{xx}(\\omega_{SFG})L_{xx}(\\omega_{Vis})L_{zz}(\\omega_{IR})cos\\beta_{SFG}cos\\beta_{Vis}sin\\beta_{IR}\\chi^{(2)}_{xxz}\\\\\\\\\n-L_{xx}(\\omega_{SFG})L_{zz}(\\omega_{Vis})L_{xx}(\\omega_{IR})cos\\beta_{SFG}sin\\beta_{Vis}cos\\beta_{IR}\\chi^{(2)}_{xzx}\\\\\\\\\n+L_{zz}(\\omega_{SFG})L_{xx}(\\omega_{Vis})L_{xx}(\\omega_{IR})sin\\beta_{SFG}cos\\beta_{Vis}cos\\beta_{IR}\\chi^{(2)}_{zxx}\\\\\\\\\n+L_{zz}(\\omega_{SFG})L_{zz}(\\omega_{Vis})L_{zz}(\\omega_{IR})sin\\beta_{SFG}sin\\beta_{Vis}sin\\beta_{IR}\\chi^{(2)}_{zzz} \\tag{1}\n$$\n\nHere $\\chi_{xyz}$ is one componaent of $\\chi^{(2)}$ with the lab coordinates chosedn such that z is along the interface normal and x is in the incident plane. $\\chi_{eff,ssp}^{(2)}$ is a component of the effective second-order nonlinear susceptibility measured in the experiment, means the element obtained by s-polarized SF beam, s-polarized visible beam and p-polarized IR beam. $\\beta_{x}$ is the angle between the surface normal and the x beam. $L_{ii} (i=x,y\\ or\\ z)$ are the Fresnel coefficients. Using the near total reflection geometry, the first three items in equation (1) are approxiamated to be 0. \n\nWith IR-visible SFG, if the IR frequency is near vibrational resonance, $\\chi_{eff}^{(2)}$ can be written as \n\n$$\\chi_{eff}^{(2)}=\\chi_{nr}+\\sum_q \\frac{A_q}{\\omega_{IR}-\\omega_q+i\\Gamma_q}$$\n\n$\\chi_{nr}$ arises from the nonresonant background contribution\n\n$$\nI_{SFG}=|A_0+\\sum_j^\\text{num of peaks}\\frac{A_j}{\\omega-\\omega_j+i\\Gamma_j}|^2\\\\\n\\chi^{(2)}_{eff}(j)=\\frac{A_j}{\\Gamma_j}$$\nwhere $A_j$, $\\omega_j$ and $\\Gamma_j$ are the strength, resonant frequency and damping coefficient of the vibrational mode j, respectively. And they can be obtained by fitting the spectrum\n\n# SFG Method\n\n## Tell $\\beta$-strand and $\\beta$-sheet\n\n### [Misfolding of Human Islet Amyloid Polypeptide at Lipid Membrane Populates through β-Sheet Conformers without Involving α-Helical Intermediates](https://pubs.acs.org/doi/10.1021/jacs.8b08537)\n\n1. advantage of this article\n- quickly capture the transient intermediates in situ and in real time\n- identify the formation of $\\beta$-hairpin-like monomers, $\\beta$-sheet oligomers and fibrils\n- reveal the mechanism of amyloid aggregation at the lipid membrane\n- method\n  - X-ray crystallography: high-rsolution, but not enough time resolution to probe the real-time aggregation\n\n2. method\n\n   the combination of interface-sensitive chiral amide I, achiral amide II and amide III spectral signals of the protein backbone generated in sum frequency generation vibrational spectroscopy (SFG-VS) can provide a unique and powerful tool to capture the hIAPP intermediates at the interface d uring the agggregation process with sufficient structural temporal resolutions\n\n   develop a highly-sensitive femtosecond SFG-VS system, can acquire the ssp and psp sepctra simultaneously with a recording time of < 5 seconds\n\n   Amide II vibrations arise from the out-of-phase combination of the C-N stretch and the N-H in-plane deformation\n\n- $\\alpha$-helix: achiral: 1660, 1280\n- $\\beta$-sheet:\n  - chiral amide I mode:\n    - $\\beta$-hairpin-like monomer (2 antiparallel hydrogen bonded $\\beta$-strands connected by a $beta$-turn or short loop): 1630-1643\n    - B mode parallel $\\beta$-sheet oligomers and fibruls: 1624 (<1630)\n    - A mode parrallel $\\beta$-sheet: 1670\n  - chiral N-H stretch mode: 3285 $cm^{-1}$\n  - achiral amide I\n    - 1625\n    - 1680\n  - achiral amide II at 1540: $\\beta$-sheet oligomers and fibrils\n- loop: achiral: 1660, 1230\n- coil: achiral: 1660\n- turn: achiral: 1660\n  \n## Orientation angles\n\n### [Observing a Model Ion Channel Gating Action in Model Cell Membranes in Real Time in Situ: Membrane Potential Change Induced Alamethicin Orientation Change](https://pubs.acs.org/doi/10.1021/ja2110784)\n\n![sfg](https://pubs.acs.org/appl/literatum/publisher/achs/journals/content/jacsat/2012/jacsat.2012.134.issue-14/ja2110784/production/images/large/ja-2011-110784_0004.jpeg)\n\n#### $3_{10}$-helix\n\nA $3_{10}$ helix is a type of secondary structure found in proteins and polypeptides. Of the numerous protein secondary structures present, it is the 4th most common type observed; following $\\alpha$-helices, $\\beta$-sheeots and reverse turns. $3_{10}$ helices constitute nearly 10%-15% of all helices in protein secondary structures, and are typically observed as extensions of $\\alpha$-helices fond at either their N- or C- termini.\n\n\n#### alamethicin\n\nPredominantly helical with an N-terminal $\\alpha$-helix and a C-terminal domain containing a $3_{10}$-helical element. The Pro14 residue separating the two domains induces a $20^\\circ-35^\\circ$ bend in alamethicin\n\n#### SFG result\n\n- 1670$cm^{-1}$: a helical structure dominated by $\\alpha$-helix with minor contribution from a $3_{10}$-helix\n- 1635: $3_{10}$-helical structure\n- 1720: carbonyl groups of lipid bilayer\n- the relationship between the measured ppp and ssp intensity ratios of the peaks at 1670 and 1635 $cm^{-1}$, it is possible to determine the orientation angles $\\theta_1$ and $\\theta_2$\n- SFG signal intensity is related to the number of molecules detected and their orientations\n\n[Surpport Information](https://pubs.acs.org/doi/suppl/10.1021/ja2110784/suppl_file/ja2110784_si_001.pdf)\n\n### [Orientation Determination of Protein Helical Secondary Structures Using Linear and Nonlinear Vibrational Spectroscopy](https://pubs.acs.org/doi/abs/10.1021/jp904153z)\n\nSFG amide I signals can be collected using different polarization combinations of the input laser beams and output signal beam to measure the second-order nonlinear hyperpolarizability elements through the orientation distribution of these helices.\n$$I_{ssp}\\propto (-L_{yy}(\\omega)L_{zz}(\\omega_1)L_{yy}(\\omega_2)sin\\beta_2 \\chi_{yyz})^2$$\nwhere $L_{ii}(\\omega)$ is a Fresnel coefficient and local field correction factor and $\\beta,\\ \\beta_1\\ and\\ \\beta_2$ are angles of the signal, visible and IR beams with respect to the surface normal, respectively.\n\nwhen input or output beam angle is close to the critical angle of the total internal reflection:\n$$I_{ppp}\\propto |L_{zz}(\\omega)L_{zz}(\\omega_1)L_{zz}(\\omega_2)sin\\beta sin\\beta_1sin\\beta_2 \\chi_{zzz}|^2 $$\n![SFG tilt](https://raw.githubusercontent.com/yueliu96/blog_images/master/SFGorien.jpeg)\n\n**Pauling's $\\alpha$-Helix**\n\nPauling's assumption: each peptide bond is planar due to the resonace structure between teh carbonyl C=O bond and teh amide C-N bond. On the basis of this assumption, two helical models were constructed and proposed, a $\\gamma$-helix (not discovered in any protein structures) and an $\\alpha$-helix, with 5.1 residues per turn and 3.6 residues per turn, respectively.\n\n$\\alpha$-helix: it repeats itselt every 5.4\n$\\overset{\\circ}{A}$ along the helical axis. Every backbone carbonyl C=O and N-H group on a peptide unit is hydrogen bonded to another N-H and C=O, respectively. Additionally, the backbone C=O groups point in the same direction, while the N-H groups point in the opposite direction.\n\nThree amide I vibrational modes of $\\alpha$-helices, A, $E_1$ and $E_2$. A and $E_1$ are IR-active, while the all three modes are Raman-active. Because a SFG-active mode needs to be both IR- and Raman-active, only the A and $E_1$ modes are SFG-active.\n\n### [Interactions of Alamethicin with Model Cell Membranes Investigated Using Sum Frequency Generation Vibrational Spectroscopy in Real Time in Situ](https://pubs.acs.org/doi/10.1021/jp911174d)\n![alam tilt](https://raw.githubusercontent.com/yueliu96/blog_images/master/alam%20helix%20angle.jpeg)\n\n# To Be Read \n\n[In Situ Molecular Level Studies on Membrane Related Peptides and Proteins in Real Time Using Sum Frequency Generation Vibrational Spectroscopy](https://www.sciencedirect.com/science/article/pii/S1047847709000744?via%3Dihub)\n\n\n\n[Structure and Orientation of Interfacial Proteins Determined by Sum Frequency Generation Vibrational Spectroscopy: Method and Application](https://www.sciencedirect.com/science/article/pii/B9780124165960000075?via%3Dihub)\n\n# Useful Link\n\n1. [Protein Secondary Structure](http://www.cryst.bbk.ac.uk/PPS2/course/section8/ss-960531_1.html)","slug":"Out-of-Field-Proposal","published":1,"updated":"2019-01-25T19:00:30.247Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrcn2vrx000uua5sry83chv5","content":"<h1 id=\"Goal\"><a href=\"#Goal\" class=\"headerlink\" title=\"Goal\"></a>Goal</h1><ul>\n<li>how concentration, temperature, bilayer, time and pH affects gp41<ul>\n<li>secondary structures ($\\alpha$-helix, $\\beta$-strand and turn/loop?)</li>\n<li>tilt angles (if all $\\alpha$-helix, or one is $3_{10}$ helix)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Oligomeric-Structure-and-Three-Dimensional-Fold-of-the-HIV-gp41-Membrane-Proximal-External-Region-and-Transmembrane-Domain-in-Phospholipid-Bilayers\"><a href=\"#Oligomeric-Structure-and-Three-Dimensional-Fold-of-the-HIV-gp41-Membrane-Proximal-External-Region-and-Transmembrane-Domain-in-Phospholipid-Bilayers\" class=\"headerlink\" title=\"Oligomeric Structure and Three-Dimensional Fold of the HIV gp41 Membrane-Proximal External Region and Transmembrane Domain in Phospholipid Bilayers\"></a><a href=\"https://pubs.acs.org/doi/10.1021/jacs.8b04010\" target=\"_blank\" rel=\"noopener\">Oligomeric Structure and Three-Dimensional Fold of the HIV gp41 Membrane-Proximal External Region and Transmembrane Domain in Phospholipid Bilayers</a></h2><h3 id=\"HIV-1-glycoprotein-gp41\"><a href=\"#HIV-1-glycoprotein-gp41\" class=\"headerlink\" title=\"HIV-1 glycoprotein, gp41\"></a>HIV-1 glycoprotein, gp41</h3><ul>\n<li>mediate fusion of the virus lipid envelope with the target cell membrane during virus entry into cells</li>\n<li><p>MPER and TMD</p>\n<ul>\n<li>membrane-proximal external region (MPER)<ul>\n<li>harbors the epitopes for four broadly neutralizing antibodies</li>\n<li>binds to the membrane surface</li>\n</ul>\n</li>\n<li>transmembrane domain (TMD)<ul>\n<li>anchors the protein to the virus lipid envelope</li>\n<li>spans the bilayer</li>\n</ul>\n</li>\n<li>both are important for HIV entry into cells<ul>\n<li>Trp-to-Ala mutations in MPER and deletion of the MPER $\\rightarrow$ abrogate virus entry and membrane fusion</li>\n<li>replace gp41 TMD with other TMD $\\rightarrow$ impact fusion activity</li>\n<li>truncate C-terminus of TMD in simian HIV $\\rightarrow$ reduce fusogenicity</li>\n</ul>\n</li>\n</ul>\n<p>structure unchanged within 235K to 303K</p>\n</li>\n</ul>\n<h3 id=\"MPER-TMD-Structure\"><a href=\"#MPER-TMD-Structure\" class=\"headerlink\" title=\"MPER-TMD Structure\"></a>MPER-TMD Structure</h3><ul>\n<li>Turn Structure<ul>\n<li>helix-turn-helix</li>\n<li>MPER as bound to the membrane surface while TMD spans the bilayer</li>\n<li>monomeric</li>\n</ul>\n</li>\n<li>Continuous Helix<ul>\n<li>continuous helix, perpendicular to the membrane plane</li>\n<li>tilted orientation for long helix to reduce the hydrophobic mismatch between the peptide adn the bilayer portion of the bicelle</li>\n</ul>\n</li>\n<li>trimeric-MPER + monomeric-TMD</li>\n<li>Helix-turn-helix trimer<ul>\n<li>most $\\alpha$-helix: membrane-independent</li>\n<li>TMD 50% $\\beta$-strand: a combination of the amino acid sequence and the spontaneous negative curvature of PE membranes</li>\n<li>but not uniquely constrian the turn structure bewteen W678 and K683 at the atomic level</li>\n</ul>\n</li>\n</ul>\n<p>These divergent structural conclusions may arise from the truncated nature of th epeptide sequences in most studies, but could also reflect an inherent conformational plasticity of this region of gp41, which may be importanct for the protein to fold into different structures at different stages of virus-cell fusion</p>\n<p>heterogeneity in the protein oligomeric states, differenced in th ebicelle stability and size and the differenct P/L ratios used</p>\n<h3 id=\"Notes\"><a href=\"#Notes\" class=\"headerlink\" title=\"Notes\"></a>Notes</h3><ul>\n<li>$\\beta$-strand conformation is correlated with membrane dehydration</li>\n<li>a monomeric membrane-spanning $\\alpha$-helix is expected to undergo rapid uniaxial diffusion in the membrane, while a highly oligomerized peptide or a peptide that contains an extended segment on the membrane surface is expected to be immobilized</li>\n<li>MPER-TMD trimer is insensitive to the peptide concentration</li>\n</ul>\n<h3 id=\"Question\"><a href=\"#Question\" class=\"headerlink\" title=\"Question\"></a>Question</h3><ul>\n<li>inconsistent and contradictory structural information abounds in the literature about the C-terminal membrane-interaction region of gp41</li>\n<li>difficulty of crystallizing and solubilizaing the MPER-TMD, most structural studies of this functionally important domain were carried out using either only MPER or only TMD</li>\n<li>FP and TMD disorder the cell and virus membranes by mechanisms that still poorly understood</li>\n</ul>\n<h1 id=\"SFG-Theory\"><a href=\"#SFG-Theory\" class=\"headerlink\" title=\"SFG Theory\"></a>SFG Theory</h1><h2 id=\"Biological-Macromolecules-at-Interfaces-Probed-by-Chiral-Vibrational-Sum-Frequency-Generation-Spectroscopy\"><a href=\"#Biological-Macromolecules-at-Interfaces-Probed-by-Chiral-Vibrational-Sum-Frequency-Generation-Spectroscopy\" class=\"headerlink\" title=\"Biological Macromolecules at Interfaces Probed by Chiral Vibrational Sum Frequency Generation Spectroscopy\"></a><a href=\"https://pubs.acs.org/doi/10.1021/cr4006044\" target=\"_blank\" rel=\"noopener\">Biological Macromolecules at Interfaces Probed by Chiral Vibrational Sum Frequency Generation Spectroscopy</a></h2><p>Second-order nonlinear optical technique, which uses two pulsed lase sources, one at infrared (IR) frequency ($\\omega_{IR}$) and the other at visible frequency ($\\omega_{VIS}$). When this two beams are made to spatially and temporally overlap at surfaces, a second order nonlinear optical process producing polarization at the sum frequency ($\\omega_{IR}+\\omega_{VIS}$) can be induced to generate SFG signal.</p>\n<p>The electric field of SFG signals $E_{SFG}^I \\propto \\sum_{JK}\\chi_{IJK}^{(2)} E_{VIS}^J E_{IR}^K$. $\\chi_{IJK}^{(2)}$ is an element of the second-order susceptibility tensor, which contains structural and chemical information about the target medium. It is nonzero only when the medium lacks centrosymmetry and the second-order susceptibility of an interface consists of a nonresonant term, $\\chi_{NR}^{(2)}$, and a sum of vibrationally resonant terms, $\\chi_q^{(2)}$<br>$$\\chi^{(2)}=\\chi_{NR}^{(2)}+\\sum_q \\chi_q^{(2)}=\\chi_{NR}^{(2)}+\\sum_q \\frac{A_q}{\\omega_{IR}-\\omega_q+i\\Gamma_q}$$<br>where $A_q$ is the amplitude, $\\Gamma_q$ is the damping coefficient, $\\omega_q$ is the resonat frequency of the qth vibrational mode, and $w_{IR}$ is the frequency of the incident IR beam. The SFG signal is enhanced when $\\omega_{IR}$ is in resonance with $\\omega_q$. Thus, SFG is a surface-specific vibrational spectroscopy</p>\n<h2 id=\"Molecular-Chemical-Structure-on-Poly-methyl-methacrylate-PMMA-Surface-Studied-by-Sum-Frequency-Generation-SFG-Vibrational-Spectroscopy\"><a href=\"#Molecular-Chemical-Structure-on-Poly-methyl-methacrylate-PMMA-Surface-Studied-by-Sum-Frequency-Generation-SFG-Vibrational-Spectroscopy\" class=\"headerlink\" title=\"Molecular Chemical Structure on Poly(methyl methacrylate) (PMMA) Surface Studied by Sum Frequency Generation (SFG) Vibrational Spectroscopy\"></a><a href=\"https://pubs.acs.org/doi/full/10.1021/jp013161d\" target=\"_blank\" rel=\"noopener\">Molecular Chemical Structure on Poly(methyl methacrylate) (PMMA) Surface Studied by Sum Frequency Generation (SFG) Vibrational Spectroscopy</a></h2><p>In an SFG setup, a pulsed visible laser beam (532nm) and a tunable pulsed IR beam are overlapped spatially and temporally on a surface. The light emitted by the nonlinear process at the sum frequency, $\\omega=\\omega_1+\\omega_2$, is detected by a photodector. The intensity of output is proportional to the square of the samples’s second-order nonlinear susceptibility, which vanishes when a material has inversion symmetry under the electric-dipole approximation. Bothe theoretical calculations and experimental results show that SFG is submonolayer sensitive. Aplot of SFG intensities vs the frequency of the IR laser produces the vibrational spectrum of the surface species. As SFG is a polarized light experiment, the orientation of surface molecules can also be deduced by using different polarization combinations of input and output beams.</p>\n<p><img src=\"https://raw.githubusercontent.com/yueliu96/blog_images/master/sfg_setup.jpg\" alt=\"sfg setup\"><br>$$I(\\omega)=\\frac{8\\pi^3\\omega^2sec^2\\beta}{c^3n_1(\\omega)n_1(\\omega_1)n_1(\\omega_2)}|\\chi_{eff}^{(2)}|^2I_1(\\omega_1)I_2(\\omega_2)$$<br>where $n_i(\\omega)$ is the refractive index of medium i at frequency $\\omega$, $\\beta$ is thereflection angle of the sum frequency field, $I_1(\\omega_1)$ and $I_2(\\omega_2)$ are the intensities of the two input files. $\\chi_{eff}^{(2)}$ is the effective second-order nonlinear susceptibility tensor of the surface, which is related to the second-order nonlinear susceptibility $\\chi^{(2)}$ in the lab coordinate system.</p>\n<p>Different component of $\\chi^{(2)}$ are related to the respective componets of the molecular hyperpolarizability (in the molecular coordinated system, which is a product of IR and Raman transition moments) by the average orientational angle of the functional group. Therefore, we can deduce the orientation information of each functional group after determining the corresponding components of $\\chi^{(2)}$ by fitting SFG spectra and knowing the molecular hyperpolarizability.</p>\n<p>$$<br>\\chi_{eff,ssp}^{(2)}=L_{yy}(\\omega_{SFG})L_{yy}(\\omega_{Vis})L_{zz}(\\omega_{IR})sin\\beta_{IR} \\chi_{yyz}^{(2)}<br>$$</p>\n<p>$$<br>\\chi_{eff,ppp}^{(2)}=-L_{xx}(\\omega_{SFG})L_{xx}(\\omega_{Vis})L_{zz}(\\omega_{IR})cos\\beta_{SFG}cos\\beta_{Vis}sin\\beta_{IR}\\chi^{(2)}<em>{xxz}\\\\<br>-L</em>{xx}(\\omega_{SFG})L_{zz}(\\omega_{Vis})L_{xx}(\\omega_{IR})cos\\beta_{SFG}sin\\beta_{Vis}cos\\beta_{IR}\\chi^{(2)}<em>{xzx}\\\\<br>+L</em>{zz}(\\omega_{SFG})L_{xx}(\\omega_{Vis})L_{xx}(\\omega_{IR})sin\\beta_{SFG}cos\\beta_{Vis}cos\\beta_{IR}\\chi^{(2)}<em>{zxx}\\\\<br>+L</em>{zz}(\\omega_{SFG})L_{zz}(\\omega_{Vis})L_{zz}(\\omega_{IR})sin\\beta_{SFG}sin\\beta_{Vis}sin\\beta_{IR}\\chi^{(2)}_{zzz} \\tag{1}<br>$$</p>\n<p>Here $\\chi_{xyz}$ is one componaent of $\\chi^{(2)}$ with the lab coordinates chosedn such that z is along the interface normal and x is in the incident plane. $\\chi_{eff,ssp}^{(2)}$ is a component of the effective second-order nonlinear susceptibility measured in the experiment, means the element obtained by s-polarized SF beam, s-polarized visible beam and p-polarized IR beam. $\\beta_{x}$ is the angle between the surface normal and the x beam. $L_{ii} (i=x,y\\ or\\ z)$ are the Fresnel coefficients. Using the near total reflection geometry, the first three items in equation (1) are approxiamated to be 0. </p>\n<p>With IR-visible SFG, if the IR frequency is near vibrational resonance, $\\chi_{eff}^{(2)}$ can be written as </p>\n<p>$$\\chi_{eff}^{(2)}=\\chi_{nr}+\\sum_q \\frac{A_q}{\\omega_{IR}-\\omega_q+i\\Gamma_q}$$</p>\n<p>$\\chi_{nr}$ arises from the nonresonant background contribution</p>\n<p>$$<br>I_{SFG}=|A_0+\\sum_j^\\text{num of peaks}\\frac{A_j}{\\omega-\\omega_j+i\\Gamma_j}|^2\\<br>\\chi^{(2)}_{eff}(j)=\\frac{A_j}{\\Gamma_j}$$<br>where $A_j$, $\\omega_j$ and $\\Gamma_j$ are the strength, resonant frequency and damping coefficient of the vibrational mode j, respectively. And they can be obtained by fitting the spectrum</p>\n<h1 id=\"SFG-Method\"><a href=\"#SFG-Method\" class=\"headerlink\" title=\"SFG Method\"></a>SFG Method</h1><h2 id=\"Tell-beta-strand-and-beta-sheet\"><a href=\"#Tell-beta-strand-and-beta-sheet\" class=\"headerlink\" title=\"Tell $\\beta$-strand and $\\beta$-sheet\"></a>Tell $\\beta$-strand and $\\beta$-sheet</h2><h3 id=\"Misfolding-of-Human-Islet-Amyloid-Polypeptide-at-Lipid-Membrane-Populates-through-β-Sheet-Conformers-without-Involving-α-Helical-Intermediates\"><a href=\"#Misfolding-of-Human-Islet-Amyloid-Polypeptide-at-Lipid-Membrane-Populates-through-β-Sheet-Conformers-without-Involving-α-Helical-Intermediates\" class=\"headerlink\" title=\"Misfolding of Human Islet Amyloid Polypeptide at Lipid Membrane Populates through β-Sheet Conformers without Involving α-Helical Intermediates\"></a><a href=\"https://pubs.acs.org/doi/10.1021/jacs.8b08537\" target=\"_blank\" rel=\"noopener\">Misfolding of Human Islet Amyloid Polypeptide at Lipid Membrane Populates through β-Sheet Conformers without Involving α-Helical Intermediates</a></h3><ol>\n<li>advantage of this article</li>\n</ol>\n<ul>\n<li>quickly capture the transient intermediates in situ and in real time</li>\n<li>identify the formation of $\\beta$-hairpin-like monomers, $\\beta$-sheet oligomers and fibrils</li>\n<li>reveal the mechanism of amyloid aggregation at the lipid membrane</li>\n<li>method<ul>\n<li>X-ray crystallography: high-rsolution, but not enough time resolution to probe the real-time aggregation</li>\n</ul>\n</li>\n</ul>\n<ol start=\"2\">\n<li><p>method</p>\n<p>the combination of interface-sensitive chiral amide I, achiral amide II and amide III spectral signals of the protein backbone generated in sum frequency generation vibrational spectroscopy (SFG-VS) can provide a unique and powerful tool to capture the hIAPP intermediates at the interface d uring the agggregation process with sufficient structural temporal resolutions</p>\n<p>develop a highly-sensitive femtosecond SFG-VS system, can acquire the ssp and psp sepctra simultaneously with a recording time of &lt; 5 seconds</p>\n<p>Amide II vibrations arise from the out-of-phase combination of the C-N stretch and the N-H in-plane deformation</p>\n</li>\n</ol>\n<ul>\n<li>$\\alpha$-helix: achiral: 1660, 1280</li>\n<li>$\\beta$-sheet:<ul>\n<li>chiral amide I mode:<ul>\n<li>$\\beta$-hairpin-like monomer (2 antiparallel hydrogen bonded $\\beta$-strands connected by a $beta$-turn or short loop): 1630-1643</li>\n<li>B mode parallel $\\beta$-sheet oligomers and fibruls: 1624 (&lt;1630)</li>\n<li>A mode parrallel $\\beta$-sheet: 1670</li>\n</ul>\n</li>\n<li>chiral N-H stretch mode: 3285 $cm^{-1}$</li>\n<li>achiral amide I<ul>\n<li>1625</li>\n<li>1680</li>\n</ul>\n</li>\n<li>achiral amide II at 1540: $\\beta$-sheet oligomers and fibrils</li>\n</ul>\n</li>\n<li>loop: achiral: 1660, 1230</li>\n<li>coil: achiral: 1660</li>\n<li>turn: achiral: 1660</li>\n</ul>\n<h2 id=\"Orientation-angles\"><a href=\"#Orientation-angles\" class=\"headerlink\" title=\"Orientation angles\"></a>Orientation angles</h2><h3 id=\"Observing-a-Model-Ion-Channel-Gating-Action-in-Model-Cell-Membranes-in-Real-Time-in-Situ-Membrane-Potential-Change-Induced-Alamethicin-Orientation-Change\"><a href=\"#Observing-a-Model-Ion-Channel-Gating-Action-in-Model-Cell-Membranes-in-Real-Time-in-Situ-Membrane-Potential-Change-Induced-Alamethicin-Orientation-Change\" class=\"headerlink\" title=\"Observing a Model Ion Channel Gating Action in Model Cell Membranes in Real Time in Situ: Membrane Potential Change Induced Alamethicin Orientation Change\"></a><a href=\"https://pubs.acs.org/doi/10.1021/ja2110784\" target=\"_blank\" rel=\"noopener\">Observing a Model Ion Channel Gating Action in Model Cell Membranes in Real Time in Situ: Membrane Potential Change Induced Alamethicin Orientation Change</a></h3><p><img src=\"https://pubs.acs.org/appl/literatum/publisher/achs/journals/content/jacsat/2012/jacsat.2012.134.issue-14/ja2110784/production/images/large/ja-2011-110784_0004.jpeg\" alt=\"sfg\"></p>\n<h4 id=\"3-10-helix\"><a href=\"#3-10-helix\" class=\"headerlink\" title=\"$3_{10}$-helix\"></a>$3_{10}$-helix</h4><p>A $3_{10}$ helix is a type of secondary structure found in proteins and polypeptides. Of the numerous protein secondary structures present, it is the 4th most common type observed; following $\\alpha$-helices, $\\beta$-sheeots and reverse turns. $3_{10}$ helices constitute nearly 10%-15% of all helices in protein secondary structures, and are typically observed as extensions of $\\alpha$-helices fond at either their N- or C- termini.</p>\n<h4 id=\"alamethicin\"><a href=\"#alamethicin\" class=\"headerlink\" title=\"alamethicin\"></a>alamethicin</h4><p>Predominantly helical with an N-terminal $\\alpha$-helix and a C-terminal domain containing a $3_{10}$-helical element. The Pro14 residue separating the two domains induces a $20^\\circ-35^\\circ$ bend in alamethicin</p>\n<h4 id=\"SFG-result\"><a href=\"#SFG-result\" class=\"headerlink\" title=\"SFG result\"></a>SFG result</h4><ul>\n<li>1670$cm^{-1}$: a helical structure dominated by $\\alpha$-helix with minor contribution from a $3_{10}$-helix</li>\n<li>1635: $3_{10}$-helical structure</li>\n<li>1720: carbonyl groups of lipid bilayer</li>\n<li>the relationship between the measured ppp and ssp intensity ratios of the peaks at 1670 and 1635 $cm^{-1}$, it is possible to determine the orientation angles $\\theta_1$ and $\\theta_2$</li>\n<li>SFG signal intensity is related to the number of molecules detected and their orientations</li>\n</ul>\n<p><a href=\"https://pubs.acs.org/doi/suppl/10.1021/ja2110784/suppl_file/ja2110784_si_001.pdf\" target=\"_blank\" rel=\"noopener\">Surpport Information</a></p>\n<h3 id=\"Orientation-Determination-of-Protein-Helical-Secondary-Structures-Using-Linear-and-Nonlinear-Vibrational-Spectroscopy\"><a href=\"#Orientation-Determination-of-Protein-Helical-Secondary-Structures-Using-Linear-and-Nonlinear-Vibrational-Spectroscopy\" class=\"headerlink\" title=\"Orientation Determination of Protein Helical Secondary Structures Using Linear and Nonlinear Vibrational Spectroscopy\"></a><a href=\"https://pubs.acs.org/doi/abs/10.1021/jp904153z\" target=\"_blank\" rel=\"noopener\">Orientation Determination of Protein Helical Secondary Structures Using Linear and Nonlinear Vibrational Spectroscopy</a></h3><p>SFG amide I signals can be collected using different polarization combinations of the input laser beams and output signal beam to measure the second-order nonlinear hyperpolarizability elements through the orientation distribution of these helices.<br>$$I_{ssp}\\propto (-L_{yy}(\\omega)L_{zz}(\\omega_1)L_{yy}(\\omega_2)sin\\beta_2 \\chi_{yyz})^2$$<br>where $L_{ii}(\\omega)$ is a Fresnel coefficient and local field correction factor and $\\beta,\\ \\beta_1\\ and\\ \\beta_2$ are angles of the signal, visible and IR beams with respect to the surface normal, respectively.</p>\n<p>when input or output beam angle is close to the critical angle of the total internal reflection:<br>$$I_{ppp}\\propto |L_{zz}(\\omega)L_{zz}(\\omega_1)L_{zz}(\\omega_2)sin\\beta sin\\beta_1sin\\beta_2 \\chi_{zzz}|^2 $$<br><img src=\"https://raw.githubusercontent.com/yueliu96/blog_images/master/SFGorien.jpeg\" alt=\"SFG tilt\"></p>\n<p><strong>Pauling’s $\\alpha$-Helix</strong></p>\n<p>Pauling’s assumption: each peptide bond is planar due to the resonace structure between teh carbonyl C=O bond and teh amide C-N bond. On the basis of this assumption, two helical models were constructed and proposed, a $\\gamma$-helix (not discovered in any protein structures) and an $\\alpha$-helix, with 5.1 residues per turn and 3.6 residues per turn, respectively.</p>\n<p>$\\alpha$-helix: it repeats itselt every 5.4<br>$\\overset{\\circ}{A}$ along the helical axis. Every backbone carbonyl C=O and N-H group on a peptide unit is hydrogen bonded to another N-H and C=O, respectively. Additionally, the backbone C=O groups point in the same direction, while the N-H groups point in the opposite direction.</p>\n<p>Three amide I vibrational modes of $\\alpha$-helices, A, $E_1$ and $E_2$. A and $E_1$ are IR-active, while the all three modes are Raman-active. Because a SFG-active mode needs to be both IR- and Raman-active, only the A and $E_1$ modes are SFG-active.</p>\n<h3 id=\"Interactions-of-Alamethicin-with-Model-Cell-Membranes-Investigated-Using-Sum-Frequency-Generation-Vibrational-Spectroscopy-in-Real-Time-in-Situ\"><a href=\"#Interactions-of-Alamethicin-with-Model-Cell-Membranes-Investigated-Using-Sum-Frequency-Generation-Vibrational-Spectroscopy-in-Real-Time-in-Situ\" class=\"headerlink\" title=\"Interactions of Alamethicin with Model Cell Membranes Investigated Using Sum Frequency Generation Vibrational Spectroscopy in Real Time in Situ\"></a><a href=\"https://pubs.acs.org/doi/10.1021/jp911174d\" target=\"_blank\" rel=\"noopener\">Interactions of Alamethicin with Model Cell Membranes Investigated Using Sum Frequency Generation Vibrational Spectroscopy in Real Time in Situ</a></h3><p><img src=\"https://raw.githubusercontent.com/yueliu96/blog_images/master/alam%20helix%20angle.jpeg\" alt=\"alam tilt\"></p>\n<h1 id=\"To-Be-Read\"><a href=\"#To-Be-Read\" class=\"headerlink\" title=\"To Be Read\"></a>To Be Read</h1><p><a href=\"https://www.sciencedirect.com/science/article/pii/S1047847709000744?via%3Dihub\" target=\"_blank\" rel=\"noopener\">In Situ Molecular Level Studies on Membrane Related Peptides and Proteins in Real Time Using Sum Frequency Generation Vibrational Spectroscopy</a></p>\n<p><a href=\"https://www.sciencedirect.com/science/article/pii/B9780124165960000075?via%3Dihub\" target=\"_blank\" rel=\"noopener\">Structure and Orientation of Interfacial Proteins Determined by Sum Frequency Generation Vibrational Spectroscopy: Method and Application</a></p>\n<h1 id=\"Useful-Link\"><a href=\"#Useful-Link\" class=\"headerlink\" title=\"Useful Link\"></a>Useful Link</h1><ol>\n<li><a href=\"http://www.cryst.bbk.ac.uk/PPS2/course/section8/ss-960531_1.html\" target=\"_blank\" rel=\"noopener\">Protein Secondary Structure</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Goal\"><a href=\"#Goal\" class=\"headerlink\" title=\"Goal\"></a>Goal</h1><ul>\n<li>how concentration, temperature, bilayer, time and pH affects gp41<ul>\n<li>secondary structures ($\\alpha$-helix, $\\beta$-strand and turn/loop?)</li>\n<li>tilt angles (if all $\\alpha$-helix, or one is $3_{10}$ helix)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Oligomeric-Structure-and-Three-Dimensional-Fold-of-the-HIV-gp41-Membrane-Proximal-External-Region-and-Transmembrane-Domain-in-Phospholipid-Bilayers\"><a href=\"#Oligomeric-Structure-and-Three-Dimensional-Fold-of-the-HIV-gp41-Membrane-Proximal-External-Region-and-Transmembrane-Domain-in-Phospholipid-Bilayers\" class=\"headerlink\" title=\"Oligomeric Structure and Three-Dimensional Fold of the HIV gp41 Membrane-Proximal External Region and Transmembrane Domain in Phospholipid Bilayers\"></a><a href=\"https://pubs.acs.org/doi/10.1021/jacs.8b04010\" target=\"_blank\" rel=\"noopener\">Oligomeric Structure and Three-Dimensional Fold of the HIV gp41 Membrane-Proximal External Region and Transmembrane Domain in Phospholipid Bilayers</a></h2><h3 id=\"HIV-1-glycoprotein-gp41\"><a href=\"#HIV-1-glycoprotein-gp41\" class=\"headerlink\" title=\"HIV-1 glycoprotein, gp41\"></a>HIV-1 glycoprotein, gp41</h3><ul>\n<li>mediate fusion of the virus lipid envelope with the target cell membrane during virus entry into cells</li>\n<li><p>MPER and TMD</p>\n<ul>\n<li>membrane-proximal external region (MPER)<ul>\n<li>harbors the epitopes for four broadly neutralizing antibodies</li>\n<li>binds to the membrane surface</li>\n</ul>\n</li>\n<li>transmembrane domain (TMD)<ul>\n<li>anchors the protein to the virus lipid envelope</li>\n<li>spans the bilayer</li>\n</ul>\n</li>\n<li>both are important for HIV entry into cells<ul>\n<li>Trp-to-Ala mutations in MPER and deletion of the MPER $\\rightarrow$ abrogate virus entry and membrane fusion</li>\n<li>replace gp41 TMD with other TMD $\\rightarrow$ impact fusion activity</li>\n<li>truncate C-terminus of TMD in simian HIV $\\rightarrow$ reduce fusogenicity</li>\n</ul>\n</li>\n</ul>\n<p>structure unchanged within 235K to 303K</p>\n</li>\n</ul>\n<h3 id=\"MPER-TMD-Structure\"><a href=\"#MPER-TMD-Structure\" class=\"headerlink\" title=\"MPER-TMD Structure\"></a>MPER-TMD Structure</h3><ul>\n<li>Turn Structure<ul>\n<li>helix-turn-helix</li>\n<li>MPER as bound to the membrane surface while TMD spans the bilayer</li>\n<li>monomeric</li>\n</ul>\n</li>\n<li>Continuous Helix<ul>\n<li>continuous helix, perpendicular to the membrane plane</li>\n<li>tilted orientation for long helix to reduce the hydrophobic mismatch between the peptide adn the bilayer portion of the bicelle</li>\n</ul>\n</li>\n<li>trimeric-MPER + monomeric-TMD</li>\n<li>Helix-turn-helix trimer<ul>\n<li>most $\\alpha$-helix: membrane-independent</li>\n<li>TMD 50% $\\beta$-strand: a combination of the amino acid sequence and the spontaneous negative curvature of PE membranes</li>\n<li>but not uniquely constrian the turn structure bewteen W678 and K683 at the atomic level</li>\n</ul>\n</li>\n</ul>\n<p>These divergent structural conclusions may arise from the truncated nature of th epeptide sequences in most studies, but could also reflect an inherent conformational plasticity of this region of gp41, which may be importanct for the protein to fold into different structures at different stages of virus-cell fusion</p>\n<p>heterogeneity in the protein oligomeric states, differenced in th ebicelle stability and size and the differenct P/L ratios used</p>\n<h3 id=\"Notes\"><a href=\"#Notes\" class=\"headerlink\" title=\"Notes\"></a>Notes</h3><ul>\n<li>$\\beta$-strand conformation is correlated with membrane dehydration</li>\n<li>a monomeric membrane-spanning $\\alpha$-helix is expected to undergo rapid uniaxial diffusion in the membrane, while a highly oligomerized peptide or a peptide that contains an extended segment on the membrane surface is expected to be immobilized</li>\n<li>MPER-TMD trimer is insensitive to the peptide concentration</li>\n</ul>\n<h3 id=\"Question\"><a href=\"#Question\" class=\"headerlink\" title=\"Question\"></a>Question</h3><ul>\n<li>inconsistent and contradictory structural information abounds in the literature about the C-terminal membrane-interaction region of gp41</li>\n<li>difficulty of crystallizing and solubilizaing the MPER-TMD, most structural studies of this functionally important domain were carried out using either only MPER or only TMD</li>\n<li>FP and TMD disorder the cell and virus membranes by mechanisms that still poorly understood</li>\n</ul>\n<h1 id=\"SFG-Theory\"><a href=\"#SFG-Theory\" class=\"headerlink\" title=\"SFG Theory\"></a>SFG Theory</h1><h2 id=\"Biological-Macromolecules-at-Interfaces-Probed-by-Chiral-Vibrational-Sum-Frequency-Generation-Spectroscopy\"><a href=\"#Biological-Macromolecules-at-Interfaces-Probed-by-Chiral-Vibrational-Sum-Frequency-Generation-Spectroscopy\" class=\"headerlink\" title=\"Biological Macromolecules at Interfaces Probed by Chiral Vibrational Sum Frequency Generation Spectroscopy\"></a><a href=\"https://pubs.acs.org/doi/10.1021/cr4006044\" target=\"_blank\" rel=\"noopener\">Biological Macromolecules at Interfaces Probed by Chiral Vibrational Sum Frequency Generation Spectroscopy</a></h2><p>Second-order nonlinear optical technique, which uses two pulsed lase sources, one at infrared (IR) frequency ($\\omega_{IR}$) and the other at visible frequency ($\\omega_{VIS}$). When this two beams are made to spatially and temporally overlap at surfaces, a second order nonlinear optical process producing polarization at the sum frequency ($\\omega_{IR}+\\omega_{VIS}$) can be induced to generate SFG signal.</p>\n<p>The electric field of SFG signals $E_{SFG}^I \\propto \\sum_{JK}\\chi_{IJK}^{(2)} E_{VIS}^J E_{IR}^K$. $\\chi_{IJK}^{(2)}$ is an element of the second-order susceptibility tensor, which contains structural and chemical information about the target medium. It is nonzero only when the medium lacks centrosymmetry and the second-order susceptibility of an interface consists of a nonresonant term, $\\chi_{NR}^{(2)}$, and a sum of vibrationally resonant terms, $\\chi_q^{(2)}$<br>$$\\chi^{(2)}=\\chi_{NR}^{(2)}+\\sum_q \\chi_q^{(2)}=\\chi_{NR}^{(2)}+\\sum_q \\frac{A_q}{\\omega_{IR}-\\omega_q+i\\Gamma_q}$$<br>where $A_q$ is the amplitude, $\\Gamma_q$ is the damping coefficient, $\\omega_q$ is the resonat frequency of the qth vibrational mode, and $w_{IR}$ is the frequency of the incident IR beam. The SFG signal is enhanced when $\\omega_{IR}$ is in resonance with $\\omega_q$. Thus, SFG is a surface-specific vibrational spectroscopy</p>\n<h2 id=\"Molecular-Chemical-Structure-on-Poly-methyl-methacrylate-PMMA-Surface-Studied-by-Sum-Frequency-Generation-SFG-Vibrational-Spectroscopy\"><a href=\"#Molecular-Chemical-Structure-on-Poly-methyl-methacrylate-PMMA-Surface-Studied-by-Sum-Frequency-Generation-SFG-Vibrational-Spectroscopy\" class=\"headerlink\" title=\"Molecular Chemical Structure on Poly(methyl methacrylate) (PMMA) Surface Studied by Sum Frequency Generation (SFG) Vibrational Spectroscopy\"></a><a href=\"https://pubs.acs.org/doi/full/10.1021/jp013161d\" target=\"_blank\" rel=\"noopener\">Molecular Chemical Structure on Poly(methyl methacrylate) (PMMA) Surface Studied by Sum Frequency Generation (SFG) Vibrational Spectroscopy</a></h2><p>In an SFG setup, a pulsed visible laser beam (532nm) and a tunable pulsed IR beam are overlapped spatially and temporally on a surface. The light emitted by the nonlinear process at the sum frequency, $\\omega=\\omega_1+\\omega_2$, is detected by a photodector. The intensity of output is proportional to the square of the samples’s second-order nonlinear susceptibility, which vanishes when a material has inversion symmetry under the electric-dipole approximation. Bothe theoretical calculations and experimental results show that SFG is submonolayer sensitive. Aplot of SFG intensities vs the frequency of the IR laser produces the vibrational spectrum of the surface species. As SFG is a polarized light experiment, the orientation of surface molecules can also be deduced by using different polarization combinations of input and output beams.</p>\n<p><img src=\"https://raw.githubusercontent.com/yueliu96/blog_images/master/sfg_setup.jpg\" alt=\"sfg setup\"><br>$$I(\\omega)=\\frac{8\\pi^3\\omega^2sec^2\\beta}{c^3n_1(\\omega)n_1(\\omega_1)n_1(\\omega_2)}|\\chi_{eff}^{(2)}|^2I_1(\\omega_1)I_2(\\omega_2)$$<br>where $n_i(\\omega)$ is the refractive index of medium i at frequency $\\omega$, $\\beta$ is thereflection angle of the sum frequency field, $I_1(\\omega_1)$ and $I_2(\\omega_2)$ are the intensities of the two input files. $\\chi_{eff}^{(2)}$ is the effective second-order nonlinear susceptibility tensor of the surface, which is related to the second-order nonlinear susceptibility $\\chi^{(2)}$ in the lab coordinate system.</p>\n<p>Different component of $\\chi^{(2)}$ are related to the respective componets of the molecular hyperpolarizability (in the molecular coordinated system, which is a product of IR and Raman transition moments) by the average orientational angle of the functional group. Therefore, we can deduce the orientation information of each functional group after determining the corresponding components of $\\chi^{(2)}$ by fitting SFG spectra and knowing the molecular hyperpolarizability.</p>\n<p>$$<br>\\chi_{eff,ssp}^{(2)}=L_{yy}(\\omega_{SFG})L_{yy}(\\omega_{Vis})L_{zz}(\\omega_{IR})sin\\beta_{IR} \\chi_{yyz}^{(2)}<br>$$</p>\n<p>$$<br>\\chi_{eff,ppp}^{(2)}=-L_{xx}(\\omega_{SFG})L_{xx}(\\omega_{Vis})L_{zz}(\\omega_{IR})cos\\beta_{SFG}cos\\beta_{Vis}sin\\beta_{IR}\\chi^{(2)}<em>{xxz}\\\\<br>-L</em>{xx}(\\omega_{SFG})L_{zz}(\\omega_{Vis})L_{xx}(\\omega_{IR})cos\\beta_{SFG}sin\\beta_{Vis}cos\\beta_{IR}\\chi^{(2)}<em>{xzx}\\\\<br>+L</em>{zz}(\\omega_{SFG})L_{xx}(\\omega_{Vis})L_{xx}(\\omega_{IR})sin\\beta_{SFG}cos\\beta_{Vis}cos\\beta_{IR}\\chi^{(2)}<em>{zxx}\\\\<br>+L</em>{zz}(\\omega_{SFG})L_{zz}(\\omega_{Vis})L_{zz}(\\omega_{IR})sin\\beta_{SFG}sin\\beta_{Vis}sin\\beta_{IR}\\chi^{(2)}_{zzz} \\tag{1}<br>$$</p>\n<p>Here $\\chi_{xyz}$ is one componaent of $\\chi^{(2)}$ with the lab coordinates chosedn such that z is along the interface normal and x is in the incident plane. $\\chi_{eff,ssp}^{(2)}$ is a component of the effective second-order nonlinear susceptibility measured in the experiment, means the element obtained by s-polarized SF beam, s-polarized visible beam and p-polarized IR beam. $\\beta_{x}$ is the angle between the surface normal and the x beam. $L_{ii} (i=x,y\\ or\\ z)$ are the Fresnel coefficients. Using the near total reflection geometry, the first three items in equation (1) are approxiamated to be 0. </p>\n<p>With IR-visible SFG, if the IR frequency is near vibrational resonance, $\\chi_{eff}^{(2)}$ can be written as </p>\n<p>$$\\chi_{eff}^{(2)}=\\chi_{nr}+\\sum_q \\frac{A_q}{\\omega_{IR}-\\omega_q+i\\Gamma_q}$$</p>\n<p>$\\chi_{nr}$ arises from the nonresonant background contribution</p>\n<p>$$<br>I_{SFG}=|A_0+\\sum_j^\\text{num of peaks}\\frac{A_j}{\\omega-\\omega_j+i\\Gamma_j}|^2\\<br>\\chi^{(2)}_{eff}(j)=\\frac{A_j}{\\Gamma_j}$$<br>where $A_j$, $\\omega_j$ and $\\Gamma_j$ are the strength, resonant frequency and damping coefficient of the vibrational mode j, respectively. And they can be obtained by fitting the spectrum</p>\n<h1 id=\"SFG-Method\"><a href=\"#SFG-Method\" class=\"headerlink\" title=\"SFG Method\"></a>SFG Method</h1><h2 id=\"Tell-beta-strand-and-beta-sheet\"><a href=\"#Tell-beta-strand-and-beta-sheet\" class=\"headerlink\" title=\"Tell $\\beta$-strand and $\\beta$-sheet\"></a>Tell $\\beta$-strand and $\\beta$-sheet</h2><h3 id=\"Misfolding-of-Human-Islet-Amyloid-Polypeptide-at-Lipid-Membrane-Populates-through-β-Sheet-Conformers-without-Involving-α-Helical-Intermediates\"><a href=\"#Misfolding-of-Human-Islet-Amyloid-Polypeptide-at-Lipid-Membrane-Populates-through-β-Sheet-Conformers-without-Involving-α-Helical-Intermediates\" class=\"headerlink\" title=\"Misfolding of Human Islet Amyloid Polypeptide at Lipid Membrane Populates through β-Sheet Conformers without Involving α-Helical Intermediates\"></a><a href=\"https://pubs.acs.org/doi/10.1021/jacs.8b08537\" target=\"_blank\" rel=\"noopener\">Misfolding of Human Islet Amyloid Polypeptide at Lipid Membrane Populates through β-Sheet Conformers without Involving α-Helical Intermediates</a></h3><ol>\n<li>advantage of this article</li>\n</ol>\n<ul>\n<li>quickly capture the transient intermediates in situ and in real time</li>\n<li>identify the formation of $\\beta$-hairpin-like monomers, $\\beta$-sheet oligomers and fibrils</li>\n<li>reveal the mechanism of amyloid aggregation at the lipid membrane</li>\n<li>method<ul>\n<li>X-ray crystallography: high-rsolution, but not enough time resolution to probe the real-time aggregation</li>\n</ul>\n</li>\n</ul>\n<ol start=\"2\">\n<li><p>method</p>\n<p>the combination of interface-sensitive chiral amide I, achiral amide II and amide III spectral signals of the protein backbone generated in sum frequency generation vibrational spectroscopy (SFG-VS) can provide a unique and powerful tool to capture the hIAPP intermediates at the interface d uring the agggregation process with sufficient structural temporal resolutions</p>\n<p>develop a highly-sensitive femtosecond SFG-VS system, can acquire the ssp and psp sepctra simultaneously with a recording time of &lt; 5 seconds</p>\n<p>Amide II vibrations arise from the out-of-phase combination of the C-N stretch and the N-H in-plane deformation</p>\n</li>\n</ol>\n<ul>\n<li>$\\alpha$-helix: achiral: 1660, 1280</li>\n<li>$\\beta$-sheet:<ul>\n<li>chiral amide I mode:<ul>\n<li>$\\beta$-hairpin-like monomer (2 antiparallel hydrogen bonded $\\beta$-strands connected by a $beta$-turn or short loop): 1630-1643</li>\n<li>B mode parallel $\\beta$-sheet oligomers and fibruls: 1624 (&lt;1630)</li>\n<li>A mode parrallel $\\beta$-sheet: 1670</li>\n</ul>\n</li>\n<li>chiral N-H stretch mode: 3285 $cm^{-1}$</li>\n<li>achiral amide I<ul>\n<li>1625</li>\n<li>1680</li>\n</ul>\n</li>\n<li>achiral amide II at 1540: $\\beta$-sheet oligomers and fibrils</li>\n</ul>\n</li>\n<li>loop: achiral: 1660, 1230</li>\n<li>coil: achiral: 1660</li>\n<li>turn: achiral: 1660</li>\n</ul>\n<h2 id=\"Orientation-angles\"><a href=\"#Orientation-angles\" class=\"headerlink\" title=\"Orientation angles\"></a>Orientation angles</h2><h3 id=\"Observing-a-Model-Ion-Channel-Gating-Action-in-Model-Cell-Membranes-in-Real-Time-in-Situ-Membrane-Potential-Change-Induced-Alamethicin-Orientation-Change\"><a href=\"#Observing-a-Model-Ion-Channel-Gating-Action-in-Model-Cell-Membranes-in-Real-Time-in-Situ-Membrane-Potential-Change-Induced-Alamethicin-Orientation-Change\" class=\"headerlink\" title=\"Observing a Model Ion Channel Gating Action in Model Cell Membranes in Real Time in Situ: Membrane Potential Change Induced Alamethicin Orientation Change\"></a><a href=\"https://pubs.acs.org/doi/10.1021/ja2110784\" target=\"_blank\" rel=\"noopener\">Observing a Model Ion Channel Gating Action in Model Cell Membranes in Real Time in Situ: Membrane Potential Change Induced Alamethicin Orientation Change</a></h3><p><img src=\"https://pubs.acs.org/appl/literatum/publisher/achs/journals/content/jacsat/2012/jacsat.2012.134.issue-14/ja2110784/production/images/large/ja-2011-110784_0004.jpeg\" alt=\"sfg\"></p>\n<h4 id=\"3-10-helix\"><a href=\"#3-10-helix\" class=\"headerlink\" title=\"$3_{10}$-helix\"></a>$3_{10}$-helix</h4><p>A $3_{10}$ helix is a type of secondary structure found in proteins and polypeptides. Of the numerous protein secondary structures present, it is the 4th most common type observed; following $\\alpha$-helices, $\\beta$-sheeots and reverse turns. $3_{10}$ helices constitute nearly 10%-15% of all helices in protein secondary structures, and are typically observed as extensions of $\\alpha$-helices fond at either their N- or C- termini.</p>\n<h4 id=\"alamethicin\"><a href=\"#alamethicin\" class=\"headerlink\" title=\"alamethicin\"></a>alamethicin</h4><p>Predominantly helical with an N-terminal $\\alpha$-helix and a C-terminal domain containing a $3_{10}$-helical element. The Pro14 residue separating the two domains induces a $20^\\circ-35^\\circ$ bend in alamethicin</p>\n<h4 id=\"SFG-result\"><a href=\"#SFG-result\" class=\"headerlink\" title=\"SFG result\"></a>SFG result</h4><ul>\n<li>1670$cm^{-1}$: a helical structure dominated by $\\alpha$-helix with minor contribution from a $3_{10}$-helix</li>\n<li>1635: $3_{10}$-helical structure</li>\n<li>1720: carbonyl groups of lipid bilayer</li>\n<li>the relationship between the measured ppp and ssp intensity ratios of the peaks at 1670 and 1635 $cm^{-1}$, it is possible to determine the orientation angles $\\theta_1$ and $\\theta_2$</li>\n<li>SFG signal intensity is related to the number of molecules detected and their orientations</li>\n</ul>\n<p><a href=\"https://pubs.acs.org/doi/suppl/10.1021/ja2110784/suppl_file/ja2110784_si_001.pdf\" target=\"_blank\" rel=\"noopener\">Surpport Information</a></p>\n<h3 id=\"Orientation-Determination-of-Protein-Helical-Secondary-Structures-Using-Linear-and-Nonlinear-Vibrational-Spectroscopy\"><a href=\"#Orientation-Determination-of-Protein-Helical-Secondary-Structures-Using-Linear-and-Nonlinear-Vibrational-Spectroscopy\" class=\"headerlink\" title=\"Orientation Determination of Protein Helical Secondary Structures Using Linear and Nonlinear Vibrational Spectroscopy\"></a><a href=\"https://pubs.acs.org/doi/abs/10.1021/jp904153z\" target=\"_blank\" rel=\"noopener\">Orientation Determination of Protein Helical Secondary Structures Using Linear and Nonlinear Vibrational Spectroscopy</a></h3><p>SFG amide I signals can be collected using different polarization combinations of the input laser beams and output signal beam to measure the second-order nonlinear hyperpolarizability elements through the orientation distribution of these helices.<br>$$I_{ssp}\\propto (-L_{yy}(\\omega)L_{zz}(\\omega_1)L_{yy}(\\omega_2)sin\\beta_2 \\chi_{yyz})^2$$<br>where $L_{ii}(\\omega)$ is a Fresnel coefficient and local field correction factor and $\\beta,\\ \\beta_1\\ and\\ \\beta_2$ are angles of the signal, visible and IR beams with respect to the surface normal, respectively.</p>\n<p>when input or output beam angle is close to the critical angle of the total internal reflection:<br>$$I_{ppp}\\propto |L_{zz}(\\omega)L_{zz}(\\omega_1)L_{zz}(\\omega_2)sin\\beta sin\\beta_1sin\\beta_2 \\chi_{zzz}|^2 $$<br><img src=\"https://raw.githubusercontent.com/yueliu96/blog_images/master/SFGorien.jpeg\" alt=\"SFG tilt\"></p>\n<p><strong>Pauling’s $\\alpha$-Helix</strong></p>\n<p>Pauling’s assumption: each peptide bond is planar due to the resonace structure between teh carbonyl C=O bond and teh amide C-N bond. On the basis of this assumption, two helical models were constructed and proposed, a $\\gamma$-helix (not discovered in any protein structures) and an $\\alpha$-helix, with 5.1 residues per turn and 3.6 residues per turn, respectively.</p>\n<p>$\\alpha$-helix: it repeats itselt every 5.4<br>$\\overset{\\circ}{A}$ along the helical axis. Every backbone carbonyl C=O and N-H group on a peptide unit is hydrogen bonded to another N-H and C=O, respectively. Additionally, the backbone C=O groups point in the same direction, while the N-H groups point in the opposite direction.</p>\n<p>Three amide I vibrational modes of $\\alpha$-helices, A, $E_1$ and $E_2$. A and $E_1$ are IR-active, while the all three modes are Raman-active. Because a SFG-active mode needs to be both IR- and Raman-active, only the A and $E_1$ modes are SFG-active.</p>\n<h3 id=\"Interactions-of-Alamethicin-with-Model-Cell-Membranes-Investigated-Using-Sum-Frequency-Generation-Vibrational-Spectroscopy-in-Real-Time-in-Situ\"><a href=\"#Interactions-of-Alamethicin-with-Model-Cell-Membranes-Investigated-Using-Sum-Frequency-Generation-Vibrational-Spectroscopy-in-Real-Time-in-Situ\" class=\"headerlink\" title=\"Interactions of Alamethicin with Model Cell Membranes Investigated Using Sum Frequency Generation Vibrational Spectroscopy in Real Time in Situ\"></a><a href=\"https://pubs.acs.org/doi/10.1021/jp911174d\" target=\"_blank\" rel=\"noopener\">Interactions of Alamethicin with Model Cell Membranes Investigated Using Sum Frequency Generation Vibrational Spectroscopy in Real Time in Situ</a></h3><p><img src=\"https://raw.githubusercontent.com/yueliu96/blog_images/master/alam%20helix%20angle.jpeg\" alt=\"alam tilt\"></p>\n<h1 id=\"To-Be-Read\"><a href=\"#To-Be-Read\" class=\"headerlink\" title=\"To Be Read\"></a>To Be Read</h1><p><a href=\"https://www.sciencedirect.com/science/article/pii/S1047847709000744?via%3Dihub\" target=\"_blank\" rel=\"noopener\">In Situ Molecular Level Studies on Membrane Related Peptides and Proteins in Real Time Using Sum Frequency Generation Vibrational Spectroscopy</a></p>\n<p><a href=\"https://www.sciencedirect.com/science/article/pii/B9780124165960000075?via%3Dihub\" target=\"_blank\" rel=\"noopener\">Structure and Orientation of Interfacial Proteins Determined by Sum Frequency Generation Vibrational Spectroscopy: Method and Application</a></p>\n<h1 id=\"Useful-Link\"><a href=\"#Useful-Link\" class=\"headerlink\" title=\"Useful Link\"></a>Useful Link</h1><ol>\n<li><a href=\"http://www.cryst.bbk.ac.uk/PPS2/course/section8/ss-960531_1.html\" target=\"_blank\" rel=\"noopener\">Protein Secondary Structure</a></li>\n</ol>\n"},{"title":"Gaussian on Hyak","date":"2018-12-17T04:54:49.000Z","_content":"\n*Here introduces how to setup Gaussian input file, submit it to [Hyak](https://wiki.cac.washington.edu/display/hyakusers/WIKI+for+Hyak+users) (super computer server) and analyze the output file by my python scripts. Scripts attached here are not limited by python versions.*\n\n# Gaussian 16 Input\n\n[Gaussian 16 input](http://gaussian.com/input/) consists of a series of lines in an ASCII text file. In general, the input is free-format and case-insensitive; comments start with an exclamation point(!), could be anywhere on a line; spaces, commas, tabs and forward slashes are all considered as valid delimiters (multi spaces are treated as a single demiliter); keyword=option,kw(op),kw=(op1,op2,...) and kw(op1,op2) are all correct. The common suffixes of the input file are gjf and com. The basic structure includes several different sections:\n\n## <font size=3>[Link 0 Commands](http://gaussian.com/link0/)</font>\n- locate and name scratch files \n- not blank line terminated\n- examples\n  - %LindaWorker\n    - add it when using 2 or more nodes on Hyak\n  - %NProcShared=*N*\n    - use up to N processors/cores on shared memory on one node\n    - default: 28 on Hyak-mox, 16 on Hyak-ikt\n  - %UseSSH\n    - start linda workers by ssh instead of rsh(default)\n    - rsh, remote shell, can execute command on another computer as another user\n    - ssh: a more secure way to communicate between computers\n    - some parallel jobs may mess up by using rsh\n  - %Mem=*N*\n    - set the dynamics of memory, can follow by MB,GB,etc. 800mb for g16 by default\n    - some gaussian jobs will select the appropriate algorithm automatically based on the setting of %Mem and [MaxDisk](#maxdisk).\n    - specifing more mem than availble will cause very poor performance; leave several GBs for operating system\n  - %RWF=*file*\n    - locate and name the  read-write file, a super huge file, used to [restart](http://gaussian.com/restart/) a job(not need for opt)\n    - usually followed by *`%NoSave`*, everything before nosave will deleted if job completes normally\n    - a suggested location  on Hyak is [`/gscratch/scrubbed/` ](https://wiki.cac.washington.edu/display/hyakusers/Hyak_disk_quota)\n    - how to locate it if not include %RWF(Hyak version):\n      - all scratch files are at [`/scr/`](https://wiki.cac.washington.edu/display/hyakusers/Managing+your+Files#ManagingyourFiles-HomeDirectories) of the local node ( `ssh nodenumber` to enter that node)\n      - the scratch disk of that node will be cleaned up after walltime runs out \n      - general version and more about restarting opt and freq jobs: [*click  me*](http://gaussian.com/faq2/)\n    - Related key word: [MaxDisk](#maxdisk)\n  - %Chk=*file*\n    - locate and name the checkpoint file\n    - used to restart jobs(especially [opt](#rstopt)), [add more states for td](#addtd) and [visualize molecular orbitals for td](#vistd)\n  - %OldChk=*file*\n    - use with *`%Chk=newfile`*: copy *file* to *newfile* and then write new chk info to *newfile*\n\n## <font size=3>[Route section (# lines)](http://gaussian.com/route/)</font>\n- job type and method\n- blank line terminated\n- examples\n  - print form\n    - *`#N`*: normal print, by default if not specify\n    - *`#P`*: print more info\n    - *`#T`*: terse print \n  - job type\n    - *[SP](http://gaussian.com/sp/)* : single point energy, by default if not specify\n    - *[OPT](http://gaussian.com/opt/)* : geometry optimization\n    - *[FREQ](http://gaussian.com/freq/)* : vibrational frequency and thermal information\n    - *[TD(NStates=n)](http://gaussian.com/td/)* : calculate n excited transitions\n  - other keywords\n    - [POP](http://gaussian.com/population/)\n      - charge and spin distribution\n      - `pop=min` by default except guess=only\n    - [SCF](http://gaussian.com/scf/)\n      - control the functioning of the SCF procedure\n      - `scf=tight` by default\n      - `scf=xqc` is helpful for difficult conversion case\n      - `NoSymm` or `Symmetry=None`: release orbital symmetry constraints\n    - [SCRF](http://gaussian.com/scrf/)\n      - in the presence of solvent, place solute in a cavity within the solvent reaction field.\n       - `scrf=pcm` by default\n       - ex: `scrf=(pcm,solvent=water)`\n    - [CacheSize](http://gaussian.com/cachesize/)\n      - the amount of cache per processor to use with various cache-blocking algorithms (in 8-byte words)\n      - ex: from `/proc/cpuinfo` find the cache available(35840kb) and a good value is its 50% ( $35840\\times1024\\div8\\times50\\%=2293760$): `cachesize=2293760`\n    - [<jump id='maxdisk'>MaxDisk</jump>](http://gaussian.com/maxdisk/)\n      - the amount of disk storage available for [scratch data](https://gaussian.com/running/?tabid=6) \n      - disk space of one node on Hyak is ~100GB. `lsblk -d` or `df -h` can show physical disk info of linux system\n      - the more disk space available, the faster the evaluation, especially for MP2. Some jobs have fixed or minimum disk requirments, click [me](http://gaussian.com/maxdisk/) for more info.\n\n## <font size=3>Title section</font>\n- any descriptions within 5 lines\n- avoid special character: @  #  !  –  _  \\  control characters (especially Ctrl-G)\n- blank line terminated\n\n## <font size=3>[Molecule specification](http://gaussian.com/molspec/)</font>\n- charge, multiplicity, atoms and coordinates\n  - multiplicity\n    - number of possible spin orientations of the total spin\n    - mp=2S+1, S($\\alpha$ electron)=0.5, S($\\beta$ electron)=-0.5\n  - coordinates\n    - x, y and z coordinates in angstrom\n- blank line terminated\n\n## <font size=3>Optinal additional sections</font>\n- additional input\n- blank line terminated\n\n*Example:*\n\n```\n%mem=32GB\n%nprocshared=28\n%chk=guanosine.chk\n# opt um062x/6-31+g(d,p) pop=min scf=(xqc,tight)\n\nComplex guanosine\n\n1 2\nO       -3.094427        1.959361        0.291777\nC       -4.011153        1.021154       -0.267210\nC       -3.292860       -0.293751       -0.453718\nO       -2.175288       -0.104229       -1.347075\n...           ...             ...             ...\nH       -1.180628        1.929546       -0.412585\nH       -3.574938        2.742899        0.582770\nH        1.100354        3.004366        0.220564\n! a blank line must be here\n```\n\n# Submit to Hyak\n\nRun ` ~/Hyak-Gaussian/gaussian-sub.py input_file`, will generate a sbatch file(suffix is sh):\n\n```bash\n#!/bin/bash\n#SBATCH --job-name=???\n#SBATCH --nodes=1\n\n##needed if ckpt partition or  any partitions with 2 or more nodes\n#SBATCH --ntasks-per-node=??\n\n#SBATCH --time=???:00:00\n\n##larger than %mem in input file\n#SBATCH --mem=???\n\n#SBATCH --workdir=??????\n#SBATCH --partition=???\n#SBATCH --account=???\n\n##turn on email notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=???your email???\n\n# load Gaussian environment\nmodule load contrib/g16.b01\n\n# debugging information\necho \"**** Job Debugging Information ****\"\necho \"This job will run on $SLURM_JOB_NODELIST\"\necho \"\"\necho \"ENVIRONMENT VARIABLES\"\nset\necho \"**********************************************\" \n\n# run Gaussian\ng16 ???input file???\n\nexit 0\n```\n\nRun `sbatch *.sh` to submit it to hyak.\n\n# Output & Analysis\n\n## <font size=4>I. [OPT](http://gaussian.com/opt/)</font>\n\nIf key word `Tight` or `SCF` is in route card, Berny optimization will be used. This kind of output is dilimited by *GradGradGrad...*. The appearance of the following words marks completion of opt, and the final structure is displayed after that. We always want to extract the optimized standard structure for the next step calculation.\n\n  ```\n             Item               Value     Threshold  Converged?\n Maximum Force            0.000020     0.000450     YES\n RMS     Force            0.000004     0.000300     YES\n Maximum Displacement     0.001510     0.001800     YES\n RMS     Displacement     0.000199     0.001200     YES\n Optimization completed.\n    -- Stationary point found\n  ```\n\n<jump id='rstopt'></jump>If `Stationary point found` is absent in log file, that means the opt job is ended earlier, maybe because of time limit. In this case, we need to write another restarted input file and submit it again to start from where it left, the route card of which should be `# opt=restart` plus the other keywords in the original input. For example: if the original route card is:`# opt ub3lyp/6-31+g(d,p) pop=min scf=(xqc,tight)` and the chk file is named as *test.chk*. The new input file is like: \n\n```\n%UseSSH\n%mem=32GB\n%nprocshared=28\n%chk=test.chk\n# Opt=Restart ub3lyp/6-31+g(d,p) pop=min scf=(xqc,tight)\n! a blank line must be here\n```\n\n### <font size=3>1. [optlog2gjfcom.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/optlog2gjfcom.py)</font>\n\n- *Usage*\n  - `python optlog2gjfcom.py opt_log`\n- *Descriptions*\n  - Uses `Stationary point found` as a key to tell if opt finishes\n  - If finished, locates `Standard orientation` after it, reads charge and multiplicity from the very end and then writes them to a new file in the form of gaussian input, named *test_opt.gjf* if original one is *test$.$com*.\n  - If not  finished, checks if input file in the current directory, gets chk file name from input and then writes the restarted input file just as showed above named with *test_rst.gjf* if original one is *test.gjf*. If original input and chk files not found, it will just stop without doing anything.\n- *Notes* \n  - The default route card for optimized file and link info for both optimized and restarted one are easily to change:\n  \n    ```\n    LINK='%UseSSH\\n%mem=32GB\\n%nprocshared=28\\n'\n    ROUTE='# td(NStates=25) um062x/6-31+g(d,p) pop=min scf=(xqc,tight)'\n    ```\n\n  - A quick way to walk through all log files in one directory:\n     ```bash\n    for x in *log; do python optlog2gjfcom.py $x; done\n     ```\n\n### <font size=3>2.<jump id='hfenergies'></jump>[HFenergies.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/HFenergies.py)</font>\n\nAnother important information in the output is optimized energy, which is easy to locate by key word *SCF Done*.\n\n- *Usage*\n  - `python HFenergies.py`\n- *Descriptions*\n  - Goes through all **.log* files in the current directory to extract energy\n  - If `Stationary point found` is in the presence of log file, reads the energy after the last `SCF Done`; if not, returns energy=*NA*\n  - Energies are sorted ascendingly and written to *HFenergies.csv* file with corresponding logfile name(without suffix)\n\n## <font size=4>II. [FREQ](http://gaussian.com/freq/)</font>\n\n*3N-6* frequecies can be found in the output file for nonlinear molecules (*3N-5* for linear molecules, *N* is the number of atoms), following by thermochemistry analysis at 298.15K, 1 atm.\nSince the temperature in the Mass Spec is around 310K, we need to extrat all normal modes(frequencies), zero-point vibrational energy(ZPVE) and entropy(S) from the log file and calculate entropy and enthalpy(H) at 310K 1 atm. Also, we correct frequencies by a factor of 0.975.\n\n*Note that the input of freq job should be the optimized structure optimized with the same method and basis set.*\n\n### <font size=3>1.<jump id='freqt'></jump>[freq_thermal.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/freq_thermal.py)</font>\n\n- *Usage*\n  - `python freq_thermal.py freq_log`\n- *Descriptions*\n  - Extracts frequencies from log file. If the first frequency is negative or freq not finished, raises error and stops.\n  - Uses partition functions to calculate enthalpy, entropy and heat capacity and writes the result to file named with *test_freq.csv* if *test.log* is given.\n  - *<font color=gray>explanations of calculation(to be writted)</font>*\n\n### <font size=3>2.[CpExtractor.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/CpExtractor.py)</font>\n\nSometimes, we only want to know the heat capacity at constant pressure. This scripts can extract Cp from all *freq.csv files.\n\n- *Usage*\n  - `python CpExtractor.py`\n- *Descriptions*\n  - Goes through all **_freq.csv* files in the working directory and writes the Cp and its file name into a new file *Cp.csv*\n  - If Cp not found, *NA* will be there instead of a number\n  \n### <font size=3>3.[GibbsEnergy.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/GibbsEnergy.py)</font>\n\nAfter finish all opt and freq jobs, we can use energy file got from *HFenergies$.$py* and *ZPVE*, *H* and *S* from *freq_thermal$.$py* to calculate their free energies.\n\n- *Usage*\n  - `python GibbsEnergy.py energyfile`\n- *Descriptions*\n  - Needs energy($E_{elec}$) file got from [HFenergies.py](#hfenergies) and corresponding *_freq.csv files got from [freq_thermal.py](#freqt) in the same directory. The delimiter of all these files must be comma(by default, don't change it)\n  - Reads structure's name(x) and energy from energy file. The frist row is considered as title, will be skipped. The structure with lowest energy is seen as reference.\n  - Uses x find its freq file: x_freq.csv and reads its 9th row(thermal information); only reads 8th row(title info) for one **_freq.csv*.\n  - $G=E_{elec}+ZPVE_{corr}+H(T)-T\\cdot S(T)$ and $\\Delta G=G-G_{ref}$ are used, the result in $kJ/mol$\n\n## <font size=4>III. [TDDFT](http://gaussian.com/td/)</font>\n\nThe main output of tddft contains the excitation energies, oscillation strength(f, the intensity of that transition) and S\\*\\*2, listed below. A resonable transition should satisfy spin forbidden. For a doublet(multiplicity:2S+1=2) S=0.5, so S\\*\\*2=S(S+1)=0.75. What should be consider is that if not following that rule, the electron flips during the transiton, the total spin momentum S changes from 0.5 to 1.5, and S\\*\\*2=3.75. When running tddft job, the transition is a combination of these two situations, usually the more differ from what S\\*\\*2 should be, the less f is. In our lab, we only keep transitions whose S\\*\\*2<2.6, and use lorentzian equation to calcualte its absorption spectra.\n\n```txt\n Excited State   1:  2.065-A      2.0123 eV  616.13 nm  f=0.0002  <S**2>=0.816\n     62B -> 70B       -0.10013\n     63B -> 70B       -0.16217\n     63B -> 72B       -0.10120\n     67B -> 70B        0.87674\n     68B -> 70B        0.37169\n```\n\n<jump id='addtd'></jump>In experiment, we measure the action spectra from 210nm to 700nm, so we hope the theoritical one can cover that region. If the last transition energy cannot reach 210nm, we should add more states to it. For example, if the original route card is `# TD(Nstates=30) um062x/6-31+g(d,p) pop=none scf=(xqc,tight)` and its chk file is *test.chk* the new input file should be:\n\n```\n%mem=32GB\n%nprocshared=28\n%oldchk=test.chk\n%chk=test_add.chk\n# TD(add=10) Geom=AllCheck um062x/6-31+g(d,p) pop=none scf=(xqc,tight)\n! a blank line must be here\n```\n\n### <font size=3>1.[tddft_lorentzian.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/tddft_lorentzian.py)</font>\n\n- *Usage*\n  - `python tddft_lorentzian.py td_log`\n- *Descriptions*\n  - Reads all excitated frequencies, oscilation strength and S**2 from log file and checks if the last one is below 210nm.\n  - If not, writes the new input file as shown above named with *test_add.gjf* if original input is *test.gjf*. The original input file and chk file must be in the same directory.\n  - Otherwise, uses S**2=2.6 as a cutoff to choose frequencies and applies lorentzian equation to calculate absorption spectra. The results are written to *test_uvvis.csv* if log named with *test.log*.\n\n### <font size=3>2.[tddft_plot.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/tddft_plot.py)\n\n- *Usage*\n  - `python tddft_plot.py uvvis.csv`\n  - uvvis.csv is the file got from tddft_lorentzian.py\n  - need import matplotlib, pandas, numpy, `module load anacond3_5.3` if not able to impor tthese modules\n- *Descriptions*\n\n  ![tddft plot](https://raw.githubusercontent.com/yueliu96/blog_images/master/tddftplot_eg.jpg)\n\n### <jump id='vistd'></jump><font size=3>3.[cubegen.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/cubegen.py)</font>\n\nWe can also visualize the molecular orbital if we have tddft chk file. We should first use [`formchk`](http://gaussian.com/formchk/) command to generate fchk file, and then use [`cubegen`](http://gaussian.com/cubegen/) to get the cube file, which can be visualized by Gaussian-View. To use cubegen, we also need to decide the molecular orbital number. For $\\alpha$ orbital, like 68A, just set mo=68. But for $\\beta$ orbital,like 72B, we should find the total number of $\\alpha$ orbitals first: if one molecule has 70 $\\alpha$ electrons(NAE) and 356 virtual $\\alpha$ orbitals(NVA), set mo=498(70+356+72). \n\nIf we run cubegen on the login node, it will take around 1 minutes. Usually we are interested in several orbitals in one or more excited states. In this way, this script comes out. \n\n- *Usage*\n  - `python cubegen.py td_log num_excited_states`\n- *Descriptions*\n  - Finds the name of chk/fchk file from log file. After fchk found, skip to next step; if not, start to locate chk file and generate fchk from chk. If both of them not found, stop processing. \n  - Finds NAE, NVA and unique molecule orbitals in the specified excited state. And writes corresponding cubegen to a txt file.\n  - Loads parallel environment and cats tasklists( the txt file) to the sbatch file.\n  - Submits it to ckpt partition. It should be finished in several seconds\n- *Example*\n  \n   The transition of the first excited state is listed above. If its log is test.log, NAE+NVA=426. Run `python cubegen.py test.log 1`, we will get 2 files: t1_test.txt and t1_test.sh, and it will submit t1_test.sh to ckpt queue.\n  \n    *t1_test.txt*:\n\n    ```\n    cubegen 0 mo=488 test.fchk test_62B.cube 0 h\n    cubegen 0 mo=489 test.fchk test_63B.cube 0 h\n    cubegen 0 mo=493 test.fchk test_67B.cube 0 h\n    cubegen 0 mo=494 test.fchk test_68B.cube 0 h\n    cubegen 0 mo=496 test.fchk test_70B.cube 0 h\n    cubegen 0 mo=498 test.fchk test_72B.cube 0 h\n    ```\n\n    *t1_test.sh*:\n\n     ```bash\n    #!/bin/bash\n    #SBATCH --job-name=fchk_cube\n    #SBATCH --nodes=1\n    #SBATCH --ntasks-per-node=28\n    #SBATCH --time=10:00\n    #SBATCH --mem=100G\n    #SBATCH --workdir=/gscratch/stf/yueliu96/test\n    #SBATCH --partition=ckpt\n    #SBATCH --account=stf-ckpt\n\n    echo 'This job will run on' $SLURM_JOB_NODELIST\n    #set up time\n    start=$(date +%s)\n\n    #load Gaussian environment\n    module load contrib/g16.b01\n\n    #use checkpoint file to generte formatted one\n    formchk test.chk\n\n    #load parallel environment\n    module load parallel-20170722\n    cat t1_test_opt.txt | parallel -j 28\n\n    end=$(date +%s)\n    echo 'Elapsed Time: '$(($end-$start))'s'\n     ```\n    After finish, we can get 6 cube files. Transfer them from hyak to your local work directory. We need to use *GaussView* to see how the orbital looks like:\n    - open test.fchk with *GaussView*\n    - click `Result`$\\rightarrow$`Surfaces/Contours`$\\rightarrow$`Cube Actions`$\\rightarrow$`Load Cube`$\\rightarrow$choose one of  your cube files$\\rightarrow$highlight that cube$\\rightarrow$`Surfacec Actions`$\\rightarrow$`New Surface`\n","source":"_posts/Gaussian-on-Hyak.md","raw":"---\ntitle: Gaussian on Hyak\ndate: 2018-12-16 20:54:49\ntags: \n- Hyak\n- ComputChem\n- software\ncategories:\n- Turecek Lab Tutorial\n---\n\n*Here introduces how to setup Gaussian input file, submit it to [Hyak](https://wiki.cac.washington.edu/display/hyakusers/WIKI+for+Hyak+users) (super computer server) and analyze the output file by my python scripts. Scripts attached here are not limited by python versions.*\n\n# Gaussian 16 Input\n\n[Gaussian 16 input](http://gaussian.com/input/) consists of a series of lines in an ASCII text file. In general, the input is free-format and case-insensitive; comments start with an exclamation point(!), could be anywhere on a line; spaces, commas, tabs and forward slashes are all considered as valid delimiters (multi spaces are treated as a single demiliter); keyword=option,kw(op),kw=(op1,op2,...) and kw(op1,op2) are all correct. The common suffixes of the input file are gjf and com. The basic structure includes several different sections:\n\n## <font size=3>[Link 0 Commands](http://gaussian.com/link0/)</font>\n- locate and name scratch files \n- not blank line terminated\n- examples\n  - %LindaWorker\n    - add it when using 2 or more nodes on Hyak\n  - %NProcShared=*N*\n    - use up to N processors/cores on shared memory on one node\n    - default: 28 on Hyak-mox, 16 on Hyak-ikt\n  - %UseSSH\n    - start linda workers by ssh instead of rsh(default)\n    - rsh, remote shell, can execute command on another computer as another user\n    - ssh: a more secure way to communicate between computers\n    - some parallel jobs may mess up by using rsh\n  - %Mem=*N*\n    - set the dynamics of memory, can follow by MB,GB,etc. 800mb for g16 by default\n    - some gaussian jobs will select the appropriate algorithm automatically based on the setting of %Mem and [MaxDisk](#maxdisk).\n    - specifing more mem than availble will cause very poor performance; leave several GBs for operating system\n  - %RWF=*file*\n    - locate and name the  read-write file, a super huge file, used to [restart](http://gaussian.com/restart/) a job(not need for opt)\n    - usually followed by *`%NoSave`*, everything before nosave will deleted if job completes normally\n    - a suggested location  on Hyak is [`/gscratch/scrubbed/` ](https://wiki.cac.washington.edu/display/hyakusers/Hyak_disk_quota)\n    - how to locate it if not include %RWF(Hyak version):\n      - all scratch files are at [`/scr/`](https://wiki.cac.washington.edu/display/hyakusers/Managing+your+Files#ManagingyourFiles-HomeDirectories) of the local node ( `ssh nodenumber` to enter that node)\n      - the scratch disk of that node will be cleaned up after walltime runs out \n      - general version and more about restarting opt and freq jobs: [*click  me*](http://gaussian.com/faq2/)\n    - Related key word: [MaxDisk](#maxdisk)\n  - %Chk=*file*\n    - locate and name the checkpoint file\n    - used to restart jobs(especially [opt](#rstopt)), [add more states for td](#addtd) and [visualize molecular orbitals for td](#vistd)\n  - %OldChk=*file*\n    - use with *`%Chk=newfile`*: copy *file* to *newfile* and then write new chk info to *newfile*\n\n## <font size=3>[Route section (# lines)](http://gaussian.com/route/)</font>\n- job type and method\n- blank line terminated\n- examples\n  - print form\n    - *`#N`*: normal print, by default if not specify\n    - *`#P`*: print more info\n    - *`#T`*: terse print \n  - job type\n    - *[SP](http://gaussian.com/sp/)* : single point energy, by default if not specify\n    - *[OPT](http://gaussian.com/opt/)* : geometry optimization\n    - *[FREQ](http://gaussian.com/freq/)* : vibrational frequency and thermal information\n    - *[TD(NStates=n)](http://gaussian.com/td/)* : calculate n excited transitions\n  - other keywords\n    - [POP](http://gaussian.com/population/)\n      - charge and spin distribution\n      - `pop=min` by default except guess=only\n    - [SCF](http://gaussian.com/scf/)\n      - control the functioning of the SCF procedure\n      - `scf=tight` by default\n      - `scf=xqc` is helpful for difficult conversion case\n      - `NoSymm` or `Symmetry=None`: release orbital symmetry constraints\n    - [SCRF](http://gaussian.com/scrf/)\n      - in the presence of solvent, place solute in a cavity within the solvent reaction field.\n       - `scrf=pcm` by default\n       - ex: `scrf=(pcm,solvent=water)`\n    - [CacheSize](http://gaussian.com/cachesize/)\n      - the amount of cache per processor to use with various cache-blocking algorithms (in 8-byte words)\n      - ex: from `/proc/cpuinfo` find the cache available(35840kb) and a good value is its 50% ( $35840\\times1024\\div8\\times50\\%=2293760$): `cachesize=2293760`\n    - [<jump id='maxdisk'>MaxDisk</jump>](http://gaussian.com/maxdisk/)\n      - the amount of disk storage available for [scratch data](https://gaussian.com/running/?tabid=6) \n      - disk space of one node on Hyak is ~100GB. `lsblk -d` or `df -h` can show physical disk info of linux system\n      - the more disk space available, the faster the evaluation, especially for MP2. Some jobs have fixed or minimum disk requirments, click [me](http://gaussian.com/maxdisk/) for more info.\n\n## <font size=3>Title section</font>\n- any descriptions within 5 lines\n- avoid special character: @  #  !  –  _  \\  control characters (especially Ctrl-G)\n- blank line terminated\n\n## <font size=3>[Molecule specification](http://gaussian.com/molspec/)</font>\n- charge, multiplicity, atoms and coordinates\n  - multiplicity\n    - number of possible spin orientations of the total spin\n    - mp=2S+1, S($\\alpha$ electron)=0.5, S($\\beta$ electron)=-0.5\n  - coordinates\n    - x, y and z coordinates in angstrom\n- blank line terminated\n\n## <font size=3>Optinal additional sections</font>\n- additional input\n- blank line terminated\n\n*Example:*\n\n```\n%mem=32GB\n%nprocshared=28\n%chk=guanosine.chk\n# opt um062x/6-31+g(d,p) pop=min scf=(xqc,tight)\n\nComplex guanosine\n\n1 2\nO       -3.094427        1.959361        0.291777\nC       -4.011153        1.021154       -0.267210\nC       -3.292860       -0.293751       -0.453718\nO       -2.175288       -0.104229       -1.347075\n...           ...             ...             ...\nH       -1.180628        1.929546       -0.412585\nH       -3.574938        2.742899        0.582770\nH        1.100354        3.004366        0.220564\n! a blank line must be here\n```\n\n# Submit to Hyak\n\nRun ` ~/Hyak-Gaussian/gaussian-sub.py input_file`, will generate a sbatch file(suffix is sh):\n\n```bash\n#!/bin/bash\n#SBATCH --job-name=???\n#SBATCH --nodes=1\n\n##needed if ckpt partition or  any partitions with 2 or more nodes\n#SBATCH --ntasks-per-node=??\n\n#SBATCH --time=???:00:00\n\n##larger than %mem in input file\n#SBATCH --mem=???\n\n#SBATCH --workdir=??????\n#SBATCH --partition=???\n#SBATCH --account=???\n\n##turn on email notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=???your email???\n\n# load Gaussian environment\nmodule load contrib/g16.b01\n\n# debugging information\necho \"**** Job Debugging Information ****\"\necho \"This job will run on $SLURM_JOB_NODELIST\"\necho \"\"\necho \"ENVIRONMENT VARIABLES\"\nset\necho \"**********************************************\" \n\n# run Gaussian\ng16 ???input file???\n\nexit 0\n```\n\nRun `sbatch *.sh` to submit it to hyak.\n\n# Output & Analysis\n\n## <font size=4>I. [OPT](http://gaussian.com/opt/)</font>\n\nIf key word `Tight` or `SCF` is in route card, Berny optimization will be used. This kind of output is dilimited by *GradGradGrad...*. The appearance of the following words marks completion of opt, and the final structure is displayed after that. We always want to extract the optimized standard structure for the next step calculation.\n\n  ```\n             Item               Value     Threshold  Converged?\n Maximum Force            0.000020     0.000450     YES\n RMS     Force            0.000004     0.000300     YES\n Maximum Displacement     0.001510     0.001800     YES\n RMS     Displacement     0.000199     0.001200     YES\n Optimization completed.\n    -- Stationary point found\n  ```\n\n<jump id='rstopt'></jump>If `Stationary point found` is absent in log file, that means the opt job is ended earlier, maybe because of time limit. In this case, we need to write another restarted input file and submit it again to start from where it left, the route card of which should be `# opt=restart` plus the other keywords in the original input. For example: if the original route card is:`# opt ub3lyp/6-31+g(d,p) pop=min scf=(xqc,tight)` and the chk file is named as *test.chk*. The new input file is like: \n\n```\n%UseSSH\n%mem=32GB\n%nprocshared=28\n%chk=test.chk\n# Opt=Restart ub3lyp/6-31+g(d,p) pop=min scf=(xqc,tight)\n! a blank line must be here\n```\n\n### <font size=3>1. [optlog2gjfcom.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/optlog2gjfcom.py)</font>\n\n- *Usage*\n  - `python optlog2gjfcom.py opt_log`\n- *Descriptions*\n  - Uses `Stationary point found` as a key to tell if opt finishes\n  - If finished, locates `Standard orientation` after it, reads charge and multiplicity from the very end and then writes them to a new file in the form of gaussian input, named *test_opt.gjf* if original one is *test$.$com*.\n  - If not  finished, checks if input file in the current directory, gets chk file name from input and then writes the restarted input file just as showed above named with *test_rst.gjf* if original one is *test.gjf*. If original input and chk files not found, it will just stop without doing anything.\n- *Notes* \n  - The default route card for optimized file and link info for both optimized and restarted one are easily to change:\n  \n    ```\n    LINK='%UseSSH\\n%mem=32GB\\n%nprocshared=28\\n'\n    ROUTE='# td(NStates=25) um062x/6-31+g(d,p) pop=min scf=(xqc,tight)'\n    ```\n\n  - A quick way to walk through all log files in one directory:\n     ```bash\n    for x in *log; do python optlog2gjfcom.py $x; done\n     ```\n\n### <font size=3>2.<jump id='hfenergies'></jump>[HFenergies.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/HFenergies.py)</font>\n\nAnother important information in the output is optimized energy, which is easy to locate by key word *SCF Done*.\n\n- *Usage*\n  - `python HFenergies.py`\n- *Descriptions*\n  - Goes through all **.log* files in the current directory to extract energy\n  - If `Stationary point found` is in the presence of log file, reads the energy after the last `SCF Done`; if not, returns energy=*NA*\n  - Energies are sorted ascendingly and written to *HFenergies.csv* file with corresponding logfile name(without suffix)\n\n## <font size=4>II. [FREQ](http://gaussian.com/freq/)</font>\n\n*3N-6* frequecies can be found in the output file for nonlinear molecules (*3N-5* for linear molecules, *N* is the number of atoms), following by thermochemistry analysis at 298.15K, 1 atm.\nSince the temperature in the Mass Spec is around 310K, we need to extrat all normal modes(frequencies), zero-point vibrational energy(ZPVE) and entropy(S) from the log file and calculate entropy and enthalpy(H) at 310K 1 atm. Also, we correct frequencies by a factor of 0.975.\n\n*Note that the input of freq job should be the optimized structure optimized with the same method and basis set.*\n\n### <font size=3>1.<jump id='freqt'></jump>[freq_thermal.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/freq_thermal.py)</font>\n\n- *Usage*\n  - `python freq_thermal.py freq_log`\n- *Descriptions*\n  - Extracts frequencies from log file. If the first frequency is negative or freq not finished, raises error and stops.\n  - Uses partition functions to calculate enthalpy, entropy and heat capacity and writes the result to file named with *test_freq.csv* if *test.log* is given.\n  - *<font color=gray>explanations of calculation(to be writted)</font>*\n\n### <font size=3>2.[CpExtractor.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/CpExtractor.py)</font>\n\nSometimes, we only want to know the heat capacity at constant pressure. This scripts can extract Cp from all *freq.csv files.\n\n- *Usage*\n  - `python CpExtractor.py`\n- *Descriptions*\n  - Goes through all **_freq.csv* files in the working directory and writes the Cp and its file name into a new file *Cp.csv*\n  - If Cp not found, *NA* will be there instead of a number\n  \n### <font size=3>3.[GibbsEnergy.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/GibbsEnergy.py)</font>\n\nAfter finish all opt and freq jobs, we can use energy file got from *HFenergies$.$py* and *ZPVE*, *H* and *S* from *freq_thermal$.$py* to calculate their free energies.\n\n- *Usage*\n  - `python GibbsEnergy.py energyfile`\n- *Descriptions*\n  - Needs energy($E_{elec}$) file got from [HFenergies.py](#hfenergies) and corresponding *_freq.csv files got from [freq_thermal.py](#freqt) in the same directory. The delimiter of all these files must be comma(by default, don't change it)\n  - Reads structure's name(x) and energy from energy file. The frist row is considered as title, will be skipped. The structure with lowest energy is seen as reference.\n  - Uses x find its freq file: x_freq.csv and reads its 9th row(thermal information); only reads 8th row(title info) for one **_freq.csv*.\n  - $G=E_{elec}+ZPVE_{corr}+H(T)-T\\cdot S(T)$ and $\\Delta G=G-G_{ref}$ are used, the result in $kJ/mol$\n\n## <font size=4>III. [TDDFT](http://gaussian.com/td/)</font>\n\nThe main output of tddft contains the excitation energies, oscillation strength(f, the intensity of that transition) and S\\*\\*2, listed below. A resonable transition should satisfy spin forbidden. For a doublet(multiplicity:2S+1=2) S=0.5, so S\\*\\*2=S(S+1)=0.75. What should be consider is that if not following that rule, the electron flips during the transiton, the total spin momentum S changes from 0.5 to 1.5, and S\\*\\*2=3.75. When running tddft job, the transition is a combination of these two situations, usually the more differ from what S\\*\\*2 should be, the less f is. In our lab, we only keep transitions whose S\\*\\*2<2.6, and use lorentzian equation to calcualte its absorption spectra.\n\n```txt\n Excited State   1:  2.065-A      2.0123 eV  616.13 nm  f=0.0002  <S**2>=0.816\n     62B -> 70B       -0.10013\n     63B -> 70B       -0.16217\n     63B -> 72B       -0.10120\n     67B -> 70B        0.87674\n     68B -> 70B        0.37169\n```\n\n<jump id='addtd'></jump>In experiment, we measure the action spectra from 210nm to 700nm, so we hope the theoritical one can cover that region. If the last transition energy cannot reach 210nm, we should add more states to it. For example, if the original route card is `# TD(Nstates=30) um062x/6-31+g(d,p) pop=none scf=(xqc,tight)` and its chk file is *test.chk* the new input file should be:\n\n```\n%mem=32GB\n%nprocshared=28\n%oldchk=test.chk\n%chk=test_add.chk\n# TD(add=10) Geom=AllCheck um062x/6-31+g(d,p) pop=none scf=(xqc,tight)\n! a blank line must be here\n```\n\n### <font size=3>1.[tddft_lorentzian.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/tddft_lorentzian.py)</font>\n\n- *Usage*\n  - `python tddft_lorentzian.py td_log`\n- *Descriptions*\n  - Reads all excitated frequencies, oscilation strength and S**2 from log file and checks if the last one is below 210nm.\n  - If not, writes the new input file as shown above named with *test_add.gjf* if original input is *test.gjf*. The original input file and chk file must be in the same directory.\n  - Otherwise, uses S**2=2.6 as a cutoff to choose frequencies and applies lorentzian equation to calculate absorption spectra. The results are written to *test_uvvis.csv* if log named with *test.log*.\n\n### <font size=3>2.[tddft_plot.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/tddft_plot.py)\n\n- *Usage*\n  - `python tddft_plot.py uvvis.csv`\n  - uvvis.csv is the file got from tddft_lorentzian.py\n  - need import matplotlib, pandas, numpy, `module load anacond3_5.3` if not able to impor tthese modules\n- *Descriptions*\n\n  ![tddft plot](https://raw.githubusercontent.com/yueliu96/blog_images/master/tddftplot_eg.jpg)\n\n### <jump id='vistd'></jump><font size=3>3.[cubegen.py](https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/cubegen.py)</font>\n\nWe can also visualize the molecular orbital if we have tddft chk file. We should first use [`formchk`](http://gaussian.com/formchk/) command to generate fchk file, and then use [`cubegen`](http://gaussian.com/cubegen/) to get the cube file, which can be visualized by Gaussian-View. To use cubegen, we also need to decide the molecular orbital number. For $\\alpha$ orbital, like 68A, just set mo=68. But for $\\beta$ orbital,like 72B, we should find the total number of $\\alpha$ orbitals first: if one molecule has 70 $\\alpha$ electrons(NAE) and 356 virtual $\\alpha$ orbitals(NVA), set mo=498(70+356+72). \n\nIf we run cubegen on the login node, it will take around 1 minutes. Usually we are interested in several orbitals in one or more excited states. In this way, this script comes out. \n\n- *Usage*\n  - `python cubegen.py td_log num_excited_states`\n- *Descriptions*\n  - Finds the name of chk/fchk file from log file. After fchk found, skip to next step; if not, start to locate chk file and generate fchk from chk. If both of them not found, stop processing. \n  - Finds NAE, NVA and unique molecule orbitals in the specified excited state. And writes corresponding cubegen to a txt file.\n  - Loads parallel environment and cats tasklists( the txt file) to the sbatch file.\n  - Submits it to ckpt partition. It should be finished in several seconds\n- *Example*\n  \n   The transition of the first excited state is listed above. If its log is test.log, NAE+NVA=426. Run `python cubegen.py test.log 1`, we will get 2 files: t1_test.txt and t1_test.sh, and it will submit t1_test.sh to ckpt queue.\n  \n    *t1_test.txt*:\n\n    ```\n    cubegen 0 mo=488 test.fchk test_62B.cube 0 h\n    cubegen 0 mo=489 test.fchk test_63B.cube 0 h\n    cubegen 0 mo=493 test.fchk test_67B.cube 0 h\n    cubegen 0 mo=494 test.fchk test_68B.cube 0 h\n    cubegen 0 mo=496 test.fchk test_70B.cube 0 h\n    cubegen 0 mo=498 test.fchk test_72B.cube 0 h\n    ```\n\n    *t1_test.sh*:\n\n     ```bash\n    #!/bin/bash\n    #SBATCH --job-name=fchk_cube\n    #SBATCH --nodes=1\n    #SBATCH --ntasks-per-node=28\n    #SBATCH --time=10:00\n    #SBATCH --mem=100G\n    #SBATCH --workdir=/gscratch/stf/yueliu96/test\n    #SBATCH --partition=ckpt\n    #SBATCH --account=stf-ckpt\n\n    echo 'This job will run on' $SLURM_JOB_NODELIST\n    #set up time\n    start=$(date +%s)\n\n    #load Gaussian environment\n    module load contrib/g16.b01\n\n    #use checkpoint file to generte formatted one\n    formchk test.chk\n\n    #load parallel environment\n    module load parallel-20170722\n    cat t1_test_opt.txt | parallel -j 28\n\n    end=$(date +%s)\n    echo 'Elapsed Time: '$(($end-$start))'s'\n     ```\n    After finish, we can get 6 cube files. Transfer them from hyak to your local work directory. We need to use *GaussView* to see how the orbital looks like:\n    - open test.fchk with *GaussView*\n    - click `Result`$\\rightarrow$`Surfaces/Contours`$\\rightarrow$`Cube Actions`$\\rightarrow$`Load Cube`$\\rightarrow$choose one of  your cube files$\\rightarrow$highlight that cube$\\rightarrow$`Surfacec Actions`$\\rightarrow$`New Surface`\n","slug":"Gaussian-on-Hyak","published":1,"updated":"2019-01-23T06:32:15.633Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrcn2vtf0011ua5silomoslw","content":"<p><em>Here introduces how to setup Gaussian input file, submit it to <a href=\"https://wiki.cac.washington.edu/display/hyakusers/WIKI+for+Hyak+users\" target=\"_blank\" rel=\"noopener\">Hyak</a> (super computer server) and analyze the output file by my python scripts. Scripts attached here are not limited by python versions.</em></p>\n<h1 id=\"Gaussian-16-Input\"><a href=\"#Gaussian-16-Input\" class=\"headerlink\" title=\"Gaussian 16 Input\"></a>Gaussian 16 Input</h1><p><a href=\"http://gaussian.com/input/\" target=\"_blank\" rel=\"noopener\">Gaussian 16 input</a> consists of a series of lines in an ASCII text file. In general, the input is free-format and case-insensitive; comments start with an exclamation point(!), could be anywhere on a line; spaces, commas, tabs and forward slashes are all considered as valid delimiters (multi spaces are treated as a single demiliter); keyword=option,kw(op),kw=(op1,op2,…) and kw(op1,op2) are all correct. The common suffixes of the input file are gjf and com. The basic structure includes several different sections:</p>\n<h2 id=\"Link-0-Commands\"><a href=\"#Link-0-Commands\" class=\"headerlink\" title=\"Link 0 Commands\"></a><font size=\"3\"><a href=\"http://gaussian.com/link0/\" target=\"_blank\" rel=\"noopener\">Link 0 Commands</a></font></h2><ul>\n<li>locate and name scratch files </li>\n<li>not blank line terminated</li>\n<li>examples<ul>\n<li>%LindaWorker<ul>\n<li>add it when using 2 or more nodes on Hyak</li>\n</ul>\n</li>\n<li>%NProcShared=<em>N</em><ul>\n<li>use up to N processors/cores on shared memory on one node</li>\n<li>default: 28 on Hyak-mox, 16 on Hyak-ikt</li>\n</ul>\n</li>\n<li>%UseSSH<ul>\n<li>start linda workers by ssh instead of rsh(default)</li>\n<li>rsh, remote shell, can execute command on another computer as another user</li>\n<li>ssh: a more secure way to communicate between computers</li>\n<li>some parallel jobs may mess up by using rsh</li>\n</ul>\n</li>\n<li>%Mem=<em>N</em><ul>\n<li>set the dynamics of memory, can follow by MB,GB,etc. 800mb for g16 by default</li>\n<li>some gaussian jobs will select the appropriate algorithm automatically based on the setting of %Mem and <a href=\"#maxdisk\">MaxDisk</a>.</li>\n<li>specifing more mem than availble will cause very poor performance; leave several GBs for operating system</li>\n</ul>\n</li>\n<li>%RWF=<em>file</em><ul>\n<li>locate and name the  read-write file, a super huge file, used to <a href=\"http://gaussian.com/restart/\" target=\"_blank\" rel=\"noopener\">restart</a> a job(not need for opt)</li>\n<li>usually followed by <em><code>%NoSave</code></em>, everything before nosave will deleted if job completes normally</li>\n<li>a suggested location  on Hyak is <a href=\"https://wiki.cac.washington.edu/display/hyakusers/Hyak_disk_quota\" target=\"_blank\" rel=\"noopener\"><code>/gscratch/scrubbed/</code> </a></li>\n<li>how to locate it if not include %RWF(Hyak version):<ul>\n<li>all scratch files are at <a href=\"https://wiki.cac.washington.edu/display/hyakusers/Managing+your+Files#ManagingyourFiles-HomeDirectories\" target=\"_blank\" rel=\"noopener\"><code>/scr/</code></a> of the local node ( <code>ssh nodenumber</code> to enter that node)</li>\n<li>the scratch disk of that node will be cleaned up after walltime runs out </li>\n<li>general version and more about restarting opt and freq jobs: <a href=\"http://gaussian.com/faq2/\" target=\"_blank\" rel=\"noopener\"><em>click  me</em></a></li>\n</ul>\n</li>\n<li>Related key word: <a href=\"#maxdisk\">MaxDisk</a></li>\n</ul>\n</li>\n<li>%Chk=<em>file</em><ul>\n<li>locate and name the checkpoint file</li>\n<li>used to restart jobs(especially <a href=\"#rstopt\">opt</a>), <a href=\"#addtd\">add more states for td</a> and <a href=\"#vistd\">visualize molecular orbitals for td</a></li>\n</ul>\n</li>\n<li>%OldChk=<em>file</em><ul>\n<li>use with <em><code>%Chk=newfile</code></em>: copy <em>file</em> to <em>newfile</em> and then write new chk info to <em>newfile</em></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Route-section-lines\"><a href=\"#Route-section-lines\" class=\"headerlink\" title=\"Route section (# lines)\"></a><font size=\"3\"><a href=\"http://gaussian.com/route/\" target=\"_blank\" rel=\"noopener\">Route section (# lines)</a></font></h2><ul>\n<li>job type and method</li>\n<li>blank line terminated</li>\n<li>examples<ul>\n<li>print form<ul>\n<li><em><code>#N</code></em>: normal print, by default if not specify</li>\n<li><em><code>#P</code></em>: print more info</li>\n<li><em><code>#T</code></em>: terse print </li>\n</ul>\n</li>\n<li>job type<ul>\n<li><em><a href=\"http://gaussian.com/sp/\" target=\"_blank\" rel=\"noopener\">SP</a></em> : single point energy, by default if not specify</li>\n<li><em><a href=\"http://gaussian.com/opt/\" target=\"_blank\" rel=\"noopener\">OPT</a></em> : geometry optimization</li>\n<li><em><a href=\"http://gaussian.com/freq/\" target=\"_blank\" rel=\"noopener\">FREQ</a></em> : vibrational frequency and thermal information</li>\n<li><em><a href=\"http://gaussian.com/td/\" target=\"_blank\" rel=\"noopener\">TD(NStates=n)</a></em> : calculate n excited transitions</li>\n</ul>\n</li>\n<li>other keywords<ul>\n<li><a href=\"http://gaussian.com/population/\" target=\"_blank\" rel=\"noopener\">POP</a><ul>\n<li>charge and spin distribution</li>\n<li><code>pop=min</code> by default except guess=only</li>\n</ul>\n</li>\n<li><a href=\"http://gaussian.com/scf/\" target=\"_blank\" rel=\"noopener\">SCF</a><ul>\n<li>control the functioning of the SCF procedure</li>\n<li><code>scf=tight</code> by default</li>\n<li><code>scf=xqc</code> is helpful for difficult conversion case</li>\n<li><code>NoSymm</code> or <code>Symmetry=None</code>: release orbital symmetry constraints</li>\n</ul>\n</li>\n<li><a href=\"http://gaussian.com/scrf/\" target=\"_blank\" rel=\"noopener\">SCRF</a><ul>\n<li>in the presence of solvent, place solute in a cavity within the solvent reaction field.<ul>\n<li><code>scrf=pcm</code> by default</li>\n<li>ex: <code>scrf=(pcm,solvent=water)</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"http://gaussian.com/cachesize/\" target=\"_blank\" rel=\"noopener\">CacheSize</a><ul>\n<li>the amount of cache per processor to use with various cache-blocking algorithms (in 8-byte words)</li>\n<li>ex: from <code>/proc/cpuinfo</code> find the cache available(35840kb) and a good value is its 50% ( $35840\\times1024\\div8\\times50\\%=2293760$): <code>cachesize=2293760</code></li>\n</ul>\n</li>\n<li><a href=\"http://gaussian.com/maxdisk/\" target=\"_blank\" rel=\"noopener\"><jump id=\"maxdisk\">MaxDisk</jump></a><ul>\n<li>the amount of disk storage available for <a href=\"https://gaussian.com/running/?tabid=6\" target=\"_blank\" rel=\"noopener\">scratch data</a> </li>\n<li>disk space of one node on Hyak is ~100GB. <code>lsblk -d</code> or <code>df -h</code> can show physical disk info of linux system</li>\n<li>the more disk space available, the faster the evaluation, especially for MP2. Some jobs have fixed or minimum disk requirments, click <a href=\"http://gaussian.com/maxdisk/\" target=\"_blank\" rel=\"noopener\">me</a> for more info.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Title-section\"><a href=\"#Title-section\" class=\"headerlink\" title=\"Title section\"></a><font size=\"3\">Title section</font></h2><ul>\n<li>any descriptions within 5 lines</li>\n<li>avoid special character: @  #  !  –  _  \\  control characters (especially Ctrl-G)</li>\n<li>blank line terminated</li>\n</ul>\n<h2 id=\"Molecule-specification\"><a href=\"#Molecule-specification\" class=\"headerlink\" title=\"Molecule specification\"></a><font size=\"3\"><a href=\"http://gaussian.com/molspec/\" target=\"_blank\" rel=\"noopener\">Molecule specification</a></font></h2><ul>\n<li>charge, multiplicity, atoms and coordinates<ul>\n<li>multiplicity<ul>\n<li>number of possible spin orientations of the total spin</li>\n<li>mp=2S+1, S($\\alpha$ electron)=0.5, S($\\beta$ electron)=-0.5</li>\n</ul>\n</li>\n<li>coordinates<ul>\n<li>x, y and z coordinates in angstrom</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>blank line terminated</li>\n</ul>\n<h2 id=\"Optinal-additional-sections\"><a href=\"#Optinal-additional-sections\" class=\"headerlink\" title=\"Optinal additional sections\"></a><font size=\"3\">Optinal additional sections</font></h2><ul>\n<li>additional input</li>\n<li>blank line terminated</li>\n</ul>\n<p><em>Example:</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%mem=32GB</span><br><span class=\"line\">%nprocshared=28</span><br><span class=\"line\">%chk=guanosine.chk</span><br><span class=\"line\"># opt um062x/6-31+g(d,p) pop=min scf=(xqc,tight)</span><br><span class=\"line\"></span><br><span class=\"line\">Complex guanosine</span><br><span class=\"line\"></span><br><span class=\"line\">1 2</span><br><span class=\"line\">O       -3.094427        1.959361        0.291777</span><br><span class=\"line\">C       -4.011153        1.021154       -0.267210</span><br><span class=\"line\">C       -3.292860       -0.293751       -0.453718</span><br><span class=\"line\">O       -2.175288       -0.104229       -1.347075</span><br><span class=\"line\">...           ...             ...             ...</span><br><span class=\"line\">H       -1.180628        1.929546       -0.412585</span><br><span class=\"line\">H       -3.574938        2.742899        0.582770</span><br><span class=\"line\">H        1.100354        3.004366        0.220564</span><br><span class=\"line\">! a blank line must be here</span><br></pre></td></tr></table></figure>\n<h1 id=\"Submit-to-Hyak\"><a href=\"#Submit-to-Hyak\" class=\"headerlink\" title=\"Submit to Hyak\"></a>Submit to Hyak</h1><p>Run <code>~/Hyak-Gaussian/gaussian-sub.py input_file</code>, will generate a sbatch file(suffix is sh):</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --job-name=???</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --nodes=1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##needed if ckpt partition or  any partitions with 2 or more nodes</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --ntasks-per-node=??</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --time=???:00:00</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##larger than %mem in input file</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --mem=???</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --workdir=??????</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --partition=???</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --account=???</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##turn on email notification</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --mail-type=ALL</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --mail-user=???your email???</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># load Gaussian environment</span></span><br><span class=\"line\">module load contrib/g16.b01</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># debugging information</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"**** Job Debugging Information ****\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"This job will run on <span class=\"variable\">$SLURM_JOB_NODELIST</span>\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"ENVIRONMENT VARIABLES\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"**********************************************\"</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># run Gaussian</span></span><br><span class=\"line\">g16 ???input file???</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">exit</span> 0</span><br></pre></td></tr></table></figure>\n<p>Run <code>sbatch *.sh</code> to submit it to hyak.</p>\n<h1 id=\"Output-amp-Analysis\"><a href=\"#Output-amp-Analysis\" class=\"headerlink\" title=\"Output &amp; Analysis\"></a>Output &amp; Analysis</h1><h2 id=\"I-OPT\"><a href=\"#I-OPT\" class=\"headerlink\" title=\"I. OPT\"></a><font size=\"4\">I. <a href=\"http://gaussian.com/opt/\" target=\"_blank\" rel=\"noopener\">OPT</a></font></h2><p>If key word <code>Tight</code> or <code>SCF</code> is in route card, Berny optimization will be used. This kind of output is dilimited by <em>GradGradGrad…</em>. The appearance of the following words marks completion of opt, and the final structure is displayed after that. We always want to extract the optimized standard structure for the next step calculation.</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">            Item               Value     Threshold  Converged?</span><br><span class=\"line\">Maximum Force            0.000020     0.000450     YES</span><br><span class=\"line\">RMS     Force            0.000004     0.000300     YES</span><br><span class=\"line\">Maximum Displacement     0.001510     0.001800     YES</span><br><span class=\"line\">RMS     Displacement     0.000199     0.001200     YES</span><br><span class=\"line\">Optimization completed.</span><br><span class=\"line\">   -- Stationary point found</span><br></pre></td></tr></table></figure>\n<p><jump id=\"rstopt\"></jump>If <code>Stationary point found</code> is absent in log file, that means the opt job is ended earlier, maybe because of time limit. In this case, we need to write another restarted input file and submit it again to start from where it left, the route card of which should be <code># opt=restart</code> plus the other keywords in the original input. For example: if the original route card is:<code># opt ub3lyp/6-31+g(d,p) pop=min scf=(xqc,tight)</code> and the chk file is named as <em>test.chk</em>. The new input file is like: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%UseSSH</span><br><span class=\"line\">%mem=32GB</span><br><span class=\"line\">%nprocshared=28</span><br><span class=\"line\">%chk=test.chk</span><br><span class=\"line\"># Opt=Restart ub3lyp/6-31+g(d,p) pop=min scf=(xqc,tight)</span><br><span class=\"line\">! a blank line must be here</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-optlog2gjfcom-py\"><a href=\"#1-optlog2gjfcom-py\" class=\"headerlink\" title=\"1. optlog2gjfcom.py\"></a><font size=\"3\">1. <a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/optlog2gjfcom.py\" target=\"_blank\" rel=\"noopener\">optlog2gjfcom.py</a></font></h3><ul>\n<li><em>Usage</em><ul>\n<li><code>python optlog2gjfcom.py opt_log</code></li>\n</ul>\n</li>\n<li><em>Descriptions</em><ul>\n<li>Uses <code>Stationary point found</code> as a key to tell if opt finishes</li>\n<li>If finished, locates <code>Standard orientation</code> after it, reads charge and multiplicity from the very end and then writes them to a new file in the form of gaussian input, named <em>test_opt.gjf</em> if original one is <em>test$.$com</em>.</li>\n<li>If not  finished, checks if input file in the current directory, gets chk file name from input and then writes the restarted input file just as showed above named with <em>test_rst.gjf</em> if original one is <em>test.gjf</em>. If original input and chk files not found, it will just stop without doing anything.</li>\n</ul>\n</li>\n<li><p><em>Notes</em> </p>\n<ul>\n<li><p>The default route card for optimized file and link info for both optimized and restarted one are easily to change:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LINK=&apos;%UseSSH\\n%mem=32GB\\n%nprocshared=28\\n&apos;</span><br><span class=\"line\">ROUTE=&apos;# td(NStates=25) um062x/6-31+g(d,p) pop=min scf=(xqc,tight)&apos;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>A quick way to walk through all log files in one directory:</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> *<span class=\"built_in\">log</span>; <span class=\"keyword\">do</span> python optlog2gjfcom.py <span class=\"variable\">$x</span>; <span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-HFenergies-py\"><a href=\"#2-HFenergies-py\" class=\"headerlink\" title=\"2.HFenergies.py\"></a><font size=\"3\">2.<jump id=\"hfenergies\"></jump><a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/HFenergies.py\" target=\"_blank\" rel=\"noopener\">HFenergies.py</a></font></h3><p>Another important information in the output is optimized energy, which is easy to locate by key word <em>SCF Done</em>.</p>\n<ul>\n<li><em>Usage</em><ul>\n<li><code>python HFenergies.py</code></li>\n</ul>\n</li>\n<li><em>Descriptions</em><ul>\n<li>Goes through all *<em>.log</em> files in the current directory to extract energy</li>\n<li>If <code>Stationary point found</code> is in the presence of log file, reads the energy after the last <code>SCF Done</code>; if not, returns energy=<em>NA</em></li>\n<li>Energies are sorted ascendingly and written to <em>HFenergies.csv</em> file with corresponding logfile name(without suffix)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"II-FREQ\"><a href=\"#II-FREQ\" class=\"headerlink\" title=\"II. FREQ\"></a><font size=\"4\">II. <a href=\"http://gaussian.com/freq/\" target=\"_blank\" rel=\"noopener\">FREQ</a></font></h2><p><em>3N-6</em> frequecies can be found in the output file for nonlinear molecules (<em>3N-5</em> for linear molecules, <em>N</em> is the number of atoms), following by thermochemistry analysis at 298.15K, 1 atm.<br>Since the temperature in the Mass Spec is around 310K, we need to extrat all normal modes(frequencies), zero-point vibrational energy(ZPVE) and entropy(S) from the log file and calculate entropy and enthalpy(H) at 310K 1 atm. Also, we correct frequencies by a factor of 0.975.</p>\n<p><em>Note that the input of freq job should be the optimized structure optimized with the same method and basis set.</em></p>\n<h3 id=\"1-freq-thermal-py\"><a href=\"#1-freq-thermal-py\" class=\"headerlink\" title=\"1.freq_thermal.py\"></a><font size=\"3\">1.<jump id=\"freqt\"></jump><a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/freq_thermal.py\" target=\"_blank\" rel=\"noopener\">freq_thermal.py</a></font></h3><ul>\n<li><em>Usage</em><ul>\n<li><code>python freq_thermal.py freq_log</code></li>\n</ul>\n</li>\n<li><em>Descriptions</em><ul>\n<li>Extracts frequencies from log file. If the first frequency is negative or freq not finished, raises error and stops.</li>\n<li>Uses partition functions to calculate enthalpy, entropy and heat capacity and writes the result to file named with <em>test_freq.csv</em> if <em>test.log</em> is given.</li>\n<li><em><font color=\"gray\">explanations of calculation(to be writted)</font></em></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-CpExtractor-py\"><a href=\"#2-CpExtractor-py\" class=\"headerlink\" title=\"2.CpExtractor.py\"></a><font size=\"3\">2.<a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/CpExtractor.py\" target=\"_blank\" rel=\"noopener\">CpExtractor.py</a></font></h3><p>Sometimes, we only want to know the heat capacity at constant pressure. This scripts can extract Cp from all *freq.csv files.</p>\n<ul>\n<li><em>Usage</em><ul>\n<li><code>python CpExtractor.py</code></li>\n</ul>\n</li>\n<li><em>Descriptions</em><ul>\n<li>Goes through all *<em>_freq.csv</em> files in the working directory and writes the Cp and its file name into a new file <em>Cp.csv</em></li>\n<li>If Cp not found, <em>NA</em> will be there instead of a number</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-GibbsEnergy-py\"><a href=\"#3-GibbsEnergy-py\" class=\"headerlink\" title=\"3.GibbsEnergy.py\"></a><font size=\"3\">3.<a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/GibbsEnergy.py\" target=\"_blank\" rel=\"noopener\">GibbsEnergy.py</a></font></h3><p>After finish all opt and freq jobs, we can use energy file got from <em>HFenergies$.$py</em> and <em>ZPVE</em>, <em>H</em> and <em>S</em> from <em>freq_thermal$.$py</em> to calculate their free energies.</p>\n<ul>\n<li><em>Usage</em><ul>\n<li><code>python GibbsEnergy.py energyfile</code></li>\n</ul>\n</li>\n<li><em>Descriptions</em><ul>\n<li>Needs energy($E_{elec}$) file got from <a href=\"#hfenergies\">HFenergies.py</a> and corresponding *_freq.csv files got from <a href=\"#freqt\">freq_thermal.py</a> in the same directory. The delimiter of all these files must be comma(by default, don’t change it)</li>\n<li>Reads structure’s name(x) and energy from energy file. The frist row is considered as title, will be skipped. The structure with lowest energy is seen as reference.</li>\n<li>Uses x find its freq file: x_freq.csv and reads its 9th row(thermal information); only reads 8th row(title info) for one *<em>_freq.csv</em>.</li>\n<li>$G=E_{elec}+ZPVE_{corr}+H(T)-T\\cdot S(T)$ and $\\Delta G=G-G_{ref}$ are used, the result in $kJ/mol$</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"III-TDDFT\"><a href=\"#III-TDDFT\" class=\"headerlink\" title=\"III. TDDFT\"></a><font size=\"4\">III. <a href=\"http://gaussian.com/td/\" target=\"_blank\" rel=\"noopener\">TDDFT</a></font></h2><p>The main output of tddft contains the excitation energies, oscillation strength(f, the intensity of that transition) and S**2, listed below. A resonable transition should satisfy spin forbidden. For a doublet(multiplicity:2S+1=2) S=0.5, so S**2=S(S+1)=0.75. What should be consider is that if not following that rule, the electron flips during the transiton, the total spin momentum S changes from 0.5 to 1.5, and S**2=3.75. When running tddft job, the transition is a combination of these two situations, usually the more differ from what S**2 should be, the less f is. In our lab, we only keep transitions whose S**2&lt;2.6, and use lorentzian equation to calcualte its absorption spectra.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Excited State   1:  2.065-A      2.0123 eV  616.13 nm  f=0.0002  &lt;S**2&gt;=0.816</span><br><span class=\"line\">    62B -&gt; 70B       -0.10013</span><br><span class=\"line\">    63B -&gt; 70B       -0.16217</span><br><span class=\"line\">    63B -&gt; 72B       -0.10120</span><br><span class=\"line\">    67B -&gt; 70B        0.87674</span><br><span class=\"line\">    68B -&gt; 70B        0.37169</span><br></pre></td></tr></table></figure>\n<p><jump id=\"addtd\"></jump>In experiment, we measure the action spectra from 210nm to 700nm, so we hope the theoritical one can cover that region. If the last transition energy cannot reach 210nm, we should add more states to it. For example, if the original route card is <code># TD(Nstates=30) um062x/6-31+g(d,p) pop=none scf=(xqc,tight)</code> and its chk file is <em>test.chk</em> the new input file should be:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%mem=32GB</span><br><span class=\"line\">%nprocshared=28</span><br><span class=\"line\">%oldchk=test.chk</span><br><span class=\"line\">%chk=test_add.chk</span><br><span class=\"line\"># TD(add=10) Geom=AllCheck um062x/6-31+g(d,p) pop=none scf=(xqc,tight)</span><br><span class=\"line\">! a blank line must be here</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-tddft-lorentzian-py\"><a href=\"#1-tddft-lorentzian-py\" class=\"headerlink\" title=\"1.tddft_lorentzian.py\"></a><font size=\"3\">1.<a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/tddft_lorentzian.py\" target=\"_blank\" rel=\"noopener\">tddft_lorentzian.py</a></font></h3><ul>\n<li><em>Usage</em><ul>\n<li><code>python tddft_lorentzian.py td_log</code></li>\n</ul>\n</li>\n<li><em>Descriptions</em><ul>\n<li>Reads all excitated frequencies, oscilation strength and S**2 from log file and checks if the last one is below 210nm.</li>\n<li>If not, writes the new input file as shown above named with <em>test_add.gjf</em> if original input is <em>test.gjf</em>. The original input file and chk file must be in the same directory.</li>\n<li>Otherwise, uses S*<em>2=2.6 as a cutoff to choose frequencies and applies lorentzian equation to calculate absorption spectra. The results are written to </em>test_uvvis.csv<em> if log named with </em>test.log*.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-tddft-plot-py\"><a href=\"#2-tddft-plot-py\" class=\"headerlink\" title=\"2.tddft_plot.py\"></a><font size=\"3\">2.<a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/tddft_plot.py\" target=\"_blank\" rel=\"noopener\">tddft_plot.py</a></font></h3><ul>\n<li><em>Usage</em><ul>\n<li><code>python tddft_plot.py uvvis.csv</code></li>\n<li>uvvis.csv is the file got from tddft_lorentzian.py</li>\n<li>need import matplotlib, pandas, numpy, <code>module load anacond3_5.3</code> if not able to impor tthese modules</li>\n</ul>\n</li>\n<li><p><em>Descriptions</em></p>\n<p><img src=\"https://raw.githubusercontent.com/yueliu96/blog_images/master/tddftplot_eg.jpg\" alt=\"tddft plot\"></p>\n</li>\n</ul>\n<h3 id=\"3-cubegen-py\"><a href=\"#3-cubegen-py\" class=\"headerlink\" title=\"3.cubegen.py\"></a><jump id=\"vistd\"></jump><font size=\"3\">3.<a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/cubegen.py\" target=\"_blank\" rel=\"noopener\">cubegen.py</a></font></h3><p>We can also visualize the molecular orbital if we have tddft chk file. We should first use <a href=\"http://gaussian.com/formchk/\" target=\"_blank\" rel=\"noopener\"><code>formchk</code></a> command to generate fchk file, and then use <a href=\"http://gaussian.com/cubegen/\" target=\"_blank\" rel=\"noopener\"><code>cubegen</code></a> to get the cube file, which can be visualized by Gaussian-View. To use cubegen, we also need to decide the molecular orbital number. For $\\alpha$ orbital, like 68A, just set mo=68. But for $\\beta$ orbital,like 72B, we should find the total number of $\\alpha$ orbitals first: if one molecule has 70 $\\alpha$ electrons(NAE) and 356 virtual $\\alpha$ orbitals(NVA), set mo=498(70+356+72). </p>\n<p>If we run cubegen on the login node, it will take around 1 minutes. Usually we are interested in several orbitals in one or more excited states. In this way, this script comes out. </p>\n<ul>\n<li><em>Usage</em><ul>\n<li><code>python cubegen.py td_log num_excited_states</code></li>\n</ul>\n</li>\n<li><em>Descriptions</em><ul>\n<li>Finds the name of chk/fchk file from log file. After fchk found, skip to next step; if not, start to locate chk file and generate fchk from chk. If both of them not found, stop processing. </li>\n<li>Finds NAE, NVA and unique molecule orbitals in the specified excited state. And writes corresponding cubegen to a txt file.</li>\n<li>Loads parallel environment and cats tasklists( the txt file) to the sbatch file.</li>\n<li>Submits it to ckpt partition. It should be finished in several seconds</li>\n</ul>\n</li>\n<li><p><em>Example</em></p>\n<p> The transition of the first excited state is listed above. If its log is test.log, NAE+NVA=426. Run <code>python cubegen.py test.log 1</code>, we will get 2 files: t1_test.txt and t1_test.sh, and it will submit t1_test.sh to ckpt queue.</p>\n<p>  <em>t1_test.txt</em>:</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cubegen 0 mo=488 test.fchk test_62B.cube 0 h</span><br><span class=\"line\">cubegen 0 mo=489 test.fchk test_63B.cube 0 h</span><br><span class=\"line\">cubegen 0 mo=493 test.fchk test_67B.cube 0 h</span><br><span class=\"line\">cubegen 0 mo=494 test.fchk test_68B.cube 0 h</span><br><span class=\"line\">cubegen 0 mo=496 test.fchk test_70B.cube 0 h</span><br><span class=\"line\">cubegen 0 mo=498 test.fchk test_72B.cube 0 h</span><br></pre></td></tr></table></figure>\n<p>  <em>t1_test.sh</em>:</p>\n   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --job-name=fchk_cube</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --nodes=1</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --ntasks-per-node=28</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --time=10:00</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --mem=100G</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --workdir=/gscratch/stf/yueliu96/test</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --partition=ckpt</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --account=stf-ckpt</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'This job will run on'</span> <span class=\"variable\">$SLURM_JOB_NODELIST</span></span><br><span class=\"line\"><span class=\"comment\">#set up time</span></span><br><span class=\"line\">start=$(date +%s)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#load Gaussian environment</span></span><br><span class=\"line\">module load contrib/g16.b01</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#use checkpoint file to generte formatted one</span></span><br><span class=\"line\">formchk test.chk</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#load parallel environment</span></span><br><span class=\"line\">module load parallel-20170722</span><br><span class=\"line\">cat t1_test_opt.txt | parallel -j 28</span><br><span class=\"line\"></span><br><span class=\"line\">end=$(date +%s)</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'Elapsed Time: '</span>$((<span class=\"variable\">$end</span>-<span class=\"variable\">$start</span>))<span class=\"string\">'s'</span></span><br></pre></td></tr></table></figure>\n<p>  After finish, we can get 6 cube files. Transfer them from hyak to your local work directory. We need to use <em>GaussView</em> to see how the orbital looks like:</p>\n<ul>\n<li>open test.fchk with <em>GaussView</em></li>\n<li>click <code>Result</code>$\\rightarrow$<code>Surfaces/Contours</code>$\\rightarrow$<code>Cube Actions</code>$\\rightarrow$<code>Load Cube</code>$\\rightarrow$choose one of  your cube files$\\rightarrow$highlight that cube$\\rightarrow$<code>Surfacec Actions</code>$\\rightarrow$<code>New Surface</code></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><em>Here introduces how to setup Gaussian input file, submit it to <a href=\"https://wiki.cac.washington.edu/display/hyakusers/WIKI+for+Hyak+users\" target=\"_blank\" rel=\"noopener\">Hyak</a> (super computer server) and analyze the output file by my python scripts. Scripts attached here are not limited by python versions.</em></p>\n<h1 id=\"Gaussian-16-Input\"><a href=\"#Gaussian-16-Input\" class=\"headerlink\" title=\"Gaussian 16 Input\"></a>Gaussian 16 Input</h1><p><a href=\"http://gaussian.com/input/\" target=\"_blank\" rel=\"noopener\">Gaussian 16 input</a> consists of a series of lines in an ASCII text file. In general, the input is free-format and case-insensitive; comments start with an exclamation point(!), could be anywhere on a line; spaces, commas, tabs and forward slashes are all considered as valid delimiters (multi spaces are treated as a single demiliter); keyword=option,kw(op),kw=(op1,op2,…) and kw(op1,op2) are all correct. The common suffixes of the input file are gjf and com. The basic structure includes several different sections:</p>\n<h2 id=\"Link-0-Commands\"><a href=\"#Link-0-Commands\" class=\"headerlink\" title=\"Link 0 Commands\"></a><font size=\"3\"><a href=\"http://gaussian.com/link0/\" target=\"_blank\" rel=\"noopener\">Link 0 Commands</a></font></h2><ul>\n<li>locate and name scratch files </li>\n<li>not blank line terminated</li>\n<li>examples<ul>\n<li>%LindaWorker<ul>\n<li>add it when using 2 or more nodes on Hyak</li>\n</ul>\n</li>\n<li>%NProcShared=<em>N</em><ul>\n<li>use up to N processors/cores on shared memory on one node</li>\n<li>default: 28 on Hyak-mox, 16 on Hyak-ikt</li>\n</ul>\n</li>\n<li>%UseSSH<ul>\n<li>start linda workers by ssh instead of rsh(default)</li>\n<li>rsh, remote shell, can execute command on another computer as another user</li>\n<li>ssh: a more secure way to communicate between computers</li>\n<li>some parallel jobs may mess up by using rsh</li>\n</ul>\n</li>\n<li>%Mem=<em>N</em><ul>\n<li>set the dynamics of memory, can follow by MB,GB,etc. 800mb for g16 by default</li>\n<li>some gaussian jobs will select the appropriate algorithm automatically based on the setting of %Mem and <a href=\"#maxdisk\">MaxDisk</a>.</li>\n<li>specifing more mem than availble will cause very poor performance; leave several GBs for operating system</li>\n</ul>\n</li>\n<li>%RWF=<em>file</em><ul>\n<li>locate and name the  read-write file, a super huge file, used to <a href=\"http://gaussian.com/restart/\" target=\"_blank\" rel=\"noopener\">restart</a> a job(not need for opt)</li>\n<li>usually followed by <em><code>%NoSave</code></em>, everything before nosave will deleted if job completes normally</li>\n<li>a suggested location  on Hyak is <a href=\"https://wiki.cac.washington.edu/display/hyakusers/Hyak_disk_quota\" target=\"_blank\" rel=\"noopener\"><code>/gscratch/scrubbed/</code> </a></li>\n<li>how to locate it if not include %RWF(Hyak version):<ul>\n<li>all scratch files are at <a href=\"https://wiki.cac.washington.edu/display/hyakusers/Managing+your+Files#ManagingyourFiles-HomeDirectories\" target=\"_blank\" rel=\"noopener\"><code>/scr/</code></a> of the local node ( <code>ssh nodenumber</code> to enter that node)</li>\n<li>the scratch disk of that node will be cleaned up after walltime runs out </li>\n<li>general version and more about restarting opt and freq jobs: <a href=\"http://gaussian.com/faq2/\" target=\"_blank\" rel=\"noopener\"><em>click  me</em></a></li>\n</ul>\n</li>\n<li>Related key word: <a href=\"#maxdisk\">MaxDisk</a></li>\n</ul>\n</li>\n<li>%Chk=<em>file</em><ul>\n<li>locate and name the checkpoint file</li>\n<li>used to restart jobs(especially <a href=\"#rstopt\">opt</a>), <a href=\"#addtd\">add more states for td</a> and <a href=\"#vistd\">visualize molecular orbitals for td</a></li>\n</ul>\n</li>\n<li>%OldChk=<em>file</em><ul>\n<li>use with <em><code>%Chk=newfile</code></em>: copy <em>file</em> to <em>newfile</em> and then write new chk info to <em>newfile</em></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Route-section-lines\"><a href=\"#Route-section-lines\" class=\"headerlink\" title=\"Route section (# lines)\"></a><font size=\"3\"><a href=\"http://gaussian.com/route/\" target=\"_blank\" rel=\"noopener\">Route section (# lines)</a></font></h2><ul>\n<li>job type and method</li>\n<li>blank line terminated</li>\n<li>examples<ul>\n<li>print form<ul>\n<li><em><code>#N</code></em>: normal print, by default if not specify</li>\n<li><em><code>#P</code></em>: print more info</li>\n<li><em><code>#T</code></em>: terse print </li>\n</ul>\n</li>\n<li>job type<ul>\n<li><em><a href=\"http://gaussian.com/sp/\" target=\"_blank\" rel=\"noopener\">SP</a></em> : single point energy, by default if not specify</li>\n<li><em><a href=\"http://gaussian.com/opt/\" target=\"_blank\" rel=\"noopener\">OPT</a></em> : geometry optimization</li>\n<li><em><a href=\"http://gaussian.com/freq/\" target=\"_blank\" rel=\"noopener\">FREQ</a></em> : vibrational frequency and thermal information</li>\n<li><em><a href=\"http://gaussian.com/td/\" target=\"_blank\" rel=\"noopener\">TD(NStates=n)</a></em> : calculate n excited transitions</li>\n</ul>\n</li>\n<li>other keywords<ul>\n<li><a href=\"http://gaussian.com/population/\" target=\"_blank\" rel=\"noopener\">POP</a><ul>\n<li>charge and spin distribution</li>\n<li><code>pop=min</code> by default except guess=only</li>\n</ul>\n</li>\n<li><a href=\"http://gaussian.com/scf/\" target=\"_blank\" rel=\"noopener\">SCF</a><ul>\n<li>control the functioning of the SCF procedure</li>\n<li><code>scf=tight</code> by default</li>\n<li><code>scf=xqc</code> is helpful for difficult conversion case</li>\n<li><code>NoSymm</code> or <code>Symmetry=None</code>: release orbital symmetry constraints</li>\n</ul>\n</li>\n<li><a href=\"http://gaussian.com/scrf/\" target=\"_blank\" rel=\"noopener\">SCRF</a><ul>\n<li>in the presence of solvent, place solute in a cavity within the solvent reaction field.<ul>\n<li><code>scrf=pcm</code> by default</li>\n<li>ex: <code>scrf=(pcm,solvent=water)</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"http://gaussian.com/cachesize/\" target=\"_blank\" rel=\"noopener\">CacheSize</a><ul>\n<li>the amount of cache per processor to use with various cache-blocking algorithms (in 8-byte words)</li>\n<li>ex: from <code>/proc/cpuinfo</code> find the cache available(35840kb) and a good value is its 50% ( $35840\\times1024\\div8\\times50\\%=2293760$): <code>cachesize=2293760</code></li>\n</ul>\n</li>\n<li><a href=\"http://gaussian.com/maxdisk/\" target=\"_blank\" rel=\"noopener\"><jump id=\"maxdisk\">MaxDisk</jump></a><ul>\n<li>the amount of disk storage available for <a href=\"https://gaussian.com/running/?tabid=6\" target=\"_blank\" rel=\"noopener\">scratch data</a> </li>\n<li>disk space of one node on Hyak is ~100GB. <code>lsblk -d</code> or <code>df -h</code> can show physical disk info of linux system</li>\n<li>the more disk space available, the faster the evaluation, especially for MP2. Some jobs have fixed or minimum disk requirments, click <a href=\"http://gaussian.com/maxdisk/\" target=\"_blank\" rel=\"noopener\">me</a> for more info.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Title-section\"><a href=\"#Title-section\" class=\"headerlink\" title=\"Title section\"></a><font size=\"3\">Title section</font></h2><ul>\n<li>any descriptions within 5 lines</li>\n<li>avoid special character: @  #  !  –  _  \\  control characters (especially Ctrl-G)</li>\n<li>blank line terminated</li>\n</ul>\n<h2 id=\"Molecule-specification\"><a href=\"#Molecule-specification\" class=\"headerlink\" title=\"Molecule specification\"></a><font size=\"3\"><a href=\"http://gaussian.com/molspec/\" target=\"_blank\" rel=\"noopener\">Molecule specification</a></font></h2><ul>\n<li>charge, multiplicity, atoms and coordinates<ul>\n<li>multiplicity<ul>\n<li>number of possible spin orientations of the total spin</li>\n<li>mp=2S+1, S($\\alpha$ electron)=0.5, S($\\beta$ electron)=-0.5</li>\n</ul>\n</li>\n<li>coordinates<ul>\n<li>x, y and z coordinates in angstrom</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>blank line terminated</li>\n</ul>\n<h2 id=\"Optinal-additional-sections\"><a href=\"#Optinal-additional-sections\" class=\"headerlink\" title=\"Optinal additional sections\"></a><font size=\"3\">Optinal additional sections</font></h2><ul>\n<li>additional input</li>\n<li>blank line terminated</li>\n</ul>\n<p><em>Example:</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%mem=32GB</span><br><span class=\"line\">%nprocshared=28</span><br><span class=\"line\">%chk=guanosine.chk</span><br><span class=\"line\"># opt um062x/6-31+g(d,p) pop=min scf=(xqc,tight)</span><br><span class=\"line\"></span><br><span class=\"line\">Complex guanosine</span><br><span class=\"line\"></span><br><span class=\"line\">1 2</span><br><span class=\"line\">O       -3.094427        1.959361        0.291777</span><br><span class=\"line\">C       -4.011153        1.021154       -0.267210</span><br><span class=\"line\">C       -3.292860       -0.293751       -0.453718</span><br><span class=\"line\">O       -2.175288       -0.104229       -1.347075</span><br><span class=\"line\">...           ...             ...             ...</span><br><span class=\"line\">H       -1.180628        1.929546       -0.412585</span><br><span class=\"line\">H       -3.574938        2.742899        0.582770</span><br><span class=\"line\">H        1.100354        3.004366        0.220564</span><br><span class=\"line\">! a blank line must be here</span><br></pre></td></tr></table></figure>\n<h1 id=\"Submit-to-Hyak\"><a href=\"#Submit-to-Hyak\" class=\"headerlink\" title=\"Submit to Hyak\"></a>Submit to Hyak</h1><p>Run <code>~/Hyak-Gaussian/gaussian-sub.py input_file</code>, will generate a sbatch file(suffix is sh):</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --job-name=???</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --nodes=1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##needed if ckpt partition or  any partitions with 2 or more nodes</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --ntasks-per-node=??</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --time=???:00:00</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##larger than %mem in input file</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --mem=???</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --workdir=??????</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --partition=???</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --account=???</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##turn on email notification</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --mail-type=ALL</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --mail-user=???your email???</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># load Gaussian environment</span></span><br><span class=\"line\">module load contrib/g16.b01</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># debugging information</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"**** Job Debugging Information ****\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"This job will run on <span class=\"variable\">$SLURM_JOB_NODELIST</span>\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"ENVIRONMENT VARIABLES\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"**********************************************\"</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># run Gaussian</span></span><br><span class=\"line\">g16 ???input file???</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">exit</span> 0</span><br></pre></td></tr></table></figure>\n<p>Run <code>sbatch *.sh</code> to submit it to hyak.</p>\n<h1 id=\"Output-amp-Analysis\"><a href=\"#Output-amp-Analysis\" class=\"headerlink\" title=\"Output &amp; Analysis\"></a>Output &amp; Analysis</h1><h2 id=\"I-OPT\"><a href=\"#I-OPT\" class=\"headerlink\" title=\"I. OPT\"></a><font size=\"4\">I. <a href=\"http://gaussian.com/opt/\" target=\"_blank\" rel=\"noopener\">OPT</a></font></h2><p>If key word <code>Tight</code> or <code>SCF</code> is in route card, Berny optimization will be used. This kind of output is dilimited by <em>GradGradGrad…</em>. The appearance of the following words marks completion of opt, and the final structure is displayed after that. We always want to extract the optimized standard structure for the next step calculation.</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">            Item               Value     Threshold  Converged?</span><br><span class=\"line\">Maximum Force            0.000020     0.000450     YES</span><br><span class=\"line\">RMS     Force            0.000004     0.000300     YES</span><br><span class=\"line\">Maximum Displacement     0.001510     0.001800     YES</span><br><span class=\"line\">RMS     Displacement     0.000199     0.001200     YES</span><br><span class=\"line\">Optimization completed.</span><br><span class=\"line\">   -- Stationary point found</span><br></pre></td></tr></table></figure>\n<p><jump id=\"rstopt\"></jump>If <code>Stationary point found</code> is absent in log file, that means the opt job is ended earlier, maybe because of time limit. In this case, we need to write another restarted input file and submit it again to start from where it left, the route card of which should be <code># opt=restart</code> plus the other keywords in the original input. For example: if the original route card is:<code># opt ub3lyp/6-31+g(d,p) pop=min scf=(xqc,tight)</code> and the chk file is named as <em>test.chk</em>. The new input file is like: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%UseSSH</span><br><span class=\"line\">%mem=32GB</span><br><span class=\"line\">%nprocshared=28</span><br><span class=\"line\">%chk=test.chk</span><br><span class=\"line\"># Opt=Restart ub3lyp/6-31+g(d,p) pop=min scf=(xqc,tight)</span><br><span class=\"line\">! a blank line must be here</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-optlog2gjfcom-py\"><a href=\"#1-optlog2gjfcom-py\" class=\"headerlink\" title=\"1. optlog2gjfcom.py\"></a><font size=\"3\">1. <a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/optlog2gjfcom.py\" target=\"_blank\" rel=\"noopener\">optlog2gjfcom.py</a></font></h3><ul>\n<li><em>Usage</em><ul>\n<li><code>python optlog2gjfcom.py opt_log</code></li>\n</ul>\n</li>\n<li><em>Descriptions</em><ul>\n<li>Uses <code>Stationary point found</code> as a key to tell if opt finishes</li>\n<li>If finished, locates <code>Standard orientation</code> after it, reads charge and multiplicity from the very end and then writes them to a new file in the form of gaussian input, named <em>test_opt.gjf</em> if original one is <em>test$.$com</em>.</li>\n<li>If not  finished, checks if input file in the current directory, gets chk file name from input and then writes the restarted input file just as showed above named with <em>test_rst.gjf</em> if original one is <em>test.gjf</em>. If original input and chk files not found, it will just stop without doing anything.</li>\n</ul>\n</li>\n<li><p><em>Notes</em> </p>\n<ul>\n<li><p>The default route card for optimized file and link info for both optimized and restarted one are easily to change:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LINK=&apos;%UseSSH\\n%mem=32GB\\n%nprocshared=28\\n&apos;</span><br><span class=\"line\">ROUTE=&apos;# td(NStates=25) um062x/6-31+g(d,p) pop=min scf=(xqc,tight)&apos;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>A quick way to walk through all log files in one directory:</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> *<span class=\"built_in\">log</span>; <span class=\"keyword\">do</span> python optlog2gjfcom.py <span class=\"variable\">$x</span>; <span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-HFenergies-py\"><a href=\"#2-HFenergies-py\" class=\"headerlink\" title=\"2.HFenergies.py\"></a><font size=\"3\">2.<jump id=\"hfenergies\"></jump><a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/HFenergies.py\" target=\"_blank\" rel=\"noopener\">HFenergies.py</a></font></h3><p>Another important information in the output is optimized energy, which is easy to locate by key word <em>SCF Done</em>.</p>\n<ul>\n<li><em>Usage</em><ul>\n<li><code>python HFenergies.py</code></li>\n</ul>\n</li>\n<li><em>Descriptions</em><ul>\n<li>Goes through all *<em>.log</em> files in the current directory to extract energy</li>\n<li>If <code>Stationary point found</code> is in the presence of log file, reads the energy after the last <code>SCF Done</code>; if not, returns energy=<em>NA</em></li>\n<li>Energies are sorted ascendingly and written to <em>HFenergies.csv</em> file with corresponding logfile name(without suffix)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"II-FREQ\"><a href=\"#II-FREQ\" class=\"headerlink\" title=\"II. FREQ\"></a><font size=\"4\">II. <a href=\"http://gaussian.com/freq/\" target=\"_blank\" rel=\"noopener\">FREQ</a></font></h2><p><em>3N-6</em> frequecies can be found in the output file for nonlinear molecules (<em>3N-5</em> for linear molecules, <em>N</em> is the number of atoms), following by thermochemistry analysis at 298.15K, 1 atm.<br>Since the temperature in the Mass Spec is around 310K, we need to extrat all normal modes(frequencies), zero-point vibrational energy(ZPVE) and entropy(S) from the log file and calculate entropy and enthalpy(H) at 310K 1 atm. Also, we correct frequencies by a factor of 0.975.</p>\n<p><em>Note that the input of freq job should be the optimized structure optimized with the same method and basis set.</em></p>\n<h3 id=\"1-freq-thermal-py\"><a href=\"#1-freq-thermal-py\" class=\"headerlink\" title=\"1.freq_thermal.py\"></a><font size=\"3\">1.<jump id=\"freqt\"></jump><a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/freq_thermal.py\" target=\"_blank\" rel=\"noopener\">freq_thermal.py</a></font></h3><ul>\n<li><em>Usage</em><ul>\n<li><code>python freq_thermal.py freq_log</code></li>\n</ul>\n</li>\n<li><em>Descriptions</em><ul>\n<li>Extracts frequencies from log file. If the first frequency is negative or freq not finished, raises error and stops.</li>\n<li>Uses partition functions to calculate enthalpy, entropy and heat capacity and writes the result to file named with <em>test_freq.csv</em> if <em>test.log</em> is given.</li>\n<li><em><font color=\"gray\">explanations of calculation(to be writted)</font></em></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-CpExtractor-py\"><a href=\"#2-CpExtractor-py\" class=\"headerlink\" title=\"2.CpExtractor.py\"></a><font size=\"3\">2.<a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/CpExtractor.py\" target=\"_blank\" rel=\"noopener\">CpExtractor.py</a></font></h3><p>Sometimes, we only want to know the heat capacity at constant pressure. This scripts can extract Cp from all *freq.csv files.</p>\n<ul>\n<li><em>Usage</em><ul>\n<li><code>python CpExtractor.py</code></li>\n</ul>\n</li>\n<li><em>Descriptions</em><ul>\n<li>Goes through all *<em>_freq.csv</em> files in the working directory and writes the Cp and its file name into a new file <em>Cp.csv</em></li>\n<li>If Cp not found, <em>NA</em> will be there instead of a number</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-GibbsEnergy-py\"><a href=\"#3-GibbsEnergy-py\" class=\"headerlink\" title=\"3.GibbsEnergy.py\"></a><font size=\"3\">3.<a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/GibbsEnergy.py\" target=\"_blank\" rel=\"noopener\">GibbsEnergy.py</a></font></h3><p>After finish all opt and freq jobs, we can use energy file got from <em>HFenergies$.$py</em> and <em>ZPVE</em>, <em>H</em> and <em>S</em> from <em>freq_thermal$.$py</em> to calculate their free energies.</p>\n<ul>\n<li><em>Usage</em><ul>\n<li><code>python GibbsEnergy.py energyfile</code></li>\n</ul>\n</li>\n<li><em>Descriptions</em><ul>\n<li>Needs energy($E_{elec}$) file got from <a href=\"#hfenergies\">HFenergies.py</a> and corresponding *_freq.csv files got from <a href=\"#freqt\">freq_thermal.py</a> in the same directory. The delimiter of all these files must be comma(by default, don’t change it)</li>\n<li>Reads structure’s name(x) and energy from energy file. The frist row is considered as title, will be skipped. The structure with lowest energy is seen as reference.</li>\n<li>Uses x find its freq file: x_freq.csv and reads its 9th row(thermal information); only reads 8th row(title info) for one *<em>_freq.csv</em>.</li>\n<li>$G=E_{elec}+ZPVE_{corr}+H(T)-T\\cdot S(T)$ and $\\Delta G=G-G_{ref}$ are used, the result in $kJ/mol$</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"III-TDDFT\"><a href=\"#III-TDDFT\" class=\"headerlink\" title=\"III. TDDFT\"></a><font size=\"4\">III. <a href=\"http://gaussian.com/td/\" target=\"_blank\" rel=\"noopener\">TDDFT</a></font></h2><p>The main output of tddft contains the excitation energies, oscillation strength(f, the intensity of that transition) and S**2, listed below. A resonable transition should satisfy spin forbidden. For a doublet(multiplicity:2S+1=2) S=0.5, so S**2=S(S+1)=0.75. What should be consider is that if not following that rule, the electron flips during the transiton, the total spin momentum S changes from 0.5 to 1.5, and S**2=3.75. When running tddft job, the transition is a combination of these two situations, usually the more differ from what S**2 should be, the less f is. In our lab, we only keep transitions whose S**2&lt;2.6, and use lorentzian equation to calcualte its absorption spectra.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Excited State   1:  2.065-A      2.0123 eV  616.13 nm  f=0.0002  &lt;S**2&gt;=0.816</span><br><span class=\"line\">    62B -&gt; 70B       -0.10013</span><br><span class=\"line\">    63B -&gt; 70B       -0.16217</span><br><span class=\"line\">    63B -&gt; 72B       -0.10120</span><br><span class=\"line\">    67B -&gt; 70B        0.87674</span><br><span class=\"line\">    68B -&gt; 70B        0.37169</span><br></pre></td></tr></table></figure>\n<p><jump id=\"addtd\"></jump>In experiment, we measure the action spectra from 210nm to 700nm, so we hope the theoritical one can cover that region. If the last transition energy cannot reach 210nm, we should add more states to it. For example, if the original route card is <code># TD(Nstates=30) um062x/6-31+g(d,p) pop=none scf=(xqc,tight)</code> and its chk file is <em>test.chk</em> the new input file should be:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%mem=32GB</span><br><span class=\"line\">%nprocshared=28</span><br><span class=\"line\">%oldchk=test.chk</span><br><span class=\"line\">%chk=test_add.chk</span><br><span class=\"line\"># TD(add=10) Geom=AllCheck um062x/6-31+g(d,p) pop=none scf=(xqc,tight)</span><br><span class=\"line\">! a blank line must be here</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-tddft-lorentzian-py\"><a href=\"#1-tddft-lorentzian-py\" class=\"headerlink\" title=\"1.tddft_lorentzian.py\"></a><font size=\"3\">1.<a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/tddft_lorentzian.py\" target=\"_blank\" rel=\"noopener\">tddft_lorentzian.py</a></font></h3><ul>\n<li><em>Usage</em><ul>\n<li><code>python tddft_lorentzian.py td_log</code></li>\n</ul>\n</li>\n<li><em>Descriptions</em><ul>\n<li>Reads all excitated frequencies, oscilation strength and S**2 from log file and checks if the last one is below 210nm.</li>\n<li>If not, writes the new input file as shown above named with <em>test_add.gjf</em> if original input is <em>test.gjf</em>. The original input file and chk file must be in the same directory.</li>\n<li>Otherwise, uses S*<em>2=2.6 as a cutoff to choose frequencies and applies lorentzian equation to calculate absorption spectra. The results are written to </em>test_uvvis.csv<em> if log named with </em>test.log*.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-tddft-plot-py\"><a href=\"#2-tddft-plot-py\" class=\"headerlink\" title=\"2.tddft_plot.py\"></a><font size=\"3\">2.<a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/tddft_plot.py\" target=\"_blank\" rel=\"noopener\">tddft_plot.py</a></font></h3><ul>\n<li><em>Usage</em><ul>\n<li><code>python tddft_plot.py uvvis.csv</code></li>\n<li>uvvis.csv is the file got from tddft_lorentzian.py</li>\n<li>need import matplotlib, pandas, numpy, <code>module load anacond3_5.3</code> if not able to impor tthese modules</li>\n</ul>\n</li>\n<li><p><em>Descriptions</em></p>\n<p><img src=\"https://raw.githubusercontent.com/yueliu96/blog_images/master/tddftplot_eg.jpg\" alt=\"tddft plot\"></p>\n</li>\n</ul>\n<h3 id=\"3-cubegen-py\"><a href=\"#3-cubegen-py\" class=\"headerlink\" title=\"3.cubegen.py\"></a><jump id=\"vistd\"></jump><font size=\"3\">3.<a href=\"https://raw.githubusercontent.com/yueliu96/scripts_for_lab/master/cubegen.py\" target=\"_blank\" rel=\"noopener\">cubegen.py</a></font></h3><p>We can also visualize the molecular orbital if we have tddft chk file. We should first use <a href=\"http://gaussian.com/formchk/\" target=\"_blank\" rel=\"noopener\"><code>formchk</code></a> command to generate fchk file, and then use <a href=\"http://gaussian.com/cubegen/\" target=\"_blank\" rel=\"noopener\"><code>cubegen</code></a> to get the cube file, which can be visualized by Gaussian-View. To use cubegen, we also need to decide the molecular orbital number. For $\\alpha$ orbital, like 68A, just set mo=68. But for $\\beta$ orbital,like 72B, we should find the total number of $\\alpha$ orbitals first: if one molecule has 70 $\\alpha$ electrons(NAE) and 356 virtual $\\alpha$ orbitals(NVA), set mo=498(70+356+72). </p>\n<p>If we run cubegen on the login node, it will take around 1 minutes. Usually we are interested in several orbitals in one or more excited states. In this way, this script comes out. </p>\n<ul>\n<li><em>Usage</em><ul>\n<li><code>python cubegen.py td_log num_excited_states</code></li>\n</ul>\n</li>\n<li><em>Descriptions</em><ul>\n<li>Finds the name of chk/fchk file from log file. After fchk found, skip to next step; if not, start to locate chk file and generate fchk from chk. If both of them not found, stop processing. </li>\n<li>Finds NAE, NVA and unique molecule orbitals in the specified excited state. And writes corresponding cubegen to a txt file.</li>\n<li>Loads parallel environment and cats tasklists( the txt file) to the sbatch file.</li>\n<li>Submits it to ckpt partition. It should be finished in several seconds</li>\n</ul>\n</li>\n<li><p><em>Example</em></p>\n<p> The transition of the first excited state is listed above. If its log is test.log, NAE+NVA=426. Run <code>python cubegen.py test.log 1</code>, we will get 2 files: t1_test.txt and t1_test.sh, and it will submit t1_test.sh to ckpt queue.</p>\n<p>  <em>t1_test.txt</em>:</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cubegen 0 mo=488 test.fchk test_62B.cube 0 h</span><br><span class=\"line\">cubegen 0 mo=489 test.fchk test_63B.cube 0 h</span><br><span class=\"line\">cubegen 0 mo=493 test.fchk test_67B.cube 0 h</span><br><span class=\"line\">cubegen 0 mo=494 test.fchk test_68B.cube 0 h</span><br><span class=\"line\">cubegen 0 mo=496 test.fchk test_70B.cube 0 h</span><br><span class=\"line\">cubegen 0 mo=498 test.fchk test_72B.cube 0 h</span><br></pre></td></tr></table></figure>\n<p>  <em>t1_test.sh</em>:</p>\n   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --job-name=fchk_cube</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --nodes=1</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --ntasks-per-node=28</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --time=10:00</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --mem=100G</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --workdir=/gscratch/stf/yueliu96/test</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --partition=ckpt</span></span><br><span class=\"line\"><span class=\"comment\">#SBATCH --account=stf-ckpt</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'This job will run on'</span> <span class=\"variable\">$SLURM_JOB_NODELIST</span></span><br><span class=\"line\"><span class=\"comment\">#set up time</span></span><br><span class=\"line\">start=$(date +%s)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#load Gaussian environment</span></span><br><span class=\"line\">module load contrib/g16.b01</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#use checkpoint file to generte formatted one</span></span><br><span class=\"line\">formchk test.chk</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#load parallel environment</span></span><br><span class=\"line\">module load parallel-20170722</span><br><span class=\"line\">cat t1_test_opt.txt | parallel -j 28</span><br><span class=\"line\"></span><br><span class=\"line\">end=$(date +%s)</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'Elapsed Time: '</span>$((<span class=\"variable\">$end</span>-<span class=\"variable\">$start</span>))<span class=\"string\">'s'</span></span><br></pre></td></tr></table></figure>\n<p>  After finish, we can get 6 cube files. Transfer them from hyak to your local work directory. We need to use <em>GaussView</em> to see how the orbital looks like:</p>\n<ul>\n<li>open test.fchk with <em>GaussView</em></li>\n<li>click <code>Result</code>$\\rightarrow$<code>Surfaces/Contours</code>$\\rightarrow$<code>Cube Actions</code>$\\rightarrow$<code>Load Cube</code>$\\rightarrow$choose one of  your cube files$\\rightarrow$highlight that cube$\\rightarrow$<code>Surfacec Actions</code>$\\rightarrow$<code>New Surface</code></li>\n</ul>\n</li>\n</ul>\n"},{"title":"OligoNucleotide Papers","date":"2019-01-02T23:30:51.000Z","_content":"\n ***Keyword***\n  \n adenine |  cation radical |  cytosine | electron attachment | guanine | nucleotide | proton transfer | spectra | thymine |\n\n# [UV–Vis Action Spectroscopy Reveals a Conformational Collapse in Hydrogen-Rich Dinucleotide Cation Radicals](https://pubs.acs.org/doi/abs/10.1021/acs.jpclett.7b01856)\n\n- Why\n  - DNA cation radicals are intermediates during the interaction of DNA with high energy particles\n  - electron defect initially located in a nucleobase, migrates along the DNA backbone to reside on guanine\n  - DNA behavior at atomic-level needed\n- Goal\n  - proton and electron transfer along a single strand in DNA and related cation radicals\n  - use deoxyriboadenosine dinucleotide (dAA) and riboadenosine chimeras (pseudo-dAA)\n- Intro\n  - dication$\\rightarrow$catrad: conformation collapse\n  - dAA\n    - intra proton migrations btw nucleobases\n  - pseudo-dAA-catrad\n    - zwitterionic structures\n    - Coulomb stablization\n\nthe first time Turecek found combining UVPD with TDDFT can identify and distinguish isomeric peptide cation-radicals by ETD in [here](https://onlinelibrary.wiley.com/doi/full/10.1002/jms.3717)\n  \n## 1. Gaseous Protonated A\n\n- N-1, N-3, N- 7, N-9, and NH2 (N-10) positions: potential protonation sites\n- dA: N-3\n  - H bond stablization\n- dAA: N-1, N-1''\n- psedo-dAA: N-3, N-3''\n  - H bond stablization\n\n## 2. Form Cation Radicals\n\n- ETD dAA+2$H^+$: $[M-H]^+(m/z\\ 565)$, $[M-H-A]^{+\\cdot}(m/z\\ 431)$, $w^+(m/z\\  332)$\n- M+CE/DBCE$\\rightarrow$ESI$\\rightarrow$ETD: $M^{+\\cdot}$\n- CE favors N-1 position\n\n## 3. UV-Vis Action Spectrum \n\n- vis: broad band at 465nm; uv: 340nm, 260nm \n- channel: $w^+(m/z\\ 332)$, $[w+H]^{+\\cdot}(m/z\\ 333)$, $[M-H-A]^{+\\cdot}(m/z\\ 431)$\n- 260nm is same with [pccp_adenine1](#ap1) and [pccp_adenine2](#ap2)\n\n## 4. Dinucleotide Cation Radical Structures\n\n- if exothermic, isomerization driven by proton migrations will occur sponstaneously and driven by exotherimic energy provided by the electron attachment reaction. \n- electron not attach N-1\n- hydrogen migration might face substantial energy barrier. [[A+H1](#l1) | [A+H2](#l2)]\n- proton transfer (move radical position)$\\rightarrow$optimize$\\rightarrow$ more stable structures\n- theoritical uvvis spectra and molecular orbital analysis $\\rightarrow$ possible tautomers & spectra contributions $\\pi_z \\rightarrow \\pi_z^*$\n\n## 5. Adenine Ribonucleotide Chimeras\n\n- uv-vis analysis: similiar band position to dAA \n- aromatic diesters\n  - opt: zwitterionic dication-anion radicals $\\longleftrightarrow$ folded structure (exothermic conformation collapse)\n  - Coulomb stablization of zwitterionic structures is analogous to the solvent effects governing DNA ionization ([DNAion1](#ion1) | [DNAion2](#ion2))\n- cyclohexane diester: \n  - adenine cation and radical moieties are located on the opposite sides of the cyclohexane ring \n  - attractive ion−dipole and ion-induced dipole interactions\n\n# [Hydrogen-Rich Cation Radicals of DNA Dinucleotides: Generation and Structure Elucidation by UV–Vis Action Spectroscopy](https://pubs.acs.org/doi/abs/10.1021/acs.jpcb.8b07925)\n\n- Why\n  - DNA ionization causes chemical changes leading to complex process of DNA damage; intermediates: DNA cation radicals\n  - the intrinsic electronic properties of the reactive cation radical intermediates just are elucidated recently\n  - without solvent and counterions, gas-phase studies can focus on the intrinsic electronic and chemical properties of the radical species ([ref](#ref))\n- Goal\n  - purine and pyrimidine nucleobases in dinucleotide cation radicals exhibit different properties: \n    - nucleobase stacking\n    - hydrogen bonds\n    - propensity for undergoing intramolecular proton transfer\n- Intro\n  - cation radical\n    - $(dGG+2H)^{+\\cdot}$: conform collapse, 3'-G C-8-H radical\n    - $(dCG+2H)^{+\\cdot}$: collapse, a mixture of 5'-C and 3'-G radicals\n    - $(dGC+2H)^{+\\cdot}$: retain structure, a 3'-C radical\n  -  basicity ($pK_a$) in water $\\Leftrightarrow$ ability of proton-transfer reactions in solution\n     -  $(G+H)^\\cdot$: 20.0\n     -  $(C+H)^\\cdot$: 4.6\n  \n## 1. Dinucleotide Cation Radical Generation\n\n- larger oligos form stable cation radicals\n- smaller one needs DBCE\n\n## 2. Dinucleotide Cation Radical Collision-Induced Dis- sociation and Photodissociation Spectra\n\n- CID of cation radicals\n  - $(dGG+2H)^{+\\cdot}$: $[M-G]^{+\\cdot}$, $[M-G-H]^{+}$, $[d_1/w_1]^+$, $[d_1/w_1+H]^{+\\cdot}$\n  - $(dGC+2H)^{+\\cdot}$: $[M-H_2O]^{+\\cdot}$, $[M-C]^{+\\cdot}$, $[M-G-H]^{+}$, $d^+$, $[w+2H]^+$, $[z_1+H]^{+\\cdot}$\n  - $(dCG+2H)^{+\\cdot}$: $[M-H_2O]^{+\\cdot}$, $[M-C-H]^{+}$, $[M-C]^{+\\cdot}$, $w_1^+$\n- how nucleobase nature and position affect\n  - C at 3'-end $\\rightarrow$ elimination of water\n  - C at 5'-end $\\rightarrow$ lost as $[C+H]^\\cdot$\n  - loss of C > loss of G\n  - 5'-C suppresses 3'-G loss\n- UVPD similiar to CID\n- close shell systems have similiar absorption $\\rightarrow$ not only associated with radical moieties\n  \n## 3. $[dGG+2H]^{+\\cdot}$ Action Spectroscopy and Ion Structures\n\n- action spectra: 450-470nm, 330, 310 and 270nm\n- structure:\n  - H positon\n    - most basic: N-7\n    - 2nd basic: 6-OH−N-3−H\n  - CE at 5'-terminal stable than that at 3'\n  - H transfer\n    - exthothermic \n    - cation and radical at 5'-G most stable\n    - cation at 3'-G, radical at 5'-G relatively stable and match spectra\n- 450-460nm: SOMO, 156$\\alpha (\\pi)\\rightarrow$ combined $\\pi^*$ at 3'-G radical\n- $(G+H)^\\cdot$ estimates thermal shift and broadening\n- 215kJ/mol ($\\lambda$<550nm) enough to drive dissociation\n\n## 4. $[dCG+2H]^{+\\cdot}$ Action Spectroscopy and Ion Structures\n\n- action spectra: weak 450-480nm, strong 350 and 280nm\n- structure:\n  - cytosine: O-2 and N-3 basic positions\n  - CE at 5'-C ring and 3'-G ring\n  - H posiitons: dC3G7\n  - H transfer\n    - transition state high, but exthothermic finally (kinetic hampered)\n    - major: radical at C; minor at G\n    - RRKM calculation: 310kJ/mol internal energy needed for conversion\n    - $E_{int}=E_{thermal}+E_{exc}$, where $E_{exc}$ is part (calculated by heat capacity) of exthothermic reaction energy \n- dissociation of C or (C+H)$^\\cdot$ are less endothermic than G or (G+H)$^\\cdot$\n\n## 5. $[dGC+2H]^{+\\cdot}$ Action Spectroscopy and Ion Structures\n\n- action spectra: extremely weak broad 620nm, 420-500nm and 360nm, strong 285nm\n- structure\n  - CE at 3'-C ring\n  - radical at C\n  - proton transfer exthothermic but not fit spectra \n  \n## 6. Discussion\n\n- site of electron attachment to the dications depends on\n  - nucleobase nature\n     C>G: $RE_{adiab}(C)$=5.17eV; $RE_{adiab}(G)$=4.46eV\n  - nucleobase position\n    dGG: 5'-G>3'-G\n- ring stacking and proton transfer\n  - dGG: nucleobase stacking, faciles proton transfer\n  - dGC and dCG: nucleobases perpenticular, kinetically hampered\n- $(G+H)^{+} (aq,pK_a=3.3)+(G+H)^\\cdot (aq) \\overset{\\Delta G=-95 kJ/mol}{\\longrightarrow} G(aq)+(G+2H)^{+\\cdot}(aq,pK_a\\approx20.0)$\n- $(C+H)^{+} (aq,pK_a=4.6)+(C+H)^\\cdot(aq) \\overset{\\Delta G=-0.1 kJ/mol}{\\rightleftharpoons} C(aq)+(C+2H)^{+\\cdot}(aq,pK_a\\approx4.6)$\n\n# [Watson-Crick Base Pair Radical Cation as a Model for Oxidative Damage in DNA](https://pubs.acs.org/doi/10.1021/acs.jpclett.7b01251)\n\n## Background\n- mechanisms of DNA damage poorly understood\n  - oxidation $\\rightarrow$ deprotonation at G $\\rightarrow$ H abstraction from sugar $\\rightarrow$ DNA strand breaks $\\rightarrow$ mutagenesis and cancer\n  - probing initially formed radical cation challengeing\n- proton-coupled electron and hole transfer is an important\nfeature in radiation damage process\n\n## Notes\n- gas-phase acidity data may be more appropriate to characterize the equilibrium position of the proton in oxidized GC base pairs ([ref](#gasbetter))\n- Guanine\n  1. the lowest ionization energy among GATC, both in solution and gas $\\Rightarrow$\n  2. electron loss during ionization of DNA mostly occurs from G $\\rightarrow$\n  3. G radical cations enhances acidities than G $\\Rightarrow$ \n  - dG$^{+\\cdot}$-dC pair: H transfer from G to C (G3$\\rightarrow$C3) $\\Rightarrow$ relocation of radical site to sugar\n- homolytic bond dissociation enthaloy of 401kJ/mol for [dG+H(N$_7$)]$^+$ is comparable to that for a typical C-H bond $\\Rightarrow$ other radicals via intra- or intermolecular H-abstraction reactions\n- CID\n  1. $[dGdC]^{+\\cdot}-CH_2O$: occurs on the sugar of G\n  2. further loss $C_2H_3O_2$\n  3. $[dGdC]^{+\\cdot}-C_5H_8O_3$ not nucleobase specific\n\n# <jump id=\"ap1\">[The Electronic Spectrum of Protonated Adenine: Theory and Experiment](https://pubs.rsc.org/en/content/articlelanding/2005/cp/b507422c/unauth#!divAbstract)</jump>\n\n## Background\n\n- high photostability of DNA is essential for life on earth\n- advantage of gas phase experiment\n  - spectra of protonated species in solution is principally complicated, because:\n    - solvation shifts and inhomogeneous broadening\n    - charged and neutral species coexist $\\rightarrow$ superposition of spectra\n    - in plolar protic solvents proton exchange fast, causing lifetime broadening\n  - mass selection before spectra\n- 1951 crystallographic evidence: 9H-A prefers protonated at N-1\n- in tA-T Watson-Crick base pair, the N1 atome of A acts as a H-bond acceptor\n\n## Note\n\n- 实验方法： 中性和酸性腺嘌呤的实验谱图与计算的跃迁对比，观察红移或蓝移的情况归属峰的性质,计算激发态构型判断峰的形状\n- UV-Vis: 205nm, 260nm both neutral and protonated A\n- $S_0-S_1$ photofragment spectrum pf A+H: the lowest $\\pi\\pi^*$ transtion\n  - loss of $NH_3$ ager absorption of one UV photon\n- tautomer:\n  - 9H-A-N1H most stable > 7H-A-N3H >> 9H-A-N3H\n  - neutral ddenine 7H-A large dipole moment than 9H-A\n- vertical absorption spectra\n  - neutral 9H-A\n    - 4.91eV/252nm: 1st $\\pi\\pi^*$ excitaion, medium $HOMO\\rightarrow LUMO+1$ and $HOMO-1\\rightarrow LUMO$, not HOMO to LUMO\n    - 5.02eV/247nm: weak 1st $n\\pi^*$\n    - 5.09eV/244nm: 2nd $\\pi\\pi^*\\ (HOMO\\rightarrow LUMO)$\n    - 5.35eV/232nm: $HOMO\\rightarrow Rydberg\\ orbital$\n  - protonated 1H-9H-A\n    - 4.83eV/257nm: 1st $\\pi\\pi^*\\ (HOMO\\rightarrow LUMO)$\n    - 5.15eV/241nm: 2nd $\\pi\\pi^*\\ (HOMO\\rightarrow LUMO+1)$\n    - 5.23eV/234nm: weak 1st $n\\pi^*$\n\n# <jump id='ap2'>[Gas-phase spectroscopy of protonated adenine, adenosine 5′-monophosphate and monohydrated ions](https://pubs.rsc.org/en/content/articlelanding/2013/cp/c3cp53742k/unauth#!divAbstract)</jump>\n\n- the action spectra of $AMPH^+$, $AH+$, $AH^+(H_2O)$ similiar indicates\n  - the same protonation site, mostly N-1\n  - the lowest-energy trnsitions are independent of surrondings\n- Action Spectra: broad band between 230 and 290nm and 210nm\n  - 250,270nm: $\\pi\\pi^*$\n  - 230nm: $n\\pi^*$\n\n# <jump id='l1'>[Distonic Isomers and Tautomers of Adenine Cation Radical in the Gas Phase and Aqueous Solution](https://pubs.acs.org/doi/10.1021/jp046575q)</jump>\n\n## Background\n\n- Distonic/ylid ions\n  - nonclassical open-shell species in which the charge and radical sites reside on separate atoms\n  - often more stable than isomeric canonical cation-radical structures\n- DNA damage mechanism: direct ionization produce cation radicals and electron capture leading to anion radicals\n\n  \n## Note\n\n- protonation of gas phase under CI depends on PA\n\n![PA_A](https://raw.githubusercontent.com/yueliu96/blog_images/master/Screen%20Shot%202019-01-12%20at%2016.22.32.png)\n\n- $pK_a$ of N-9, N-10, C-2 and C-8: 3.2, 3.3, 6.2 and 11.9\n- CAD of $AH^+$: M-H; M-NH3 (H transfer from $N_1,\\ N_3\\ or\\ N_7$ on amino group); ring cleavage M-HCN, consecutive -$CH2N2$\n- DFT calcualtion\n  - amino group shows less pyramidization\n  - removing an electron from orbitals that has nodal surfaces decreases the $\\pi$-antibonding interaction resulting in shortening bonds\n  - polar solvents are known to affect the realtive stabilites of nucleobase tautomers greatly\n- Calcualtion result\n  - elimination of $NH_3$ is the lowest-energy channel that requires $\\Delta H_{rxn,0}=371kJ\\ mole^{-1}$\n  - loss of a H is also endothermic\n  - a small activation energy for the addition of H to C-2 position\n  - H attached to N-10 is exothermic, $\\Delta G=383kJ mol^{-1}$, which is sufficient to drive exothermic hydrogen transfer from ... to it\n    - methyl group in T\n    - SH group in C\n    - OH in Tyr\n    - $C_{\\alpha}$ methines of the peptide backbone\n\n# <jump id='l2'>[Adenine Radicals in the Gas Phase. An Experimental and Computational Study of Hydrogen Atom Adducts to Adenine](https://pubs.acs.org/doi/abs/10.1021/jp0529725)</jump>\n\n![dna damage scheme](https://raw.githubusercontent.com/yueliu96/blog_images/master/Screen%20Shot%202019-01-13%20at%2012.36.45.png)\n-  the elusive hydrogen atom adduct to the N-1 position in A, which is thought to be the initial intermediate of chemical damage\n   -  N-1 is 48-130 times more basic than N-3\n-  C-8 adduct is the most stable tautuomer, which is predicted to be the prdominating product at thermal equilibrium in solution at 298K\n-  proton transfer from $H_3O^+ or\\ NH_4^+$ to Ade is exthothermic\n\n# [Dependence of Spurious Charge- Transfer Excited States on Orbital Exchange in TDDFT: Large Molecules and Clusters](https://pubs.acs.org/doi/10.1021/ct600282k)\n\n- intensity of CT ransitions is likely to be exaggerated by TDDFT calcualtions\n- Density functional theory formally permits the expression of the total ground-state energy and other properties of a quantum many-body systme as functionals of the electron density alone and provides a formally exact scheme for solving the many-body problem\n- TDDFT is an extension of DFT in which many-body excitations are associated with the poles of the exact density response\n- 6-31G basis sets: an efficient blend of accuracy and manageablw size for large confugated molecules\n  - 6-31G*: with polarization functions\n  - 6-31+G: with diffuse functions\n- Charge transfer states\n  - photexcited electron and hole are significant spatial separation\n  - usually higher in energy than the relevant Frenkel-exciton band of optical (nonvanishing oscillator-strength) and dark (vanishing oscillater-strength) states\n  - however, DFT methods drastically underesetimate their energies $\\rightarrow$ all 3 types of states in dimers might be mixed\n\n# <jump id='ion1'>[Electron Detachment Energies and Isomerism in Purinic Deoxyribonucleotides](https://onlinelibrary.wiley.com/doi/abs/10.1002/qua.21330)</jump>\n\n# <jump id='ion2'>[Ab Initio Electron Propagator Methods: Applications to Nucleic Acids Fragments and Metallophthalocyanines.](https://onlinelibrary.wiley.com/doi/abs/10.1002/qua.22836)</jump>\n\n# [Ion/Ion Reactions: New Chemistry for Analytical MS](https://pubs.acs.org/doi/abs/10.1021/ac9014935)\n\n# [One-Electron Oxidation of DNA Oligomers That Lack Guanine:  Reaction and Strand Cleavage at Remote Thymines by Long-Distance Radical Cation Hopping](https://pubs.acs.org/doi/abs/10.1021/ja058758b)\n\n# <jump id=\"ref\">[Transient Intermediates of Chemical Reactions by Neutralization—Reionization Mass Spectrometry](https://link.springer.com/chapter/10.1007/3-540-36113-8_3)</jump>\n\n# [What Hinders Electron Transfer Dissociation (ETD) of DNA Cations?](https://link.springer.com/article/10.1007%2Fs13361-017-1791-z)\n\n# [Proton and hydrogen atom adducts to cytosine. An experimental and computational study](https://www.sciencedirect.com/science/article/pii/S1387380607000279)\n\n# [Toward True DNA Base-Stacking Energies: MP2, CCSD(T), and Complete Basis Set Calculations](https://pubs.acs.org/doi/10.1021/ja026759n)\n\n# [Purine bases, nucleosides, and nucleotides: aqueous solution redox chemistry and transformation reactions of their radical cations and e- and OH adducts](https://pubs.acs.org/doi/10.1021/cr00093a003)\n\n# [Proton-coupled Electron Transfer in DNA on Formation of Radiation-produced Ion Radicals](http://pubs.acs.org/doi/abs/10.1021/cr100023g)\n\n# [Induction of Strand Breaks in Single-stranded Polyribonucleotides and DNA by Photoionization: One Electron Oxidized Nucleobase Radicals as Precursors](https://pubs.acs.org/doi/abs/10.1021/ja961722m)\n\n# [How Easily Oxidizable is DNA? One-electron Reduction Potentials of Adenosine and Guanosine Radicals in Aqueous Solution](https://pubs.acs.org/doi/10.1021/ja962255b)\n\n# <jump id='gasbetter'>[Structure and Acid-base Properties of One-electron-oxidized Deoxyguanosine, Guanosine, and 1-Methylguanosine](https://pubs.acs.org/doi/10.1021/ja00185a046)</jump>","source":"_posts/OligoNucleotide-Papers.md","raw":"---\ntitle: OligoNucleotide Papers\ndate: 2019-01-02 15:30:51\ntags:\n- oligo\ncategories:\n- OligoReading\n---\n\n ***Keyword***\n  \n adenine |  cation radical |  cytosine | electron attachment | guanine | nucleotide | proton transfer | spectra | thymine |\n\n# [UV–Vis Action Spectroscopy Reveals a Conformational Collapse in Hydrogen-Rich Dinucleotide Cation Radicals](https://pubs.acs.org/doi/abs/10.1021/acs.jpclett.7b01856)\n\n- Why\n  - DNA cation radicals are intermediates during the interaction of DNA with high energy particles\n  - electron defect initially located in a nucleobase, migrates along the DNA backbone to reside on guanine\n  - DNA behavior at atomic-level needed\n- Goal\n  - proton and electron transfer along a single strand in DNA and related cation radicals\n  - use deoxyriboadenosine dinucleotide (dAA) and riboadenosine chimeras (pseudo-dAA)\n- Intro\n  - dication$\\rightarrow$catrad: conformation collapse\n  - dAA\n    - intra proton migrations btw nucleobases\n  - pseudo-dAA-catrad\n    - zwitterionic structures\n    - Coulomb stablization\n\nthe first time Turecek found combining UVPD with TDDFT can identify and distinguish isomeric peptide cation-radicals by ETD in [here](https://onlinelibrary.wiley.com/doi/full/10.1002/jms.3717)\n  \n## 1. Gaseous Protonated A\n\n- N-1, N-3, N- 7, N-9, and NH2 (N-10) positions: potential protonation sites\n- dA: N-3\n  - H bond stablization\n- dAA: N-1, N-1''\n- psedo-dAA: N-3, N-3''\n  - H bond stablization\n\n## 2. Form Cation Radicals\n\n- ETD dAA+2$H^+$: $[M-H]^+(m/z\\ 565)$, $[M-H-A]^{+\\cdot}(m/z\\ 431)$, $w^+(m/z\\  332)$\n- M+CE/DBCE$\\rightarrow$ESI$\\rightarrow$ETD: $M^{+\\cdot}$\n- CE favors N-1 position\n\n## 3. UV-Vis Action Spectrum \n\n- vis: broad band at 465nm; uv: 340nm, 260nm \n- channel: $w^+(m/z\\ 332)$, $[w+H]^{+\\cdot}(m/z\\ 333)$, $[M-H-A]^{+\\cdot}(m/z\\ 431)$\n- 260nm is same with [pccp_adenine1](#ap1) and [pccp_adenine2](#ap2)\n\n## 4. Dinucleotide Cation Radical Structures\n\n- if exothermic, isomerization driven by proton migrations will occur sponstaneously and driven by exotherimic energy provided by the electron attachment reaction. \n- electron not attach N-1\n- hydrogen migration might face substantial energy barrier. [[A+H1](#l1) | [A+H2](#l2)]\n- proton transfer (move radical position)$\\rightarrow$optimize$\\rightarrow$ more stable structures\n- theoritical uvvis spectra and molecular orbital analysis $\\rightarrow$ possible tautomers & spectra contributions $\\pi_z \\rightarrow \\pi_z^*$\n\n## 5. Adenine Ribonucleotide Chimeras\n\n- uv-vis analysis: similiar band position to dAA \n- aromatic diesters\n  - opt: zwitterionic dication-anion radicals $\\longleftrightarrow$ folded structure (exothermic conformation collapse)\n  - Coulomb stablization of zwitterionic structures is analogous to the solvent effects governing DNA ionization ([DNAion1](#ion1) | [DNAion2](#ion2))\n- cyclohexane diester: \n  - adenine cation and radical moieties are located on the opposite sides of the cyclohexane ring \n  - attractive ion−dipole and ion-induced dipole interactions\n\n# [Hydrogen-Rich Cation Radicals of DNA Dinucleotides: Generation and Structure Elucidation by UV–Vis Action Spectroscopy](https://pubs.acs.org/doi/abs/10.1021/acs.jpcb.8b07925)\n\n- Why\n  - DNA ionization causes chemical changes leading to complex process of DNA damage; intermediates: DNA cation radicals\n  - the intrinsic electronic properties of the reactive cation radical intermediates just are elucidated recently\n  - without solvent and counterions, gas-phase studies can focus on the intrinsic electronic and chemical properties of the radical species ([ref](#ref))\n- Goal\n  - purine and pyrimidine nucleobases in dinucleotide cation radicals exhibit different properties: \n    - nucleobase stacking\n    - hydrogen bonds\n    - propensity for undergoing intramolecular proton transfer\n- Intro\n  - cation radical\n    - $(dGG+2H)^{+\\cdot}$: conform collapse, 3'-G C-8-H radical\n    - $(dCG+2H)^{+\\cdot}$: collapse, a mixture of 5'-C and 3'-G radicals\n    - $(dGC+2H)^{+\\cdot}$: retain structure, a 3'-C radical\n  -  basicity ($pK_a$) in water $\\Leftrightarrow$ ability of proton-transfer reactions in solution\n     -  $(G+H)^\\cdot$: 20.0\n     -  $(C+H)^\\cdot$: 4.6\n  \n## 1. Dinucleotide Cation Radical Generation\n\n- larger oligos form stable cation radicals\n- smaller one needs DBCE\n\n## 2. Dinucleotide Cation Radical Collision-Induced Dis- sociation and Photodissociation Spectra\n\n- CID of cation radicals\n  - $(dGG+2H)^{+\\cdot}$: $[M-G]^{+\\cdot}$, $[M-G-H]^{+}$, $[d_1/w_1]^+$, $[d_1/w_1+H]^{+\\cdot}$\n  - $(dGC+2H)^{+\\cdot}$: $[M-H_2O]^{+\\cdot}$, $[M-C]^{+\\cdot}$, $[M-G-H]^{+}$, $d^+$, $[w+2H]^+$, $[z_1+H]^{+\\cdot}$\n  - $(dCG+2H)^{+\\cdot}$: $[M-H_2O]^{+\\cdot}$, $[M-C-H]^{+}$, $[M-C]^{+\\cdot}$, $w_1^+$\n- how nucleobase nature and position affect\n  - C at 3'-end $\\rightarrow$ elimination of water\n  - C at 5'-end $\\rightarrow$ lost as $[C+H]^\\cdot$\n  - loss of C > loss of G\n  - 5'-C suppresses 3'-G loss\n- UVPD similiar to CID\n- close shell systems have similiar absorption $\\rightarrow$ not only associated with radical moieties\n  \n## 3. $[dGG+2H]^{+\\cdot}$ Action Spectroscopy and Ion Structures\n\n- action spectra: 450-470nm, 330, 310 and 270nm\n- structure:\n  - H positon\n    - most basic: N-7\n    - 2nd basic: 6-OH−N-3−H\n  - CE at 5'-terminal stable than that at 3'\n  - H transfer\n    - exthothermic \n    - cation and radical at 5'-G most stable\n    - cation at 3'-G, radical at 5'-G relatively stable and match spectra\n- 450-460nm: SOMO, 156$\\alpha (\\pi)\\rightarrow$ combined $\\pi^*$ at 3'-G radical\n- $(G+H)^\\cdot$ estimates thermal shift and broadening\n- 215kJ/mol ($\\lambda$<550nm) enough to drive dissociation\n\n## 4. $[dCG+2H]^{+\\cdot}$ Action Spectroscopy and Ion Structures\n\n- action spectra: weak 450-480nm, strong 350 and 280nm\n- structure:\n  - cytosine: O-2 and N-3 basic positions\n  - CE at 5'-C ring and 3'-G ring\n  - H posiitons: dC3G7\n  - H transfer\n    - transition state high, but exthothermic finally (kinetic hampered)\n    - major: radical at C; minor at G\n    - RRKM calculation: 310kJ/mol internal energy needed for conversion\n    - $E_{int}=E_{thermal}+E_{exc}$, where $E_{exc}$ is part (calculated by heat capacity) of exthothermic reaction energy \n- dissociation of C or (C+H)$^\\cdot$ are less endothermic than G or (G+H)$^\\cdot$\n\n## 5. $[dGC+2H]^{+\\cdot}$ Action Spectroscopy and Ion Structures\n\n- action spectra: extremely weak broad 620nm, 420-500nm and 360nm, strong 285nm\n- structure\n  - CE at 3'-C ring\n  - radical at C\n  - proton transfer exthothermic but not fit spectra \n  \n## 6. Discussion\n\n- site of electron attachment to the dications depends on\n  - nucleobase nature\n     C>G: $RE_{adiab}(C)$=5.17eV; $RE_{adiab}(G)$=4.46eV\n  - nucleobase position\n    dGG: 5'-G>3'-G\n- ring stacking and proton transfer\n  - dGG: nucleobase stacking, faciles proton transfer\n  - dGC and dCG: nucleobases perpenticular, kinetically hampered\n- $(G+H)^{+} (aq,pK_a=3.3)+(G+H)^\\cdot (aq) \\overset{\\Delta G=-95 kJ/mol}{\\longrightarrow} G(aq)+(G+2H)^{+\\cdot}(aq,pK_a\\approx20.0)$\n- $(C+H)^{+} (aq,pK_a=4.6)+(C+H)^\\cdot(aq) \\overset{\\Delta G=-0.1 kJ/mol}{\\rightleftharpoons} C(aq)+(C+2H)^{+\\cdot}(aq,pK_a\\approx4.6)$\n\n# [Watson-Crick Base Pair Radical Cation as a Model for Oxidative Damage in DNA](https://pubs.acs.org/doi/10.1021/acs.jpclett.7b01251)\n\n## Background\n- mechanisms of DNA damage poorly understood\n  - oxidation $\\rightarrow$ deprotonation at G $\\rightarrow$ H abstraction from sugar $\\rightarrow$ DNA strand breaks $\\rightarrow$ mutagenesis and cancer\n  - probing initially formed radical cation challengeing\n- proton-coupled electron and hole transfer is an important\nfeature in radiation damage process\n\n## Notes\n- gas-phase acidity data may be more appropriate to characterize the equilibrium position of the proton in oxidized GC base pairs ([ref](#gasbetter))\n- Guanine\n  1. the lowest ionization energy among GATC, both in solution and gas $\\Rightarrow$\n  2. electron loss during ionization of DNA mostly occurs from G $\\rightarrow$\n  3. G radical cations enhances acidities than G $\\Rightarrow$ \n  - dG$^{+\\cdot}$-dC pair: H transfer from G to C (G3$\\rightarrow$C3) $\\Rightarrow$ relocation of radical site to sugar\n- homolytic bond dissociation enthaloy of 401kJ/mol for [dG+H(N$_7$)]$^+$ is comparable to that for a typical C-H bond $\\Rightarrow$ other radicals via intra- or intermolecular H-abstraction reactions\n- CID\n  1. $[dGdC]^{+\\cdot}-CH_2O$: occurs on the sugar of G\n  2. further loss $C_2H_3O_2$\n  3. $[dGdC]^{+\\cdot}-C_5H_8O_3$ not nucleobase specific\n\n# <jump id=\"ap1\">[The Electronic Spectrum of Protonated Adenine: Theory and Experiment](https://pubs.rsc.org/en/content/articlelanding/2005/cp/b507422c/unauth#!divAbstract)</jump>\n\n## Background\n\n- high photostability of DNA is essential for life on earth\n- advantage of gas phase experiment\n  - spectra of protonated species in solution is principally complicated, because:\n    - solvation shifts and inhomogeneous broadening\n    - charged and neutral species coexist $\\rightarrow$ superposition of spectra\n    - in plolar protic solvents proton exchange fast, causing lifetime broadening\n  - mass selection before spectra\n- 1951 crystallographic evidence: 9H-A prefers protonated at N-1\n- in tA-T Watson-Crick base pair, the N1 atome of A acts as a H-bond acceptor\n\n## Note\n\n- 实验方法： 中性和酸性腺嘌呤的实验谱图与计算的跃迁对比，观察红移或蓝移的情况归属峰的性质,计算激发态构型判断峰的形状\n- UV-Vis: 205nm, 260nm both neutral and protonated A\n- $S_0-S_1$ photofragment spectrum pf A+H: the lowest $\\pi\\pi^*$ transtion\n  - loss of $NH_3$ ager absorption of one UV photon\n- tautomer:\n  - 9H-A-N1H most stable > 7H-A-N3H >> 9H-A-N3H\n  - neutral ddenine 7H-A large dipole moment than 9H-A\n- vertical absorption spectra\n  - neutral 9H-A\n    - 4.91eV/252nm: 1st $\\pi\\pi^*$ excitaion, medium $HOMO\\rightarrow LUMO+1$ and $HOMO-1\\rightarrow LUMO$, not HOMO to LUMO\n    - 5.02eV/247nm: weak 1st $n\\pi^*$\n    - 5.09eV/244nm: 2nd $\\pi\\pi^*\\ (HOMO\\rightarrow LUMO)$\n    - 5.35eV/232nm: $HOMO\\rightarrow Rydberg\\ orbital$\n  - protonated 1H-9H-A\n    - 4.83eV/257nm: 1st $\\pi\\pi^*\\ (HOMO\\rightarrow LUMO)$\n    - 5.15eV/241nm: 2nd $\\pi\\pi^*\\ (HOMO\\rightarrow LUMO+1)$\n    - 5.23eV/234nm: weak 1st $n\\pi^*$\n\n# <jump id='ap2'>[Gas-phase spectroscopy of protonated adenine, adenosine 5′-monophosphate and monohydrated ions](https://pubs.rsc.org/en/content/articlelanding/2013/cp/c3cp53742k/unauth#!divAbstract)</jump>\n\n- the action spectra of $AMPH^+$, $AH+$, $AH^+(H_2O)$ similiar indicates\n  - the same protonation site, mostly N-1\n  - the lowest-energy trnsitions are independent of surrondings\n- Action Spectra: broad band between 230 and 290nm and 210nm\n  - 250,270nm: $\\pi\\pi^*$\n  - 230nm: $n\\pi^*$\n\n# <jump id='l1'>[Distonic Isomers and Tautomers of Adenine Cation Radical in the Gas Phase and Aqueous Solution](https://pubs.acs.org/doi/10.1021/jp046575q)</jump>\n\n## Background\n\n- Distonic/ylid ions\n  - nonclassical open-shell species in which the charge and radical sites reside on separate atoms\n  - often more stable than isomeric canonical cation-radical structures\n- DNA damage mechanism: direct ionization produce cation radicals and electron capture leading to anion radicals\n\n  \n## Note\n\n- protonation of gas phase under CI depends on PA\n\n![PA_A](https://raw.githubusercontent.com/yueliu96/blog_images/master/Screen%20Shot%202019-01-12%20at%2016.22.32.png)\n\n- $pK_a$ of N-9, N-10, C-2 and C-8: 3.2, 3.3, 6.2 and 11.9\n- CAD of $AH^+$: M-H; M-NH3 (H transfer from $N_1,\\ N_3\\ or\\ N_7$ on amino group); ring cleavage M-HCN, consecutive -$CH2N2$\n- DFT calcualtion\n  - amino group shows less pyramidization\n  - removing an electron from orbitals that has nodal surfaces decreases the $\\pi$-antibonding interaction resulting in shortening bonds\n  - polar solvents are known to affect the realtive stabilites of nucleobase tautomers greatly\n- Calcualtion result\n  - elimination of $NH_3$ is the lowest-energy channel that requires $\\Delta H_{rxn,0}=371kJ\\ mole^{-1}$\n  - loss of a H is also endothermic\n  - a small activation energy for the addition of H to C-2 position\n  - H attached to N-10 is exothermic, $\\Delta G=383kJ mol^{-1}$, which is sufficient to drive exothermic hydrogen transfer from ... to it\n    - methyl group in T\n    - SH group in C\n    - OH in Tyr\n    - $C_{\\alpha}$ methines of the peptide backbone\n\n# <jump id='l2'>[Adenine Radicals in the Gas Phase. An Experimental and Computational Study of Hydrogen Atom Adducts to Adenine](https://pubs.acs.org/doi/abs/10.1021/jp0529725)</jump>\n\n![dna damage scheme](https://raw.githubusercontent.com/yueliu96/blog_images/master/Screen%20Shot%202019-01-13%20at%2012.36.45.png)\n-  the elusive hydrogen atom adduct to the N-1 position in A, which is thought to be the initial intermediate of chemical damage\n   -  N-1 is 48-130 times more basic than N-3\n-  C-8 adduct is the most stable tautuomer, which is predicted to be the prdominating product at thermal equilibrium in solution at 298K\n-  proton transfer from $H_3O^+ or\\ NH_4^+$ to Ade is exthothermic\n\n# [Dependence of Spurious Charge- Transfer Excited States on Orbital Exchange in TDDFT: Large Molecules and Clusters](https://pubs.acs.org/doi/10.1021/ct600282k)\n\n- intensity of CT ransitions is likely to be exaggerated by TDDFT calcualtions\n- Density functional theory formally permits the expression of the total ground-state energy and other properties of a quantum many-body systme as functionals of the electron density alone and provides a formally exact scheme for solving the many-body problem\n- TDDFT is an extension of DFT in which many-body excitations are associated with the poles of the exact density response\n- 6-31G basis sets: an efficient blend of accuracy and manageablw size for large confugated molecules\n  - 6-31G*: with polarization functions\n  - 6-31+G: with diffuse functions\n- Charge transfer states\n  - photexcited electron and hole are significant spatial separation\n  - usually higher in energy than the relevant Frenkel-exciton band of optical (nonvanishing oscillator-strength) and dark (vanishing oscillater-strength) states\n  - however, DFT methods drastically underesetimate their energies $\\rightarrow$ all 3 types of states in dimers might be mixed\n\n# <jump id='ion1'>[Electron Detachment Energies and Isomerism in Purinic Deoxyribonucleotides](https://onlinelibrary.wiley.com/doi/abs/10.1002/qua.21330)</jump>\n\n# <jump id='ion2'>[Ab Initio Electron Propagator Methods: Applications to Nucleic Acids Fragments and Metallophthalocyanines.](https://onlinelibrary.wiley.com/doi/abs/10.1002/qua.22836)</jump>\n\n# [Ion/Ion Reactions: New Chemistry for Analytical MS](https://pubs.acs.org/doi/abs/10.1021/ac9014935)\n\n# [One-Electron Oxidation of DNA Oligomers That Lack Guanine:  Reaction and Strand Cleavage at Remote Thymines by Long-Distance Radical Cation Hopping](https://pubs.acs.org/doi/abs/10.1021/ja058758b)\n\n# <jump id=\"ref\">[Transient Intermediates of Chemical Reactions by Neutralization—Reionization Mass Spectrometry](https://link.springer.com/chapter/10.1007/3-540-36113-8_3)</jump>\n\n# [What Hinders Electron Transfer Dissociation (ETD) of DNA Cations?](https://link.springer.com/article/10.1007%2Fs13361-017-1791-z)\n\n# [Proton and hydrogen atom adducts to cytosine. An experimental and computational study](https://www.sciencedirect.com/science/article/pii/S1387380607000279)\n\n# [Toward True DNA Base-Stacking Energies: MP2, CCSD(T), and Complete Basis Set Calculations](https://pubs.acs.org/doi/10.1021/ja026759n)\n\n# [Purine bases, nucleosides, and nucleotides: aqueous solution redox chemistry and transformation reactions of their radical cations and e- and OH adducts](https://pubs.acs.org/doi/10.1021/cr00093a003)\n\n# [Proton-coupled Electron Transfer in DNA on Formation of Radiation-produced Ion Radicals](http://pubs.acs.org/doi/abs/10.1021/cr100023g)\n\n# [Induction of Strand Breaks in Single-stranded Polyribonucleotides and DNA by Photoionization: One Electron Oxidized Nucleobase Radicals as Precursors](https://pubs.acs.org/doi/abs/10.1021/ja961722m)\n\n# [How Easily Oxidizable is DNA? One-electron Reduction Potentials of Adenosine and Guanosine Radicals in Aqueous Solution](https://pubs.acs.org/doi/10.1021/ja962255b)\n\n# <jump id='gasbetter'>[Structure and Acid-base Properties of One-electron-oxidized Deoxyguanosine, Guanosine, and 1-Methylguanosine](https://pubs.acs.org/doi/10.1021/ja00185a046)</jump>","slug":"OligoNucleotide-Papers","published":1,"updated":"2019-01-15T07:21:16.045Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrcn2vtg0012ua5sd5rc6rqv","content":"<p> <strong><em>Keyword</em></strong></p>\n<p> adenine |  cation radical |  cytosine | electron attachment | guanine | nucleotide | proton transfer | spectra | thymine |</p>\n<h1 id=\"UV–Vis-Action-Spectroscopy-Reveals-a-Conformational-Collapse-in-Hydrogen-Rich-Dinucleotide-Cation-Radicals\"><a href=\"#UV–Vis-Action-Spectroscopy-Reveals-a-Conformational-Collapse-in-Hydrogen-Rich-Dinucleotide-Cation-Radicals\" class=\"headerlink\" title=\"UV–Vis Action Spectroscopy Reveals a Conformational Collapse in Hydrogen-Rich Dinucleotide Cation Radicals\"></a><a href=\"https://pubs.acs.org/doi/abs/10.1021/acs.jpclett.7b01856\" target=\"_blank\" rel=\"noopener\">UV–Vis Action Spectroscopy Reveals a Conformational Collapse in Hydrogen-Rich Dinucleotide Cation Radicals</a></h1><ul>\n<li>Why<ul>\n<li>DNA cation radicals are intermediates during the interaction of DNA with high energy particles</li>\n<li>electron defect initially located in a nucleobase, migrates along the DNA backbone to reside on guanine</li>\n<li>DNA behavior at atomic-level needed</li>\n</ul>\n</li>\n<li>Goal<ul>\n<li>proton and electron transfer along a single strand in DNA and related cation radicals</li>\n<li>use deoxyriboadenosine dinucleotide (dAA) and riboadenosine chimeras (pseudo-dAA)</li>\n</ul>\n</li>\n<li>Intro<ul>\n<li>dication$\\rightarrow$catrad: conformation collapse</li>\n<li>dAA<ul>\n<li>intra proton migrations btw nucleobases</li>\n</ul>\n</li>\n<li>pseudo-dAA-catrad<ul>\n<li>zwitterionic structures</li>\n<li>Coulomb stablization</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>the first time Turecek found combining UVPD with TDDFT can identify and distinguish isomeric peptide cation-radicals by ETD in <a href=\"https://onlinelibrary.wiley.com/doi/full/10.1002/jms.3717\" target=\"_blank\" rel=\"noopener\">here</a></p>\n<h2 id=\"1-Gaseous-Protonated-A\"><a href=\"#1-Gaseous-Protonated-A\" class=\"headerlink\" title=\"1. Gaseous Protonated A\"></a>1. Gaseous Protonated A</h2><ul>\n<li>N-1, N-3, N- 7, N-9, and NH2 (N-10) positions: potential protonation sites</li>\n<li>dA: N-3<ul>\n<li>H bond stablization</li>\n</ul>\n</li>\n<li>dAA: N-1, N-1’’</li>\n<li>psedo-dAA: N-3, N-3’’<ul>\n<li>H bond stablization</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2-Form-Cation-Radicals\"><a href=\"#2-Form-Cation-Radicals\" class=\"headerlink\" title=\"2. Form Cation Radicals\"></a>2. Form Cation Radicals</h2><ul>\n<li>ETD dAA+2$H^+$: $[M-H]^+(m/z\\ 565)$, $[M-H-A]^{+\\cdot}(m/z\\ 431)$, $w^+(m/z\\  332)$</li>\n<li>M+CE/DBCE$\\rightarrow$ESI$\\rightarrow$ETD: $M^{+\\cdot}$</li>\n<li>CE favors N-1 position</li>\n</ul>\n<h2 id=\"3-UV-Vis-Action-Spectrum\"><a href=\"#3-UV-Vis-Action-Spectrum\" class=\"headerlink\" title=\"3. UV-Vis Action Spectrum\"></a>3. UV-Vis Action Spectrum</h2><ul>\n<li>vis: broad band at 465nm; uv: 340nm, 260nm </li>\n<li>channel: $w^+(m/z\\ 332)$, $[w+H]^{+\\cdot}(m/z\\ 333)$, $[M-H-A]^{+\\cdot}(m/z\\ 431)$</li>\n<li>260nm is same with <a href=\"#ap1\">pccp_adenine1</a> and <a href=\"#ap2\">pccp_adenine2</a></li>\n</ul>\n<h2 id=\"4-Dinucleotide-Cation-Radical-Structures\"><a href=\"#4-Dinucleotide-Cation-Radical-Structures\" class=\"headerlink\" title=\"4. Dinucleotide Cation Radical Structures\"></a>4. Dinucleotide Cation Radical Structures</h2><ul>\n<li>if exothermic, isomerization driven by proton migrations will occur sponstaneously and driven by exotherimic energy provided by the electron attachment reaction. </li>\n<li>electron not attach N-1</li>\n<li>hydrogen migration might face substantial energy barrier. [<a href=\"#l1\">A+H1</a> | <a href=\"#l2\">A+H2</a>]</li>\n<li>proton transfer (move radical position)$\\rightarrow$optimize$\\rightarrow$ more stable structures</li>\n<li>theoritical uvvis spectra and molecular orbital analysis $\\rightarrow$ possible tautomers &amp; spectra contributions $\\pi_z \\rightarrow \\pi_z^*$</li>\n</ul>\n<h2 id=\"5-Adenine-Ribonucleotide-Chimeras\"><a href=\"#5-Adenine-Ribonucleotide-Chimeras\" class=\"headerlink\" title=\"5. Adenine Ribonucleotide Chimeras\"></a>5. Adenine Ribonucleotide Chimeras</h2><ul>\n<li>uv-vis analysis: similiar band position to dAA </li>\n<li>aromatic diesters<ul>\n<li>opt: zwitterionic dication-anion radicals $\\longleftrightarrow$ folded structure (exothermic conformation collapse)</li>\n<li>Coulomb stablization of zwitterionic structures is analogous to the solvent effects governing DNA ionization (<a href=\"#ion1\">DNAion1</a> | <a href=\"#ion2\">DNAion2</a>)</li>\n</ul>\n</li>\n<li>cyclohexane diester: <ul>\n<li>adenine cation and radical moieties are located on the opposite sides of the cyclohexane ring </li>\n<li>attractive ion−dipole and ion-induced dipole interactions</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"Hydrogen-Rich-Cation-Radicals-of-DNA-Dinucleotides-Generation-and-Structure-Elucidation-by-UV–Vis-Action-Spectroscopy\"><a href=\"#Hydrogen-Rich-Cation-Radicals-of-DNA-Dinucleotides-Generation-and-Structure-Elucidation-by-UV–Vis-Action-Spectroscopy\" class=\"headerlink\" title=\"Hydrogen-Rich Cation Radicals of DNA Dinucleotides: Generation and Structure Elucidation by UV–Vis Action Spectroscopy\"></a><a href=\"https://pubs.acs.org/doi/abs/10.1021/acs.jpcb.8b07925\" target=\"_blank\" rel=\"noopener\">Hydrogen-Rich Cation Radicals of DNA Dinucleotides: Generation and Structure Elucidation by UV–Vis Action Spectroscopy</a></h1><ul>\n<li>Why<ul>\n<li>DNA ionization causes chemical changes leading to complex process of DNA damage; intermediates: DNA cation radicals</li>\n<li>the intrinsic electronic properties of the reactive cation radical intermediates just are elucidated recently</li>\n<li>without solvent and counterions, gas-phase studies can focus on the intrinsic electronic and chemical properties of the radical species (<a href=\"#ref\">ref</a>)</li>\n</ul>\n</li>\n<li>Goal<ul>\n<li>purine and pyrimidine nucleobases in dinucleotide cation radicals exhibit different properties: <ul>\n<li>nucleobase stacking</li>\n<li>hydrogen bonds</li>\n<li>propensity for undergoing intramolecular proton transfer</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Intro<ul>\n<li>cation radical<ul>\n<li>$(dGG+2H)^{+\\cdot}$: conform collapse, 3’-G C-8-H radical</li>\n<li>$(dCG+2H)^{+\\cdot}$: collapse, a mixture of 5’-C and 3’-G radicals</li>\n<li>$(dGC+2H)^{+\\cdot}$: retain structure, a 3’-C radical</li>\n</ul>\n</li>\n<li>basicity ($pK_a$) in water $\\Leftrightarrow$ ability of proton-transfer reactions in solution<ul>\n<li>$(G+H)^\\cdot$: 20.0</li>\n<li>$(C+H)^\\cdot$: 4.6</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"1-Dinucleotide-Cation-Radical-Generation\"><a href=\"#1-Dinucleotide-Cation-Radical-Generation\" class=\"headerlink\" title=\"1. Dinucleotide Cation Radical Generation\"></a>1. Dinucleotide Cation Radical Generation</h2><ul>\n<li>larger oligos form stable cation radicals</li>\n<li>smaller one needs DBCE</li>\n</ul>\n<h2 id=\"2-Dinucleotide-Cation-Radical-Collision-Induced-Dis-sociation-and-Photodissociation-Spectra\"><a href=\"#2-Dinucleotide-Cation-Radical-Collision-Induced-Dis-sociation-and-Photodissociation-Spectra\" class=\"headerlink\" title=\"2. Dinucleotide Cation Radical Collision-Induced Dis- sociation and Photodissociation Spectra\"></a>2. Dinucleotide Cation Radical Collision-Induced Dis- sociation and Photodissociation Spectra</h2><ul>\n<li>CID of cation radicals<ul>\n<li>$(dGG+2H)^{+\\cdot}$: $[M-G]^{+\\cdot}$, $[M-G-H]^{+}$, $[d_1/w_1]^+$, $[d_1/w_1+H]^{+\\cdot}$</li>\n<li>$(dGC+2H)^{+\\cdot}$: $[M-H_2O]^{+\\cdot}$, $[M-C]^{+\\cdot}$, $[M-G-H]^{+}$, $d^+$, $[w+2H]^+$, $[z_1+H]^{+\\cdot}$</li>\n<li>$(dCG+2H)^{+\\cdot}$: $[M-H_2O]^{+\\cdot}$, $[M-C-H]^{+}$, $[M-C]^{+\\cdot}$, $w_1^+$</li>\n</ul>\n</li>\n<li>how nucleobase nature and position affect<ul>\n<li>C at 3’-end $\\rightarrow$ elimination of water</li>\n<li>C at 5’-end $\\rightarrow$ lost as $[C+H]^\\cdot$</li>\n<li>loss of C &gt; loss of G</li>\n<li>5’-C suppresses 3’-G loss</li>\n</ul>\n</li>\n<li>UVPD similiar to CID</li>\n<li>close shell systems have similiar absorption $\\rightarrow$ not only associated with radical moieties</li>\n</ul>\n<h2 id=\"3-dGG-2H-cdot-Action-Spectroscopy-and-Ion-Structures\"><a href=\"#3-dGG-2H-cdot-Action-Spectroscopy-and-Ion-Structures\" class=\"headerlink\" title=\"3. $[dGG+2H]^{+\\cdot}$ Action Spectroscopy and Ion Structures\"></a>3. $[dGG+2H]^{+\\cdot}$ Action Spectroscopy and Ion Structures</h2><ul>\n<li>action spectra: 450-470nm, 330, 310 and 270nm</li>\n<li>structure:<ul>\n<li>H positon<ul>\n<li>most basic: N-7</li>\n<li>2nd basic: 6-OH−N-3−H</li>\n</ul>\n</li>\n<li>CE at 5’-terminal stable than that at 3’</li>\n<li>H transfer<ul>\n<li>exthothermic </li>\n<li>cation and radical at 5’-G most stable</li>\n<li>cation at 3’-G, radical at 5’-G relatively stable and match spectra</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>450-460nm: SOMO, 156$\\alpha (\\pi)\\rightarrow$ combined $\\pi^*$ at 3’-G radical</li>\n<li>$(G+H)^\\cdot$ estimates thermal shift and broadening</li>\n<li>215kJ/mol ($\\lambda$&lt;550nm) enough to drive dissociation</li>\n</ul>\n<h2 id=\"4-dCG-2H-cdot-Action-Spectroscopy-and-Ion-Structures\"><a href=\"#4-dCG-2H-cdot-Action-Spectroscopy-and-Ion-Structures\" class=\"headerlink\" title=\"4. $[dCG+2H]^{+\\cdot}$ Action Spectroscopy and Ion Structures\"></a>4. $[dCG+2H]^{+\\cdot}$ Action Spectroscopy and Ion Structures</h2><ul>\n<li>action spectra: weak 450-480nm, strong 350 and 280nm</li>\n<li>structure:<ul>\n<li>cytosine: O-2 and N-3 basic positions</li>\n<li>CE at 5’-C ring and 3’-G ring</li>\n<li>H posiitons: dC3G7</li>\n<li>H transfer<ul>\n<li>transition state high, but exthothermic finally (kinetic hampered)</li>\n<li>major: radical at C; minor at G</li>\n<li>RRKM calculation: 310kJ/mol internal energy needed for conversion</li>\n<li>$E_{int}=E_{thermal}+E_{exc}$, where $E_{exc}$ is part (calculated by heat capacity) of exthothermic reaction energy </li>\n</ul>\n</li>\n</ul>\n</li>\n<li>dissociation of C or (C+H)$^\\cdot$ are less endothermic than G or (G+H)$^\\cdot$</li>\n</ul>\n<h2 id=\"5-dGC-2H-cdot-Action-Spectroscopy-and-Ion-Structures\"><a href=\"#5-dGC-2H-cdot-Action-Spectroscopy-and-Ion-Structures\" class=\"headerlink\" title=\"5. $[dGC+2H]^{+\\cdot}$ Action Spectroscopy and Ion Structures\"></a>5. $[dGC+2H]^{+\\cdot}$ Action Spectroscopy and Ion Structures</h2><ul>\n<li>action spectra: extremely weak broad 620nm, 420-500nm and 360nm, strong 285nm</li>\n<li>structure<ul>\n<li>CE at 3’-C ring</li>\n<li>radical at C</li>\n<li>proton transfer exthothermic but not fit spectra </li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-Discussion\"><a href=\"#6-Discussion\" class=\"headerlink\" title=\"6. Discussion\"></a>6. Discussion</h2><ul>\n<li>site of electron attachment to the dications depends on<ul>\n<li>nucleobase nature<br> C&gt;G: $RE_{adiab}(C)$=5.17eV; $RE_{adiab}(G)$=4.46eV</li>\n<li>nucleobase position<br>dGG: 5’-G&gt;3’-G</li>\n</ul>\n</li>\n<li>ring stacking and proton transfer<ul>\n<li>dGG: nucleobase stacking, faciles proton transfer</li>\n<li>dGC and dCG: nucleobases perpenticular, kinetically hampered</li>\n</ul>\n</li>\n<li>$(G+H)^{+} (aq,pK_a=3.3)+(G+H)^\\cdot (aq) \\overset{\\Delta G=-95 kJ/mol}{\\longrightarrow} G(aq)+(G+2H)^{+\\cdot}(aq,pK_a\\approx20.0)$</li>\n<li>$(C+H)^{+} (aq,pK_a=4.6)+(C+H)^\\cdot(aq) \\overset{\\Delta G=-0.1 kJ/mol}{\\rightleftharpoons} C(aq)+(C+2H)^{+\\cdot}(aq,pK_a\\approx4.6)$</li>\n</ul>\n<h1 id=\"Watson-Crick-Base-Pair-Radical-Cation-as-a-Model-for-Oxidative-Damage-in-DNA\"><a href=\"#Watson-Crick-Base-Pair-Radical-Cation-as-a-Model-for-Oxidative-Damage-in-DNA\" class=\"headerlink\" title=\"Watson-Crick Base Pair Radical Cation as a Model for Oxidative Damage in DNA\"></a><a href=\"https://pubs.acs.org/doi/10.1021/acs.jpclett.7b01251\" target=\"_blank\" rel=\"noopener\">Watson-Crick Base Pair Radical Cation as a Model for Oxidative Damage in DNA</a></h1><h2 id=\"Background\"><a href=\"#Background\" class=\"headerlink\" title=\"Background\"></a>Background</h2><ul>\n<li>mechanisms of DNA damage poorly understood<ul>\n<li>oxidation $\\rightarrow$ deprotonation at G $\\rightarrow$ H abstraction from sugar $\\rightarrow$ DNA strand breaks $\\rightarrow$ mutagenesis and cancer</li>\n<li>probing initially formed radical cation challengeing</li>\n</ul>\n</li>\n<li>proton-coupled electron and hole transfer is an important<br>feature in radiation damage process</li>\n</ul>\n<h2 id=\"Notes\"><a href=\"#Notes\" class=\"headerlink\" title=\"Notes\"></a>Notes</h2><ul>\n<li>gas-phase acidity data may be more appropriate to characterize the equilibrium position of the proton in oxidized GC base pairs (<a href=\"#gasbetter\">ref</a>)</li>\n<li>Guanine<ol>\n<li>the lowest ionization energy among GATC, both in solution and gas $\\Rightarrow$</li>\n<li>electron loss during ionization of DNA mostly occurs from G $\\rightarrow$</li>\n<li>G radical cations enhances acidities than G $\\Rightarrow$ </li>\n</ol>\n<ul>\n<li>dG$^{+\\cdot}$-dC pair: H transfer from G to C (G3$\\rightarrow$C3) $\\Rightarrow$ relocation of radical site to sugar</li>\n</ul>\n</li>\n<li>homolytic bond dissociation enthaloy of 401kJ/mol for [dG+H(N$_7$)]$^+$ is comparable to that for a typical C-H bond $\\Rightarrow$ other radicals via intra- or intermolecular H-abstraction reactions</li>\n<li>CID<ol>\n<li>$[dGdC]^{+\\cdot}-CH_2O$: occurs on the sugar of G</li>\n<li>further loss $C_2H_3O_2$</li>\n<li>$[dGdC]^{+\\cdot}-C_5H_8O_3$ not nucleobase specific</li>\n</ol>\n</li>\n</ul>\n<h1 id=\"The-Electronic-Spectrum-of-Protonated-Adenine-Theory-and-Experiment\"><a href=\"#The-Electronic-Spectrum-of-Protonated-Adenine-Theory-and-Experiment\" class=\"headerlink\" title=\"The Electronic Spectrum of Protonated Adenine: Theory and Experiment\"></a><jump id=\"ap1\"><a href=\"https://pubs.rsc.org/en/content/articlelanding/2005/cp/b507422c/unauth#!divAbstract\" target=\"_blank\" rel=\"noopener\">The Electronic Spectrum of Protonated Adenine: Theory and Experiment</a></jump></h1><h2 id=\"Background-1\"><a href=\"#Background-1\" class=\"headerlink\" title=\"Background\"></a>Background</h2><ul>\n<li>high photostability of DNA is essential for life on earth</li>\n<li>advantage of gas phase experiment<ul>\n<li>spectra of protonated species in solution is principally complicated, because:<ul>\n<li>solvation shifts and inhomogeneous broadening</li>\n<li>charged and neutral species coexist $\\rightarrow$ superposition of spectra</li>\n<li>in plolar protic solvents proton exchange fast, causing lifetime broadening</li>\n</ul>\n</li>\n<li>mass selection before spectra</li>\n</ul>\n</li>\n<li>1951 crystallographic evidence: 9H-A prefers protonated at N-1</li>\n<li>in tA-T Watson-Crick base pair, the N1 atome of A acts as a H-bond acceptor</li>\n</ul>\n<h2 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h2><ul>\n<li>实验方法： 中性和酸性腺嘌呤的实验谱图与计算的跃迁对比，观察红移或蓝移的情况归属峰的性质,计算激发态构型判断峰的形状</li>\n<li>UV-Vis: 205nm, 260nm both neutral and protonated A</li>\n<li>$S_0-S_1$ photofragment spectrum pf A+H: the lowest $\\pi\\pi^*$ transtion<ul>\n<li>loss of $NH_3$ ager absorption of one UV photon</li>\n</ul>\n</li>\n<li>tautomer:<ul>\n<li>9H-A-N1H most stable &gt; 7H-A-N3H &gt;&gt; 9H-A-N3H</li>\n<li>neutral ddenine 7H-A large dipole moment than 9H-A</li>\n</ul>\n</li>\n<li>vertical absorption spectra<ul>\n<li>neutral 9H-A<ul>\n<li>4.91eV/252nm: 1st $\\pi\\pi^*$ excitaion, medium $HOMO\\rightarrow LUMO+1$ and $HOMO-1\\rightarrow LUMO$, not HOMO to LUMO</li>\n<li>5.02eV/247nm: weak 1st $n\\pi^*$</li>\n<li>5.09eV/244nm: 2nd $\\pi\\pi^*\\ (HOMO\\rightarrow LUMO)$</li>\n<li>5.35eV/232nm: $HOMO\\rightarrow Rydberg\\ orbital$</li>\n</ul>\n</li>\n<li>protonated 1H-9H-A<ul>\n<li>4.83eV/257nm: 1st $\\pi\\pi^*\\ (HOMO\\rightarrow LUMO)$</li>\n<li>5.15eV/241nm: 2nd $\\pi\\pi^*\\ (HOMO\\rightarrow LUMO+1)$</li>\n<li>5.23eV/234nm: weak 1st $n\\pi^*$</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"Gas-phase-spectroscopy-of-protonated-adenine-adenosine-5′-monophosphate-and-monohydrated-ions\"><a href=\"#Gas-phase-spectroscopy-of-protonated-adenine-adenosine-5′-monophosphate-and-monohydrated-ions\" class=\"headerlink\" title=\"Gas-phase spectroscopy of protonated adenine, adenosine 5′-monophosphate and monohydrated ions\"></a><jump id=\"ap2\"><a href=\"https://pubs.rsc.org/en/content/articlelanding/2013/cp/c3cp53742k/unauth#!divAbstract\" target=\"_blank\" rel=\"noopener\">Gas-phase spectroscopy of protonated adenine, adenosine 5′-monophosphate and monohydrated ions</a></jump></h1><ul>\n<li>the action spectra of $AMPH^+$, $AH+$, $AH^+(H_2O)$ similiar indicates<ul>\n<li>the same protonation site, mostly N-1</li>\n<li>the lowest-energy trnsitions are independent of surrondings</li>\n</ul>\n</li>\n<li>Action Spectra: broad band between 230 and 290nm and 210nm<ul>\n<li>250,270nm: $\\pi\\pi^*$</li>\n<li>230nm: $n\\pi^*$</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"Distonic-Isomers-and-Tautomers-of-Adenine-Cation-Radical-in-the-Gas-Phase-and-Aqueous-Solution\"><a href=\"#Distonic-Isomers-and-Tautomers-of-Adenine-Cation-Radical-in-the-Gas-Phase-and-Aqueous-Solution\" class=\"headerlink\" title=\"Distonic Isomers and Tautomers of Adenine Cation Radical in the Gas Phase and Aqueous Solution\"></a><jump id=\"l1\"><a href=\"https://pubs.acs.org/doi/10.1021/jp046575q\" target=\"_blank\" rel=\"noopener\">Distonic Isomers and Tautomers of Adenine Cation Radical in the Gas Phase and Aqueous Solution</a></jump></h1><h2 id=\"Background-2\"><a href=\"#Background-2\" class=\"headerlink\" title=\"Background\"></a>Background</h2><ul>\n<li>Distonic/ylid ions<ul>\n<li>nonclassical open-shell species in which the charge and radical sites reside on separate atoms</li>\n<li>often more stable than isomeric canonical cation-radical structures</li>\n</ul>\n</li>\n<li>DNA damage mechanism: direct ionization produce cation radicals and electron capture leading to anion radicals</li>\n</ul>\n<h2 id=\"Note-1\"><a href=\"#Note-1\" class=\"headerlink\" title=\"Note\"></a>Note</h2><ul>\n<li>protonation of gas phase under CI depends on PA</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/yueliu96/blog_images/master/Screen%20Shot%202019-01-12%20at%2016.22.32.png\" alt=\"PA_A\"></p>\n<ul>\n<li>$pK_a$ of N-9, N-10, C-2 and C-8: 3.2, 3.3, 6.2 and 11.9</li>\n<li>CAD of $AH^+$: M-H; M-NH3 (H transfer from $N_1,\\ N_3\\ or\\ N_7$ on amino group); ring cleavage M-HCN, consecutive -$CH2N2$</li>\n<li>DFT calcualtion<ul>\n<li>amino group shows less pyramidization</li>\n<li>removing an electron from orbitals that has nodal surfaces decreases the $\\pi$-antibonding interaction resulting in shortening bonds</li>\n<li>polar solvents are known to affect the realtive stabilites of nucleobase tautomers greatly</li>\n</ul>\n</li>\n<li>Calcualtion result<ul>\n<li>elimination of $NH_3$ is the lowest-energy channel that requires $\\Delta H_{rxn,0}=371kJ\\ mole^{-1}$</li>\n<li>loss of a H is also endothermic</li>\n<li>a small activation energy for the addition of H to C-2 position</li>\n<li>H attached to N-10 is exothermic, $\\Delta G=383kJ mol^{-1}$, which is sufficient to drive exothermic hydrogen transfer from … to it<ul>\n<li>methyl group in T</li>\n<li>SH group in C</li>\n<li>OH in Tyr</li>\n<li>$C_{\\alpha}$ methines of the peptide backbone</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"Adenine-Radicals-in-the-Gas-Phase-An-Experimental-and-Computational-Study-of-Hydrogen-Atom-Adducts-to-Adenine\"><a href=\"#Adenine-Radicals-in-the-Gas-Phase-An-Experimental-and-Computational-Study-of-Hydrogen-Atom-Adducts-to-Adenine\" class=\"headerlink\" title=\"Adenine Radicals in the Gas Phase. An Experimental and Computational Study of Hydrogen Atom Adducts to Adenine\"></a><jump id=\"l2\"><a href=\"https://pubs.acs.org/doi/abs/10.1021/jp0529725\" target=\"_blank\" rel=\"noopener\">Adenine Radicals in the Gas Phase. An Experimental and Computational Study of Hydrogen Atom Adducts to Adenine</a></jump></h1><p><img src=\"https://raw.githubusercontent.com/yueliu96/blog_images/master/Screen%20Shot%202019-01-13%20at%2012.36.45.png\" alt=\"dna damage scheme\"></p>\n<ul>\n<li>the elusive hydrogen atom adduct to the N-1 position in A, which is thought to be the initial intermediate of chemical damage<ul>\n<li>N-1 is 48-130 times more basic than N-3</li>\n</ul>\n</li>\n<li>C-8 adduct is the most stable tautuomer, which is predicted to be the prdominating product at thermal equilibrium in solution at 298K</li>\n<li>proton transfer from $H_3O^+ or\\ NH_4^+$ to Ade is exthothermic</li>\n</ul>\n<h1 id=\"Dependence-of-Spurious-Charge-Transfer-Excited-States-on-Orbital-Exchange-in-TDDFT-Large-Molecules-and-Clusters\"><a href=\"#Dependence-of-Spurious-Charge-Transfer-Excited-States-on-Orbital-Exchange-in-TDDFT-Large-Molecules-and-Clusters\" class=\"headerlink\" title=\"Dependence of Spurious Charge- Transfer Excited States on Orbital Exchange in TDDFT: Large Molecules and Clusters\"></a><a href=\"https://pubs.acs.org/doi/10.1021/ct600282k\" target=\"_blank\" rel=\"noopener\">Dependence of Spurious Charge- Transfer Excited States on Orbital Exchange in TDDFT: Large Molecules and Clusters</a></h1><ul>\n<li>intensity of CT ransitions is likely to be exaggerated by TDDFT calcualtions</li>\n<li>Density functional theory formally permits the expression of the total ground-state energy and other properties of a quantum many-body systme as functionals of the electron density alone and provides a formally exact scheme for solving the many-body problem</li>\n<li>TDDFT is an extension of DFT in which many-body excitations are associated with the poles of the exact density response</li>\n<li>6-31G basis sets: an efficient blend of accuracy and manageablw size for large confugated molecules<ul>\n<li>6-31G*: with polarization functions</li>\n<li>6-31+G: with diffuse functions</li>\n</ul>\n</li>\n<li>Charge transfer states<ul>\n<li>photexcited electron and hole are significant spatial separation</li>\n<li>usually higher in energy than the relevant Frenkel-exciton band of optical (nonvanishing oscillator-strength) and dark (vanishing oscillater-strength) states</li>\n<li>however, DFT methods drastically underesetimate their energies $\\rightarrow$ all 3 types of states in dimers might be mixed</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"Electron-Detachment-Energies-and-Isomerism-in-Purinic-Deoxyribonucleotides\"><a href=\"#Electron-Detachment-Energies-and-Isomerism-in-Purinic-Deoxyribonucleotides\" class=\"headerlink\" title=\"Electron Detachment Energies and Isomerism in Purinic Deoxyribonucleotides\"></a><jump id=\"ion1\"><a href=\"https://onlinelibrary.wiley.com/doi/abs/10.1002/qua.21330\" target=\"_blank\" rel=\"noopener\">Electron Detachment Energies and Isomerism in Purinic Deoxyribonucleotides</a></jump></h1><h1 id=\"Ab-Initio-Electron-Propagator-Methods-Applications-to-Nucleic-Acids-Fragments-and-Metallophthalocyanines\"><a href=\"#Ab-Initio-Electron-Propagator-Methods-Applications-to-Nucleic-Acids-Fragments-and-Metallophthalocyanines\" class=\"headerlink\" title=\"Ab Initio Electron Propagator Methods: Applications to Nucleic Acids Fragments and Metallophthalocyanines.\"></a><jump id=\"ion2\"><a href=\"https://onlinelibrary.wiley.com/doi/abs/10.1002/qua.22836\" target=\"_blank\" rel=\"noopener\">Ab Initio Electron Propagator Methods: Applications to Nucleic Acids Fragments and Metallophthalocyanines.</a></jump></h1><h1 id=\"Ion-Ion-Reactions-New-Chemistry-for-Analytical-MS\"><a href=\"#Ion-Ion-Reactions-New-Chemistry-for-Analytical-MS\" class=\"headerlink\" title=\"Ion/Ion Reactions: New Chemistry for Analytical MS\"></a><a href=\"https://pubs.acs.org/doi/abs/10.1021/ac9014935\" target=\"_blank\" rel=\"noopener\">Ion/Ion Reactions: New Chemistry for Analytical MS</a></h1><h1 id=\"One-Electron-Oxidation-of-DNA-Oligomers-That-Lack-Guanine-Reaction-and-Strand-Cleavage-at-Remote-Thymines-by-Long-Distance-Radical-Cation-Hopping\"><a href=\"#One-Electron-Oxidation-of-DNA-Oligomers-That-Lack-Guanine-Reaction-and-Strand-Cleavage-at-Remote-Thymines-by-Long-Distance-Radical-Cation-Hopping\" class=\"headerlink\" title=\"One-Electron Oxidation of DNA Oligomers That Lack Guanine:  Reaction and Strand Cleavage at Remote Thymines by Long-Distance Radical Cation Hopping\"></a><a href=\"https://pubs.acs.org/doi/abs/10.1021/ja058758b\" target=\"_blank\" rel=\"noopener\">One-Electron Oxidation of DNA Oligomers That Lack Guanine:  Reaction and Strand Cleavage at Remote Thymines by Long-Distance Radical Cation Hopping</a></h1><h1 id=\"Transient-Intermediates-of-Chemical-Reactions-by-Neutralization—Reionization-Mass-Spectrometry\"><a href=\"#Transient-Intermediates-of-Chemical-Reactions-by-Neutralization—Reionization-Mass-Spectrometry\" class=\"headerlink\" title=\"Transient Intermediates of Chemical Reactions by Neutralization—Reionization Mass Spectrometry\"></a><jump id=\"ref\"><a href=\"https://link.springer.com/chapter/10.1007/3-540-36113-8_3\" target=\"_blank\" rel=\"noopener\">Transient Intermediates of Chemical Reactions by Neutralization—Reionization Mass Spectrometry</a></jump></h1><h1 id=\"What-Hinders-Electron-Transfer-Dissociation-ETD-of-DNA-Cations\"><a href=\"#What-Hinders-Electron-Transfer-Dissociation-ETD-of-DNA-Cations\" class=\"headerlink\" title=\"What Hinders Electron Transfer Dissociation (ETD) of DNA Cations?\"></a><a href=\"https://link.springer.com/article/10.1007%2Fs13361-017-1791-z\" target=\"_blank\" rel=\"noopener\">What Hinders Electron Transfer Dissociation (ETD) of DNA Cations?</a></h1><h1 id=\"Proton-and-hydrogen-atom-adducts-to-cytosine-An-experimental-and-computational-study\"><a href=\"#Proton-and-hydrogen-atom-adducts-to-cytosine-An-experimental-and-computational-study\" class=\"headerlink\" title=\"Proton and hydrogen atom adducts to cytosine. An experimental and computational study\"></a><a href=\"https://www.sciencedirect.com/science/article/pii/S1387380607000279\" target=\"_blank\" rel=\"noopener\">Proton and hydrogen atom adducts to cytosine. An experimental and computational study</a></h1><h1 id=\"Toward-True-DNA-Base-Stacking-Energies-MP2-CCSD-T-and-Complete-Basis-Set-Calculations\"><a href=\"#Toward-True-DNA-Base-Stacking-Energies-MP2-CCSD-T-and-Complete-Basis-Set-Calculations\" class=\"headerlink\" title=\"Toward True DNA Base-Stacking Energies: MP2, CCSD(T), and Complete Basis Set Calculations\"></a><a href=\"https://pubs.acs.org/doi/10.1021/ja026759n\" target=\"_blank\" rel=\"noopener\">Toward True DNA Base-Stacking Energies: MP2, CCSD(T), and Complete Basis Set Calculations</a></h1><h1 id=\"Purine-bases-nucleosides-and-nucleotides-aqueous-solution-redox-chemistry-and-transformation-reactions-of-their-radical-cations-and-e-and-OH-adducts\"><a href=\"#Purine-bases-nucleosides-and-nucleotides-aqueous-solution-redox-chemistry-and-transformation-reactions-of-their-radical-cations-and-e-and-OH-adducts\" class=\"headerlink\" title=\"Purine bases, nucleosides, and nucleotides: aqueous solution redox chemistry and transformation reactions of their radical cations and e- and OH adducts\"></a><a href=\"https://pubs.acs.org/doi/10.1021/cr00093a003\" target=\"_blank\" rel=\"noopener\">Purine bases, nucleosides, and nucleotides: aqueous solution redox chemistry and transformation reactions of their radical cations and e- and OH adducts</a></h1><h1 id=\"Proton-coupled-Electron-Transfer-in-DNA-on-Formation-of-Radiation-produced-Ion-Radicals\"><a href=\"#Proton-coupled-Electron-Transfer-in-DNA-on-Formation-of-Radiation-produced-Ion-Radicals\" class=\"headerlink\" title=\"Proton-coupled Electron Transfer in DNA on Formation of Radiation-produced Ion Radicals\"></a><a href=\"http://pubs.acs.org/doi/abs/10.1021/cr100023g\" target=\"_blank\" rel=\"noopener\">Proton-coupled Electron Transfer in DNA on Formation of Radiation-produced Ion Radicals</a></h1><h1 id=\"Induction-of-Strand-Breaks-in-Single-stranded-Polyribonucleotides-and-DNA-by-Photoionization-One-Electron-Oxidized-Nucleobase-Radicals-as-Precursors\"><a href=\"#Induction-of-Strand-Breaks-in-Single-stranded-Polyribonucleotides-and-DNA-by-Photoionization-One-Electron-Oxidized-Nucleobase-Radicals-as-Precursors\" class=\"headerlink\" title=\"Induction of Strand Breaks in Single-stranded Polyribonucleotides and DNA by Photoionization: One Electron Oxidized Nucleobase Radicals as Precursors\"></a><a href=\"https://pubs.acs.org/doi/abs/10.1021/ja961722m\" target=\"_blank\" rel=\"noopener\">Induction of Strand Breaks in Single-stranded Polyribonucleotides and DNA by Photoionization: One Electron Oxidized Nucleobase Radicals as Precursors</a></h1><h1 id=\"How-Easily-Oxidizable-is-DNA-One-electron-Reduction-Potentials-of-Adenosine-and-Guanosine-Radicals-in-Aqueous-Solution\"><a href=\"#How-Easily-Oxidizable-is-DNA-One-electron-Reduction-Potentials-of-Adenosine-and-Guanosine-Radicals-in-Aqueous-Solution\" class=\"headerlink\" title=\"How Easily Oxidizable is DNA? One-electron Reduction Potentials of Adenosine and Guanosine Radicals in Aqueous Solution\"></a><a href=\"https://pubs.acs.org/doi/10.1021/ja962255b\" target=\"_blank\" rel=\"noopener\">How Easily Oxidizable is DNA? One-electron Reduction Potentials of Adenosine and Guanosine Radicals in Aqueous Solution</a></h1><h1 id=\"Structure-and-Acid-base-Properties-of-One-electron-oxidized-Deoxyguanosine-Guanosine-and-1-Methylguanosine\"><a href=\"#Structure-and-Acid-base-Properties-of-One-electron-oxidized-Deoxyguanosine-Guanosine-and-1-Methylguanosine\" class=\"headerlink\" title=\"Structure and Acid-base Properties of One-electron-oxidized Deoxyguanosine, Guanosine, and 1-Methylguanosine\"></a><jump id=\"gasbetter\"><a href=\"https://pubs.acs.org/doi/10.1021/ja00185a046\" target=\"_blank\" rel=\"noopener\">Structure and Acid-base Properties of One-electron-oxidized Deoxyguanosine, Guanosine, and 1-Methylguanosine</a></jump></h1>","site":{"data":{}},"excerpt":"","more":"<p> <strong><em>Keyword</em></strong></p>\n<p> adenine |  cation radical |  cytosine | electron attachment | guanine | nucleotide | proton transfer | spectra | thymine |</p>\n<h1 id=\"UV–Vis-Action-Spectroscopy-Reveals-a-Conformational-Collapse-in-Hydrogen-Rich-Dinucleotide-Cation-Radicals\"><a href=\"#UV–Vis-Action-Spectroscopy-Reveals-a-Conformational-Collapse-in-Hydrogen-Rich-Dinucleotide-Cation-Radicals\" class=\"headerlink\" title=\"UV–Vis Action Spectroscopy Reveals a Conformational Collapse in Hydrogen-Rich Dinucleotide Cation Radicals\"></a><a href=\"https://pubs.acs.org/doi/abs/10.1021/acs.jpclett.7b01856\" target=\"_blank\" rel=\"noopener\">UV–Vis Action Spectroscopy Reveals a Conformational Collapse in Hydrogen-Rich Dinucleotide Cation Radicals</a></h1><ul>\n<li>Why<ul>\n<li>DNA cation radicals are intermediates during the interaction of DNA with high energy particles</li>\n<li>electron defect initially located in a nucleobase, migrates along the DNA backbone to reside on guanine</li>\n<li>DNA behavior at atomic-level needed</li>\n</ul>\n</li>\n<li>Goal<ul>\n<li>proton and electron transfer along a single strand in DNA and related cation radicals</li>\n<li>use deoxyriboadenosine dinucleotide (dAA) and riboadenosine chimeras (pseudo-dAA)</li>\n</ul>\n</li>\n<li>Intro<ul>\n<li>dication$\\rightarrow$catrad: conformation collapse</li>\n<li>dAA<ul>\n<li>intra proton migrations btw nucleobases</li>\n</ul>\n</li>\n<li>pseudo-dAA-catrad<ul>\n<li>zwitterionic structures</li>\n<li>Coulomb stablization</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>the first time Turecek found combining UVPD with TDDFT can identify and distinguish isomeric peptide cation-radicals by ETD in <a href=\"https://onlinelibrary.wiley.com/doi/full/10.1002/jms.3717\" target=\"_blank\" rel=\"noopener\">here</a></p>\n<h2 id=\"1-Gaseous-Protonated-A\"><a href=\"#1-Gaseous-Protonated-A\" class=\"headerlink\" title=\"1. Gaseous Protonated A\"></a>1. Gaseous Protonated A</h2><ul>\n<li>N-1, N-3, N- 7, N-9, and NH2 (N-10) positions: potential protonation sites</li>\n<li>dA: N-3<ul>\n<li>H bond stablization</li>\n</ul>\n</li>\n<li>dAA: N-1, N-1’’</li>\n<li>psedo-dAA: N-3, N-3’’<ul>\n<li>H bond stablization</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2-Form-Cation-Radicals\"><a href=\"#2-Form-Cation-Radicals\" class=\"headerlink\" title=\"2. Form Cation Radicals\"></a>2. Form Cation Radicals</h2><ul>\n<li>ETD dAA+2$H^+$: $[M-H]^+(m/z\\ 565)$, $[M-H-A]^{+\\cdot}(m/z\\ 431)$, $w^+(m/z\\  332)$</li>\n<li>M+CE/DBCE$\\rightarrow$ESI$\\rightarrow$ETD: $M^{+\\cdot}$</li>\n<li>CE favors N-1 position</li>\n</ul>\n<h2 id=\"3-UV-Vis-Action-Spectrum\"><a href=\"#3-UV-Vis-Action-Spectrum\" class=\"headerlink\" title=\"3. UV-Vis Action Spectrum\"></a>3. UV-Vis Action Spectrum</h2><ul>\n<li>vis: broad band at 465nm; uv: 340nm, 260nm </li>\n<li>channel: $w^+(m/z\\ 332)$, $[w+H]^{+\\cdot}(m/z\\ 333)$, $[M-H-A]^{+\\cdot}(m/z\\ 431)$</li>\n<li>260nm is same with <a href=\"#ap1\">pccp_adenine1</a> and <a href=\"#ap2\">pccp_adenine2</a></li>\n</ul>\n<h2 id=\"4-Dinucleotide-Cation-Radical-Structures\"><a href=\"#4-Dinucleotide-Cation-Radical-Structures\" class=\"headerlink\" title=\"4. Dinucleotide Cation Radical Structures\"></a>4. Dinucleotide Cation Radical Structures</h2><ul>\n<li>if exothermic, isomerization driven by proton migrations will occur sponstaneously and driven by exotherimic energy provided by the electron attachment reaction. </li>\n<li>electron not attach N-1</li>\n<li>hydrogen migration might face substantial energy barrier. [<a href=\"#l1\">A+H1</a> | <a href=\"#l2\">A+H2</a>]</li>\n<li>proton transfer (move radical position)$\\rightarrow$optimize$\\rightarrow$ more stable structures</li>\n<li>theoritical uvvis spectra and molecular orbital analysis $\\rightarrow$ possible tautomers &amp; spectra contributions $\\pi_z \\rightarrow \\pi_z^*$</li>\n</ul>\n<h2 id=\"5-Adenine-Ribonucleotide-Chimeras\"><a href=\"#5-Adenine-Ribonucleotide-Chimeras\" class=\"headerlink\" title=\"5. Adenine Ribonucleotide Chimeras\"></a>5. Adenine Ribonucleotide Chimeras</h2><ul>\n<li>uv-vis analysis: similiar band position to dAA </li>\n<li>aromatic diesters<ul>\n<li>opt: zwitterionic dication-anion radicals $\\longleftrightarrow$ folded structure (exothermic conformation collapse)</li>\n<li>Coulomb stablization of zwitterionic structures is analogous to the solvent effects governing DNA ionization (<a href=\"#ion1\">DNAion1</a> | <a href=\"#ion2\">DNAion2</a>)</li>\n</ul>\n</li>\n<li>cyclohexane diester: <ul>\n<li>adenine cation and radical moieties are located on the opposite sides of the cyclohexane ring </li>\n<li>attractive ion−dipole and ion-induced dipole interactions</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"Hydrogen-Rich-Cation-Radicals-of-DNA-Dinucleotides-Generation-and-Structure-Elucidation-by-UV–Vis-Action-Spectroscopy\"><a href=\"#Hydrogen-Rich-Cation-Radicals-of-DNA-Dinucleotides-Generation-and-Structure-Elucidation-by-UV–Vis-Action-Spectroscopy\" class=\"headerlink\" title=\"Hydrogen-Rich Cation Radicals of DNA Dinucleotides: Generation and Structure Elucidation by UV–Vis Action Spectroscopy\"></a><a href=\"https://pubs.acs.org/doi/abs/10.1021/acs.jpcb.8b07925\" target=\"_blank\" rel=\"noopener\">Hydrogen-Rich Cation Radicals of DNA Dinucleotides: Generation and Structure Elucidation by UV–Vis Action Spectroscopy</a></h1><ul>\n<li>Why<ul>\n<li>DNA ionization causes chemical changes leading to complex process of DNA damage; intermediates: DNA cation radicals</li>\n<li>the intrinsic electronic properties of the reactive cation radical intermediates just are elucidated recently</li>\n<li>without solvent and counterions, gas-phase studies can focus on the intrinsic electronic and chemical properties of the radical species (<a href=\"#ref\">ref</a>)</li>\n</ul>\n</li>\n<li>Goal<ul>\n<li>purine and pyrimidine nucleobases in dinucleotide cation radicals exhibit different properties: <ul>\n<li>nucleobase stacking</li>\n<li>hydrogen bonds</li>\n<li>propensity for undergoing intramolecular proton transfer</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Intro<ul>\n<li>cation radical<ul>\n<li>$(dGG+2H)^{+\\cdot}$: conform collapse, 3’-G C-8-H radical</li>\n<li>$(dCG+2H)^{+\\cdot}$: collapse, a mixture of 5’-C and 3’-G radicals</li>\n<li>$(dGC+2H)^{+\\cdot}$: retain structure, a 3’-C radical</li>\n</ul>\n</li>\n<li>basicity ($pK_a$) in water $\\Leftrightarrow$ ability of proton-transfer reactions in solution<ul>\n<li>$(G+H)^\\cdot$: 20.0</li>\n<li>$(C+H)^\\cdot$: 4.6</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"1-Dinucleotide-Cation-Radical-Generation\"><a href=\"#1-Dinucleotide-Cation-Radical-Generation\" class=\"headerlink\" title=\"1. Dinucleotide Cation Radical Generation\"></a>1. Dinucleotide Cation Radical Generation</h2><ul>\n<li>larger oligos form stable cation radicals</li>\n<li>smaller one needs DBCE</li>\n</ul>\n<h2 id=\"2-Dinucleotide-Cation-Radical-Collision-Induced-Dis-sociation-and-Photodissociation-Spectra\"><a href=\"#2-Dinucleotide-Cation-Radical-Collision-Induced-Dis-sociation-and-Photodissociation-Spectra\" class=\"headerlink\" title=\"2. Dinucleotide Cation Radical Collision-Induced Dis- sociation and Photodissociation Spectra\"></a>2. Dinucleotide Cation Radical Collision-Induced Dis- sociation and Photodissociation Spectra</h2><ul>\n<li>CID of cation radicals<ul>\n<li>$(dGG+2H)^{+\\cdot}$: $[M-G]^{+\\cdot}$, $[M-G-H]^{+}$, $[d_1/w_1]^+$, $[d_1/w_1+H]^{+\\cdot}$</li>\n<li>$(dGC+2H)^{+\\cdot}$: $[M-H_2O]^{+\\cdot}$, $[M-C]^{+\\cdot}$, $[M-G-H]^{+}$, $d^+$, $[w+2H]^+$, $[z_1+H]^{+\\cdot}$</li>\n<li>$(dCG+2H)^{+\\cdot}$: $[M-H_2O]^{+\\cdot}$, $[M-C-H]^{+}$, $[M-C]^{+\\cdot}$, $w_1^+$</li>\n</ul>\n</li>\n<li>how nucleobase nature and position affect<ul>\n<li>C at 3’-end $\\rightarrow$ elimination of water</li>\n<li>C at 5’-end $\\rightarrow$ lost as $[C+H]^\\cdot$</li>\n<li>loss of C &gt; loss of G</li>\n<li>5’-C suppresses 3’-G loss</li>\n</ul>\n</li>\n<li>UVPD similiar to CID</li>\n<li>close shell systems have similiar absorption $\\rightarrow$ not only associated with radical moieties</li>\n</ul>\n<h2 id=\"3-dGG-2H-cdot-Action-Spectroscopy-and-Ion-Structures\"><a href=\"#3-dGG-2H-cdot-Action-Spectroscopy-and-Ion-Structures\" class=\"headerlink\" title=\"3. $[dGG+2H]^{+\\cdot}$ Action Spectroscopy and Ion Structures\"></a>3. $[dGG+2H]^{+\\cdot}$ Action Spectroscopy and Ion Structures</h2><ul>\n<li>action spectra: 450-470nm, 330, 310 and 270nm</li>\n<li>structure:<ul>\n<li>H positon<ul>\n<li>most basic: N-7</li>\n<li>2nd basic: 6-OH−N-3−H</li>\n</ul>\n</li>\n<li>CE at 5’-terminal stable than that at 3’</li>\n<li>H transfer<ul>\n<li>exthothermic </li>\n<li>cation and radical at 5’-G most stable</li>\n<li>cation at 3’-G, radical at 5’-G relatively stable and match spectra</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>450-460nm: SOMO, 156$\\alpha (\\pi)\\rightarrow$ combined $\\pi^*$ at 3’-G radical</li>\n<li>$(G+H)^\\cdot$ estimates thermal shift and broadening</li>\n<li>215kJ/mol ($\\lambda$&lt;550nm) enough to drive dissociation</li>\n</ul>\n<h2 id=\"4-dCG-2H-cdot-Action-Spectroscopy-and-Ion-Structures\"><a href=\"#4-dCG-2H-cdot-Action-Spectroscopy-and-Ion-Structures\" class=\"headerlink\" title=\"4. $[dCG+2H]^{+\\cdot}$ Action Spectroscopy and Ion Structures\"></a>4. $[dCG+2H]^{+\\cdot}$ Action Spectroscopy and Ion Structures</h2><ul>\n<li>action spectra: weak 450-480nm, strong 350 and 280nm</li>\n<li>structure:<ul>\n<li>cytosine: O-2 and N-3 basic positions</li>\n<li>CE at 5’-C ring and 3’-G ring</li>\n<li>H posiitons: dC3G7</li>\n<li>H transfer<ul>\n<li>transition state high, but exthothermic finally (kinetic hampered)</li>\n<li>major: radical at C; minor at G</li>\n<li>RRKM calculation: 310kJ/mol internal energy needed for conversion</li>\n<li>$E_{int}=E_{thermal}+E_{exc}$, where $E_{exc}$ is part (calculated by heat capacity) of exthothermic reaction energy </li>\n</ul>\n</li>\n</ul>\n</li>\n<li>dissociation of C or (C+H)$^\\cdot$ are less endothermic than G or (G+H)$^\\cdot$</li>\n</ul>\n<h2 id=\"5-dGC-2H-cdot-Action-Spectroscopy-and-Ion-Structures\"><a href=\"#5-dGC-2H-cdot-Action-Spectroscopy-and-Ion-Structures\" class=\"headerlink\" title=\"5. $[dGC+2H]^{+\\cdot}$ Action Spectroscopy and Ion Structures\"></a>5. $[dGC+2H]^{+\\cdot}$ Action Spectroscopy and Ion Structures</h2><ul>\n<li>action spectra: extremely weak broad 620nm, 420-500nm and 360nm, strong 285nm</li>\n<li>structure<ul>\n<li>CE at 3’-C ring</li>\n<li>radical at C</li>\n<li>proton transfer exthothermic but not fit spectra </li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-Discussion\"><a href=\"#6-Discussion\" class=\"headerlink\" title=\"6. Discussion\"></a>6. Discussion</h2><ul>\n<li>site of electron attachment to the dications depends on<ul>\n<li>nucleobase nature<br> C&gt;G: $RE_{adiab}(C)$=5.17eV; $RE_{adiab}(G)$=4.46eV</li>\n<li>nucleobase position<br>dGG: 5’-G&gt;3’-G</li>\n</ul>\n</li>\n<li>ring stacking and proton transfer<ul>\n<li>dGG: nucleobase stacking, faciles proton transfer</li>\n<li>dGC and dCG: nucleobases perpenticular, kinetically hampered</li>\n</ul>\n</li>\n<li>$(G+H)^{+} (aq,pK_a=3.3)+(G+H)^\\cdot (aq) \\overset{\\Delta G=-95 kJ/mol}{\\longrightarrow} G(aq)+(G+2H)^{+\\cdot}(aq,pK_a\\approx20.0)$</li>\n<li>$(C+H)^{+} (aq,pK_a=4.6)+(C+H)^\\cdot(aq) \\overset{\\Delta G=-0.1 kJ/mol}{\\rightleftharpoons} C(aq)+(C+2H)^{+\\cdot}(aq,pK_a\\approx4.6)$</li>\n</ul>\n<h1 id=\"Watson-Crick-Base-Pair-Radical-Cation-as-a-Model-for-Oxidative-Damage-in-DNA\"><a href=\"#Watson-Crick-Base-Pair-Radical-Cation-as-a-Model-for-Oxidative-Damage-in-DNA\" class=\"headerlink\" title=\"Watson-Crick Base Pair Radical Cation as a Model for Oxidative Damage in DNA\"></a><a href=\"https://pubs.acs.org/doi/10.1021/acs.jpclett.7b01251\" target=\"_blank\" rel=\"noopener\">Watson-Crick Base Pair Radical Cation as a Model for Oxidative Damage in DNA</a></h1><h2 id=\"Background\"><a href=\"#Background\" class=\"headerlink\" title=\"Background\"></a>Background</h2><ul>\n<li>mechanisms of DNA damage poorly understood<ul>\n<li>oxidation $\\rightarrow$ deprotonation at G $\\rightarrow$ H abstraction from sugar $\\rightarrow$ DNA strand breaks $\\rightarrow$ mutagenesis and cancer</li>\n<li>probing initially formed radical cation challengeing</li>\n</ul>\n</li>\n<li>proton-coupled electron and hole transfer is an important<br>feature in radiation damage process</li>\n</ul>\n<h2 id=\"Notes\"><a href=\"#Notes\" class=\"headerlink\" title=\"Notes\"></a>Notes</h2><ul>\n<li>gas-phase acidity data may be more appropriate to characterize the equilibrium position of the proton in oxidized GC base pairs (<a href=\"#gasbetter\">ref</a>)</li>\n<li>Guanine<ol>\n<li>the lowest ionization energy among GATC, both in solution and gas $\\Rightarrow$</li>\n<li>electron loss during ionization of DNA mostly occurs from G $\\rightarrow$</li>\n<li>G radical cations enhances acidities than G $\\Rightarrow$ </li>\n</ol>\n<ul>\n<li>dG$^{+\\cdot}$-dC pair: H transfer from G to C (G3$\\rightarrow$C3) $\\Rightarrow$ relocation of radical site to sugar</li>\n</ul>\n</li>\n<li>homolytic bond dissociation enthaloy of 401kJ/mol for [dG+H(N$_7$)]$^+$ is comparable to that for a typical C-H bond $\\Rightarrow$ other radicals via intra- or intermolecular H-abstraction reactions</li>\n<li>CID<ol>\n<li>$[dGdC]^{+\\cdot}-CH_2O$: occurs on the sugar of G</li>\n<li>further loss $C_2H_3O_2$</li>\n<li>$[dGdC]^{+\\cdot}-C_5H_8O_3$ not nucleobase specific</li>\n</ol>\n</li>\n</ul>\n<h1 id=\"The-Electronic-Spectrum-of-Protonated-Adenine-Theory-and-Experiment\"><a href=\"#The-Electronic-Spectrum-of-Protonated-Adenine-Theory-and-Experiment\" class=\"headerlink\" title=\"The Electronic Spectrum of Protonated Adenine: Theory and Experiment\"></a><jump id=\"ap1\"><a href=\"https://pubs.rsc.org/en/content/articlelanding/2005/cp/b507422c/unauth#!divAbstract\" target=\"_blank\" rel=\"noopener\">The Electronic Spectrum of Protonated Adenine: Theory and Experiment</a></jump></h1><h2 id=\"Background-1\"><a href=\"#Background-1\" class=\"headerlink\" title=\"Background\"></a>Background</h2><ul>\n<li>high photostability of DNA is essential for life on earth</li>\n<li>advantage of gas phase experiment<ul>\n<li>spectra of protonated species in solution is principally complicated, because:<ul>\n<li>solvation shifts and inhomogeneous broadening</li>\n<li>charged and neutral species coexist $\\rightarrow$ superposition of spectra</li>\n<li>in plolar protic solvents proton exchange fast, causing lifetime broadening</li>\n</ul>\n</li>\n<li>mass selection before spectra</li>\n</ul>\n</li>\n<li>1951 crystallographic evidence: 9H-A prefers protonated at N-1</li>\n<li>in tA-T Watson-Crick base pair, the N1 atome of A acts as a H-bond acceptor</li>\n</ul>\n<h2 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h2><ul>\n<li>实验方法： 中性和酸性腺嘌呤的实验谱图与计算的跃迁对比，观察红移或蓝移的情况归属峰的性质,计算激发态构型判断峰的形状</li>\n<li>UV-Vis: 205nm, 260nm both neutral and protonated A</li>\n<li>$S_0-S_1$ photofragment spectrum pf A+H: the lowest $\\pi\\pi^*$ transtion<ul>\n<li>loss of $NH_3$ ager absorption of one UV photon</li>\n</ul>\n</li>\n<li>tautomer:<ul>\n<li>9H-A-N1H most stable &gt; 7H-A-N3H &gt;&gt; 9H-A-N3H</li>\n<li>neutral ddenine 7H-A large dipole moment than 9H-A</li>\n</ul>\n</li>\n<li>vertical absorption spectra<ul>\n<li>neutral 9H-A<ul>\n<li>4.91eV/252nm: 1st $\\pi\\pi^*$ excitaion, medium $HOMO\\rightarrow LUMO+1$ and $HOMO-1\\rightarrow LUMO$, not HOMO to LUMO</li>\n<li>5.02eV/247nm: weak 1st $n\\pi^*$</li>\n<li>5.09eV/244nm: 2nd $\\pi\\pi^*\\ (HOMO\\rightarrow LUMO)$</li>\n<li>5.35eV/232nm: $HOMO\\rightarrow Rydberg\\ orbital$</li>\n</ul>\n</li>\n<li>protonated 1H-9H-A<ul>\n<li>4.83eV/257nm: 1st $\\pi\\pi^*\\ (HOMO\\rightarrow LUMO)$</li>\n<li>5.15eV/241nm: 2nd $\\pi\\pi^*\\ (HOMO\\rightarrow LUMO+1)$</li>\n<li>5.23eV/234nm: weak 1st $n\\pi^*$</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"Gas-phase-spectroscopy-of-protonated-adenine-adenosine-5′-monophosphate-and-monohydrated-ions\"><a href=\"#Gas-phase-spectroscopy-of-protonated-adenine-adenosine-5′-monophosphate-and-monohydrated-ions\" class=\"headerlink\" title=\"Gas-phase spectroscopy of protonated adenine, adenosine 5′-monophosphate and monohydrated ions\"></a><jump id=\"ap2\"><a href=\"https://pubs.rsc.org/en/content/articlelanding/2013/cp/c3cp53742k/unauth#!divAbstract\" target=\"_blank\" rel=\"noopener\">Gas-phase spectroscopy of protonated adenine, adenosine 5′-monophosphate and monohydrated ions</a></jump></h1><ul>\n<li>the action spectra of $AMPH^+$, $AH+$, $AH^+(H_2O)$ similiar indicates<ul>\n<li>the same protonation site, mostly N-1</li>\n<li>the lowest-energy trnsitions are independent of surrondings</li>\n</ul>\n</li>\n<li>Action Spectra: broad band between 230 and 290nm and 210nm<ul>\n<li>250,270nm: $\\pi\\pi^*$</li>\n<li>230nm: $n\\pi^*$</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"Distonic-Isomers-and-Tautomers-of-Adenine-Cation-Radical-in-the-Gas-Phase-and-Aqueous-Solution\"><a href=\"#Distonic-Isomers-and-Tautomers-of-Adenine-Cation-Radical-in-the-Gas-Phase-and-Aqueous-Solution\" class=\"headerlink\" title=\"Distonic Isomers and Tautomers of Adenine Cation Radical in the Gas Phase and Aqueous Solution\"></a><jump id=\"l1\"><a href=\"https://pubs.acs.org/doi/10.1021/jp046575q\" target=\"_blank\" rel=\"noopener\">Distonic Isomers and Tautomers of Adenine Cation Radical in the Gas Phase and Aqueous Solution</a></jump></h1><h2 id=\"Background-2\"><a href=\"#Background-2\" class=\"headerlink\" title=\"Background\"></a>Background</h2><ul>\n<li>Distonic/ylid ions<ul>\n<li>nonclassical open-shell species in which the charge and radical sites reside on separate atoms</li>\n<li>often more stable than isomeric canonical cation-radical structures</li>\n</ul>\n</li>\n<li>DNA damage mechanism: direct ionization produce cation radicals and electron capture leading to anion radicals</li>\n</ul>\n<h2 id=\"Note-1\"><a href=\"#Note-1\" class=\"headerlink\" title=\"Note\"></a>Note</h2><ul>\n<li>protonation of gas phase under CI depends on PA</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/yueliu96/blog_images/master/Screen%20Shot%202019-01-12%20at%2016.22.32.png\" alt=\"PA_A\"></p>\n<ul>\n<li>$pK_a$ of N-9, N-10, C-2 and C-8: 3.2, 3.3, 6.2 and 11.9</li>\n<li>CAD of $AH^+$: M-H; M-NH3 (H transfer from $N_1,\\ N_3\\ or\\ N_7$ on amino group); ring cleavage M-HCN, consecutive -$CH2N2$</li>\n<li>DFT calcualtion<ul>\n<li>amino group shows less pyramidization</li>\n<li>removing an electron from orbitals that has nodal surfaces decreases the $\\pi$-antibonding interaction resulting in shortening bonds</li>\n<li>polar solvents are known to affect the realtive stabilites of nucleobase tautomers greatly</li>\n</ul>\n</li>\n<li>Calcualtion result<ul>\n<li>elimination of $NH_3$ is the lowest-energy channel that requires $\\Delta H_{rxn,0}=371kJ\\ mole^{-1}$</li>\n<li>loss of a H is also endothermic</li>\n<li>a small activation energy for the addition of H to C-2 position</li>\n<li>H attached to N-10 is exothermic, $\\Delta G=383kJ mol^{-1}$, which is sufficient to drive exothermic hydrogen transfer from … to it<ul>\n<li>methyl group in T</li>\n<li>SH group in C</li>\n<li>OH in Tyr</li>\n<li>$C_{\\alpha}$ methines of the peptide backbone</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"Adenine-Radicals-in-the-Gas-Phase-An-Experimental-and-Computational-Study-of-Hydrogen-Atom-Adducts-to-Adenine\"><a href=\"#Adenine-Radicals-in-the-Gas-Phase-An-Experimental-and-Computational-Study-of-Hydrogen-Atom-Adducts-to-Adenine\" class=\"headerlink\" title=\"Adenine Radicals in the Gas Phase. An Experimental and Computational Study of Hydrogen Atom Adducts to Adenine\"></a><jump id=\"l2\"><a href=\"https://pubs.acs.org/doi/abs/10.1021/jp0529725\" target=\"_blank\" rel=\"noopener\">Adenine Radicals in the Gas Phase. An Experimental and Computational Study of Hydrogen Atom Adducts to Adenine</a></jump></h1><p><img src=\"https://raw.githubusercontent.com/yueliu96/blog_images/master/Screen%20Shot%202019-01-13%20at%2012.36.45.png\" alt=\"dna damage scheme\"></p>\n<ul>\n<li>the elusive hydrogen atom adduct to the N-1 position in A, which is thought to be the initial intermediate of chemical damage<ul>\n<li>N-1 is 48-130 times more basic than N-3</li>\n</ul>\n</li>\n<li>C-8 adduct is the most stable tautuomer, which is predicted to be the prdominating product at thermal equilibrium in solution at 298K</li>\n<li>proton transfer from $H_3O^+ or\\ NH_4^+$ to Ade is exthothermic</li>\n</ul>\n<h1 id=\"Dependence-of-Spurious-Charge-Transfer-Excited-States-on-Orbital-Exchange-in-TDDFT-Large-Molecules-and-Clusters\"><a href=\"#Dependence-of-Spurious-Charge-Transfer-Excited-States-on-Orbital-Exchange-in-TDDFT-Large-Molecules-and-Clusters\" class=\"headerlink\" title=\"Dependence of Spurious Charge- Transfer Excited States on Orbital Exchange in TDDFT: Large Molecules and Clusters\"></a><a href=\"https://pubs.acs.org/doi/10.1021/ct600282k\" target=\"_blank\" rel=\"noopener\">Dependence of Spurious Charge- Transfer Excited States on Orbital Exchange in TDDFT: Large Molecules and Clusters</a></h1><ul>\n<li>intensity of CT ransitions is likely to be exaggerated by TDDFT calcualtions</li>\n<li>Density functional theory formally permits the expression of the total ground-state energy and other properties of a quantum many-body systme as functionals of the electron density alone and provides a formally exact scheme for solving the many-body problem</li>\n<li>TDDFT is an extension of DFT in which many-body excitations are associated with the poles of the exact density response</li>\n<li>6-31G basis sets: an efficient blend of accuracy and manageablw size for large confugated molecules<ul>\n<li>6-31G*: with polarization functions</li>\n<li>6-31+G: with diffuse functions</li>\n</ul>\n</li>\n<li>Charge transfer states<ul>\n<li>photexcited electron and hole are significant spatial separation</li>\n<li>usually higher in energy than the relevant Frenkel-exciton band of optical (nonvanishing oscillator-strength) and dark (vanishing oscillater-strength) states</li>\n<li>however, DFT methods drastically underesetimate their energies $\\rightarrow$ all 3 types of states in dimers might be mixed</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"Electron-Detachment-Energies-and-Isomerism-in-Purinic-Deoxyribonucleotides\"><a href=\"#Electron-Detachment-Energies-and-Isomerism-in-Purinic-Deoxyribonucleotides\" class=\"headerlink\" title=\"Electron Detachment Energies and Isomerism in Purinic Deoxyribonucleotides\"></a><jump id=\"ion1\"><a href=\"https://onlinelibrary.wiley.com/doi/abs/10.1002/qua.21330\" target=\"_blank\" rel=\"noopener\">Electron Detachment Energies and Isomerism in Purinic Deoxyribonucleotides</a></jump></h1><h1 id=\"Ab-Initio-Electron-Propagator-Methods-Applications-to-Nucleic-Acids-Fragments-and-Metallophthalocyanines\"><a href=\"#Ab-Initio-Electron-Propagator-Methods-Applications-to-Nucleic-Acids-Fragments-and-Metallophthalocyanines\" class=\"headerlink\" title=\"Ab Initio Electron Propagator Methods: Applications to Nucleic Acids Fragments and Metallophthalocyanines.\"></a><jump id=\"ion2\"><a href=\"https://onlinelibrary.wiley.com/doi/abs/10.1002/qua.22836\" target=\"_blank\" rel=\"noopener\">Ab Initio Electron Propagator Methods: Applications to Nucleic Acids Fragments and Metallophthalocyanines.</a></jump></h1><h1 id=\"Ion-Ion-Reactions-New-Chemistry-for-Analytical-MS\"><a href=\"#Ion-Ion-Reactions-New-Chemistry-for-Analytical-MS\" class=\"headerlink\" title=\"Ion/Ion Reactions: New Chemistry for Analytical MS\"></a><a href=\"https://pubs.acs.org/doi/abs/10.1021/ac9014935\" target=\"_blank\" rel=\"noopener\">Ion/Ion Reactions: New Chemistry for Analytical MS</a></h1><h1 id=\"One-Electron-Oxidation-of-DNA-Oligomers-That-Lack-Guanine-Reaction-and-Strand-Cleavage-at-Remote-Thymines-by-Long-Distance-Radical-Cation-Hopping\"><a href=\"#One-Electron-Oxidation-of-DNA-Oligomers-That-Lack-Guanine-Reaction-and-Strand-Cleavage-at-Remote-Thymines-by-Long-Distance-Radical-Cation-Hopping\" class=\"headerlink\" title=\"One-Electron Oxidation of DNA Oligomers That Lack Guanine:  Reaction and Strand Cleavage at Remote Thymines by Long-Distance Radical Cation Hopping\"></a><a href=\"https://pubs.acs.org/doi/abs/10.1021/ja058758b\" target=\"_blank\" rel=\"noopener\">One-Electron Oxidation of DNA Oligomers That Lack Guanine:  Reaction and Strand Cleavage at Remote Thymines by Long-Distance Radical Cation Hopping</a></h1><h1 id=\"Transient-Intermediates-of-Chemical-Reactions-by-Neutralization—Reionization-Mass-Spectrometry\"><a href=\"#Transient-Intermediates-of-Chemical-Reactions-by-Neutralization—Reionization-Mass-Spectrometry\" class=\"headerlink\" title=\"Transient Intermediates of Chemical Reactions by Neutralization—Reionization Mass Spectrometry\"></a><jump id=\"ref\"><a href=\"https://link.springer.com/chapter/10.1007/3-540-36113-8_3\" target=\"_blank\" rel=\"noopener\">Transient Intermediates of Chemical Reactions by Neutralization—Reionization Mass Spectrometry</a></jump></h1><h1 id=\"What-Hinders-Electron-Transfer-Dissociation-ETD-of-DNA-Cations\"><a href=\"#What-Hinders-Electron-Transfer-Dissociation-ETD-of-DNA-Cations\" class=\"headerlink\" title=\"What Hinders Electron Transfer Dissociation (ETD) of DNA Cations?\"></a><a href=\"https://link.springer.com/article/10.1007%2Fs13361-017-1791-z\" target=\"_blank\" rel=\"noopener\">What Hinders Electron Transfer Dissociation (ETD) of DNA Cations?</a></h1><h1 id=\"Proton-and-hydrogen-atom-adducts-to-cytosine-An-experimental-and-computational-study\"><a href=\"#Proton-and-hydrogen-atom-adducts-to-cytosine-An-experimental-and-computational-study\" class=\"headerlink\" title=\"Proton and hydrogen atom adducts to cytosine. An experimental and computational study\"></a><a href=\"https://www.sciencedirect.com/science/article/pii/S1387380607000279\" target=\"_blank\" rel=\"noopener\">Proton and hydrogen atom adducts to cytosine. An experimental and computational study</a></h1><h1 id=\"Toward-True-DNA-Base-Stacking-Energies-MP2-CCSD-T-and-Complete-Basis-Set-Calculations\"><a href=\"#Toward-True-DNA-Base-Stacking-Energies-MP2-CCSD-T-and-Complete-Basis-Set-Calculations\" class=\"headerlink\" title=\"Toward True DNA Base-Stacking Energies: MP2, CCSD(T), and Complete Basis Set Calculations\"></a><a href=\"https://pubs.acs.org/doi/10.1021/ja026759n\" target=\"_blank\" rel=\"noopener\">Toward True DNA Base-Stacking Energies: MP2, CCSD(T), and Complete Basis Set Calculations</a></h1><h1 id=\"Purine-bases-nucleosides-and-nucleotides-aqueous-solution-redox-chemistry-and-transformation-reactions-of-their-radical-cations-and-e-and-OH-adducts\"><a href=\"#Purine-bases-nucleosides-and-nucleotides-aqueous-solution-redox-chemistry-and-transformation-reactions-of-their-radical-cations-and-e-and-OH-adducts\" class=\"headerlink\" title=\"Purine bases, nucleosides, and nucleotides: aqueous solution redox chemistry and transformation reactions of their radical cations and e- and OH adducts\"></a><a href=\"https://pubs.acs.org/doi/10.1021/cr00093a003\" target=\"_blank\" rel=\"noopener\">Purine bases, nucleosides, and nucleotides: aqueous solution redox chemistry and transformation reactions of their radical cations and e- and OH adducts</a></h1><h1 id=\"Proton-coupled-Electron-Transfer-in-DNA-on-Formation-of-Radiation-produced-Ion-Radicals\"><a href=\"#Proton-coupled-Electron-Transfer-in-DNA-on-Formation-of-Radiation-produced-Ion-Radicals\" class=\"headerlink\" title=\"Proton-coupled Electron Transfer in DNA on Formation of Radiation-produced Ion Radicals\"></a><a href=\"http://pubs.acs.org/doi/abs/10.1021/cr100023g\" target=\"_blank\" rel=\"noopener\">Proton-coupled Electron Transfer in DNA on Formation of Radiation-produced Ion Radicals</a></h1><h1 id=\"Induction-of-Strand-Breaks-in-Single-stranded-Polyribonucleotides-and-DNA-by-Photoionization-One-Electron-Oxidized-Nucleobase-Radicals-as-Precursors\"><a href=\"#Induction-of-Strand-Breaks-in-Single-stranded-Polyribonucleotides-and-DNA-by-Photoionization-One-Electron-Oxidized-Nucleobase-Radicals-as-Precursors\" class=\"headerlink\" title=\"Induction of Strand Breaks in Single-stranded Polyribonucleotides and DNA by Photoionization: One Electron Oxidized Nucleobase Radicals as Precursors\"></a><a href=\"https://pubs.acs.org/doi/abs/10.1021/ja961722m\" target=\"_blank\" rel=\"noopener\">Induction of Strand Breaks in Single-stranded Polyribonucleotides and DNA by Photoionization: One Electron Oxidized Nucleobase Radicals as Precursors</a></h1><h1 id=\"How-Easily-Oxidizable-is-DNA-One-electron-Reduction-Potentials-of-Adenosine-and-Guanosine-Radicals-in-Aqueous-Solution\"><a href=\"#How-Easily-Oxidizable-is-DNA-One-electron-Reduction-Potentials-of-Adenosine-and-Guanosine-Radicals-in-Aqueous-Solution\" class=\"headerlink\" title=\"How Easily Oxidizable is DNA? One-electron Reduction Potentials of Adenosine and Guanosine Radicals in Aqueous Solution\"></a><a href=\"https://pubs.acs.org/doi/10.1021/ja962255b\" target=\"_blank\" rel=\"noopener\">How Easily Oxidizable is DNA? One-electron Reduction Potentials of Adenosine and Guanosine Radicals in Aqueous Solution</a></h1><h1 id=\"Structure-and-Acid-base-Properties-of-One-electron-oxidized-Deoxyguanosine-Guanosine-and-1-Methylguanosine\"><a href=\"#Structure-and-Acid-base-Properties-of-One-electron-oxidized-Deoxyguanosine-Guanosine-and-1-Methylguanosine\" class=\"headerlink\" title=\"Structure and Acid-base Properties of One-electron-oxidized Deoxyguanosine, Guanosine, and 1-Methylguanosine\"></a><jump id=\"gasbetter\"><a href=\"https://pubs.acs.org/doi/10.1021/ja00185a046\" target=\"_blank\" rel=\"noopener\">Structure and Acid-base Properties of One-electron-oxidized Deoxyguanosine, Guanosine, and 1-Methylguanosine</a></jump></h1>"},{"title":"Scientific Computing","date":"2019-01-02T21:28:18.000Z","_content":"\n*A manual for individual use, which focuses on how to solve ordinary and partial differential equation numerically, including how to solve initial value problem with Euler, 2nd- and 4th- order Runge-Kutta and Adams-Bashford method; how to handle boundary value problem with shooting method and direct method and how to deal with PDE with finite difference schemes and spectral methods. Quantum Harmonic Oscillator, Vorticity-Streamfunction Equations, Reaction-Diffusion Systems are are discussed.*\n\n# Initial Value Problem\n\n$$\n\\frac{d\\overrightarrow{y}}{dt}=f(t,\\overrightarrow{y}) \\quad \\overrightarrow{y}(0)=\\overrightarrow{y_0} \\quad t\\in[0,T]\n$$\n\n## Forward Euler Method\n\nThis is the simplest algorithm for solving this problem, which is derived from the definition of the derivative:\n\n$$\n\\frac{d\\overrightarrow y}{dt}=\\lim_{\\Delta t \\to 0} \\frac{\\Delta\\overrightarrow y}{\\Delta t} \\approx \\frac{\\overrightarrow y_{n+1}-\\overrightarrow y_n}{t_{n+1}-t_n}\n$$\n\nFrom the above equation, we can get:\n\n$$\n\\overrightarrow{y}_{n+1} = \\overrightarrow y_n + \\Delta t \\cdot f(t_n,\\overrightarrow y_n)\n$$\n\nNote that each subsequenct approximation in Euler Method is generated from the slope of the previous point. Considering the error coulde be very large, we need to find some ways to improve it.\n\n## Improved from Euler Method\n\n One way we can think of is to use the slope of other points instead of that of the previous one to predict the next point. For example, the average slope (Heun's Method), or the slope of the midpoint (RK2).\n \n### Heun's \n  \n  $$y_{n+1}=y_n+\\frac{\\Delta t}{2}[f(t_n,y_n)+f(t_{n+1},y_{n+1})]$$\n\n### RK2 \n  \n  $$y_{n+1}=y_n+\\Delta t \\cdot f[t_n+\\frac{\\Delta t}{2},y(t_n+\\frac{\\Delta t}{2})]$$\n\n### In general \n  \n  $$y_{n+1}=y_n+\\Delta t[A \\cdot f(t_n,y_n)+B \\cdot f(t+P\\Delta t,y_n+Q\\Delta t \\cdot f(t_n,y_n)\\\\\\\\\n  where\\quad A+B=1\\quad B\\cdot P=\\frac{1}{2}\\quad B\\cdot Q=\\frac{1}{2}$$\n\n- If $A=\\frac{1}{2}\\Rightarrow B=\\frac{1}{2}\\Rightarrow P=1\\Rightarrow Q=1\\Rightarrow$Heun's Method\n- If $A=0\\Rightarrow B=0\\Rightarrow P=\\frac{1}{2}\\Rightarrow Q=\\frac{1}{2}\\Rightarrow$RK2 Method\n  \n### RK4\n  \n$$y_{n+1}=y_n+\\frac{\\Delta t}{6}(f_1+2f_2+2f_3+f_4)\\\\\\\\\nf_1=f(t_n,y_n)\\\\\\\\\nf_2=f(t_n+\\frac{\\Delta t}{2},y_n+\\frac{\\Delta t}{2}\\cdot f_1)\\\\\\\\\nf_3=f(t_n+\\frac{\\Delta t}{2},y_n+\\frac{\\Delta t}{2}\\cdot f_2)\\\\\\\\\nf_4=f(t_n+\\frac{\\Delta t}{2},y_n+\\frac{\\Delta t}{2}\\cdot f_3)$$\n\n### Summary and Error Analysis\n\n| Scheme | Local Error | Global Error | Matlab | Python\n|----|----|----|----|----|\n|Forward Euler|$\\Delta t^2$|$\\Delta t$|||\n|Heun's/RK2|$\\Delta t^3$|$\\Delta t^2$|ode23|Method=RK23\n|RK4|$\\Delta t^5$|$\\Delta t^4$|ode45|Method=RK45\n\nThe error in numerical algorithm not only comes from the local error (truncated error) in the algorithm iteself, but also arises from round off error since computer can only keep limit digits of number: $Error_{total}=\\varepsilon_{round\\ off}+\\varepsilon_{truncate}$. If the round-off error is dominant, our algorithm can be unstable to be used. That's why Backward Euler Method is introduced.\n\n## Backward Euler Method\n\nIt is an implicit method, which is more stable\n\n$$y_n=y_{n+1}-\\Delta t \\cdot f(t_{n+1},y_{n+1})$$\n\nExample:\n\n$$\\frac{dy}{dt}=\\lambda y\\quad y(0)=y_0$$\n\n- FE:\n  $$y_{n+1}=y_n+\\Delta t \\cdot f(t_n,y_n)=y_n+\\Delta t \\cdot \\lambda y \\Rightarrow y_n=(y_0+\\varepsilon_{round\\_off})(1+\\Delta t \\lambda)^N$$\n  set  $r_{FE}=(1+\\Delta t \\lambda)^N\\Rightarrow y_n=y_0\\cdot r_{FE}^N+\\varepsilon_{round\\_off}\\cdot r_{FE}^N$\n  \n  - $\\lambda>0\\Rightarrow |r_{FE}|>1\\Rightarrow$ unconditionally unstable\n  - $\\lambda<0\\Rightarrow |r_{FE}|<1\\Rightarrow \\begin{cases} \\Delta t<\\frac{2}{|\\lambda|} & stable\\\\\\\\ \\Delta t>\\frac{2}{|\\lambda|} & unsatble\\\\ \\end{cases}$\n  \n- BE:\n  \n  $$y_n=y_{n+1}-\\Delta t\\cdot \\lambda\\cdot y_{n+1}\\Rightarrow y_{n+1}=r_{BE}\\cdot y_n,\\ where\\ r_{BE}=\\frac{1}{1-\\Delta t\\lambda}\\\\\\\\ \n  y_n=y_0\\cdot r_{BE}^N+\\varepsilon_{round\\_off}\\cdot r_{BE}^N$$\n    - $\\lambda<0\\Rightarrow |r_{FE}|<1\\Rightarrow$ unconditionally stable\n    - $\\lambda>0\\Rightarrow |r_{FE}|<1\\Rightarrow \\begin{cases} \\Delta t>\\frac{2}{|\\lambda|} & stable\\\\\\\\ \\Delta t<\\frac{2}{|\\lambda|} & unsatble\\\\ \\end{cases}$\n \n## MultiStep Method\n\n - Adams-Bash forth (explicit method)\n  $$y_{n+1}=y_n+\\frac{\\Delta t}{2}(3f_n-f_{n-1})$$ \n - Adams-Moulthon (implicit method)\n  $$y_{n+1}=y_n+\\frac{\\Delta t}{2}(f_{n+1}+f_n)$$\n - Predictor-Corrector\n  $$y_{n+1}^P=y_n+\\frac{\\Delta t}{2}(3f_n-f_{n-1})\\\\\\\n  y_{n+1}=y_n+\\frac{\\Delta t}{2}[f(t_{n+1},y_{n+1}^P)+f_n]$$\n\n## Matlab for ODE45\n\nsolve this equation $\\frac{d^2y(t)}{dt^2}+\\epsilon[y^2(t)-1]\\frac{dy(t)}{dt}+y(t)=0$ with $\\epsilon$=0.1, t=[0:0.5:32], y(t=0)=$\\sqrt 3$ and $\\frac{dy(t=0)}{dt}$=1 by ode45 method.\n\n```matlab\nfunction f = fvdposc(t,y,epsilon)\nf1 = y(2);                          %f1=y'\nf2 = -epsilon*(y(1)^2-1)*y(2)-y(1);%f2=y''\nf = [f1;f2];    %f must be a column vector\t\n```\n\n```matlab\nabstol=10^-6;reltol=10^-6;\noptions = odeset('AbsTol',abstol,'RelTol',reltol);\n%if options not specified, use the default one. the other items must be there.\n[T,Y] = ode45( @(t,y) fvdposc(t,y,epsilon),tspan,y0,options);\n```\n\nIn this way, we can get Y is a [65 $\\times$ 2] matrix. This first column is the y values in tspan, and the other columne is y' values in tspan.\n\n\n# Boundary Value Problem\n\nThere might be multiple solutions to this kind of problem, and we should choose those suit boundary conditions. Let's start with a simple case:\n\n$$\n\\frac{d^2y}{dt^2} = f(t,y,\\frac{dy}{dt})\\quad y(a) = \\alpha\\quad y(b) = \\beta\n$$\n\n## Shooting Method\n\nActually, BVP is  comparable to IVP:\n\n-    IVP: y(a)=$\\alpha$, y'(a)=A\n-    BVP: y(a)=$\\alpha$, y(b)=$\\beta$\n\nSo we can guess an initial condition to see how difference the result from the other boundary value; and decide a new initial guess to repeat the above process until the result reaches the other boundary value.\n\n## Direct-Linear BVP\n\nHere we can consider a general case:\n\n$$\n\\frac{d^2y}{dt^2}=p(t)\\frac{dy}{dt}+q(t)y+r(t)\\\\\\\\\n\\alpha_1y(a)+\\beta_1y'(a)=\\gamma_1\\\\\\\\\n\\alpha_2y(b)+\\beta_2y'(b)=\\gamma_2\n$$\n\nCombine Taylor series and central difference method $y'=\\frac{y(t+\\Delta t)-y(t-\\Delta t)}{2\\Delta t}+O(\\Delta t^2)$, we can get $y''=\\frac{y(t+\\Delta t)-2y(t)+y(t-\\Delta t)}{\\Delta t^2}+O(\\Delta t^2)$. Finally, we can get: \n\n$$[1-\\frac{p(t)\\Delta t}{2}]\\cdot y(t+\\Delta t)-[2+q(t)\\Delta t^2]\\cdot y(t)+[1+\\frac{p(t)\\Delta t}{2}]\\cdot y(t-\\Delta t)=r(t)\\Delta t^2$$\n\nConvert it in to matrix form:\n\n$$A\\times \\overrightarrow x = \\overrightarrow b$$\n\n$$ \\begin{pmatrix} 1 & 0 &\\cdots &\\cdots &\\cdots & 0 \\\\\\\\ a & b & c & 0 &\\cdots &0 \\\\\\\\0&a&b&c&\\cdots&0\\\\\\\\\\vdots&\\ddots&\\ddots&\\ddots&\\ddots&\\vdots\\\\\\\\\\vdots&\\ddots&\\ddots&a&b&c\\\\\\\\0&\\cdots&\\cdots&\\cdots&a&1 \\end{pmatrix} \\times \\begin{pmatrix}y(t_0)\\\\\\\\y(t+\\Delta t)\\\\\\\\y(t+2\\Delta t)\\\\\\\\\\vdots\\\\\\\\\\vdots\\\\\\\\y(t_N) \\end{pmatrix}=\\begin{pmatrix} \\alpha\\\\\\\\r(t+\\Delta t)\\Delta t^2\\\\\\\\ r(t+2\\Delta t)\\Delta t^2\\\\\\\\\\vdots\\\\\\\\\\vdots\\\\\\\\\\beta \\end{pmatrix}$$\n\nIn Matlab, we can use function `X=A\\b` or `eig(A)` to solve it; in python(numpy), function `linalg.solve(A,b)` or `eig(A)` also works.\n\n## Newton-Raphson Method\n\nOne thing must be noted that, initial guess for this method should be close to the real value, otherwise it may diverge.\n$$x_{n+1}=x_n-\\frac{f(x_n)}{f'(x_n)}$$\n\n## Summary\n\n1. Approximate y', y'' using central difference formula;\n2. Approximate boundary condition using FDF, DBF\n3. Solve $A\\overrightarrow x=\\overrightarrow b$\n4. solution--O($\\Delta t^2$)\n\n## Quantum Harmonic Oscillation\n\n$$\\frac{d^2\\phi_n}{dx^2}-[Kx^2-\\varepsilon_n]\\phi_n=0$$\nwe expect the solution $\\phi_n(x)\\rightarrow 0$ as $x\\rightarrow \\pm \\infty$ and $\\varepsilon_n>0$ is the quantum energy. Note that $K=km/\\hbar^2$ and $\\varepsilon_n=E_nm/\\hbar^2$. Here take K=1, and always normalize so that $\\int_{-\\infty} ^{+\\infty} {|\\phi_n|^2} \\,{\\rm d}x=1$. Calculate the first five normalized eigenfunctions ($\\phi_n$) and eigenvalues($\\varepsilon_n$) up to tolerance of $10^{-4}$ in increasing order such that the first eigenvalue is the lowest one.\n\n- Shooting method\n\n ```matlab\nfunction f=pdefunc(x,y,e)\n\nf1 = y(2);\nf2 = (x^2-e)*y(1);\n\nf = [f1;f2];\n ```\n\n ```matlab\nL=4; dx=0.1; e_start=0.5; tol=10^-4;\n\nxspan = -L:dx:L;\nA = 1; % suggest A=phi(-L)=phi(L)\n\nfor modes=1:5\n    e = e_start;\n    de=0.01;\n    for j=1:1000\n        y0 = [A;A*sqrt(L^2-e)];\n        \n        [x,phi] = ode45( @(x,phi) pdefunc(x,phi,e), xspan ,y0);\n        \n        rightbc = phi(end,2)+sqrt(L^2-e)*phi(end,1);\n        if abs(rightbc)<tol\n            eigen_e(modes,1)=e;\n            break;\n        end\n        \n        if (-1)^(1+modes)*rightbc>0\n            e = e+de;\n        else\n            de = de/2;\n            e = e-de;\n        end\n    end\n    eigen_phi(:,modes) = phi(:,1)/sqrt(trapz(x,phi(:,1).^2));\n        e_start = e+0.2;\nend\n\n%eigen_phi,eigen_e are what we want\n ```\n\n- Direct Method\n\n ```matlab\nL=4; dx=0.1; \nxspan = -L:dx:L;\nmax = length(xspan)-2;\nA = zeros(max,max);\nphi_sort = zeros(max+2,max+2);\n% build up A matrix which doesn't consider phi(x1) and phi(xn). A is built\n% based on 2nd order central difference. The first and last row don't\n% consider x1 and xn, use FDF and BDF and approximation to make phi(x2) and\n% phi(x3) express phi(x1); phi(xn-2) and phi(xn-1) express phi(xn).\nA(1,1:2) = [2/3/dx^2+xspan(2)^2,-2/3/dx^2];\nA(end,end-1:end) = [-2/3/dx^2,2/3/dx^2+xspan(end-1)^2];\ni = 2;\nwhile i<max\n    A(i,i-1) = -1/dx^2;\n    A(i,i+1) = -1/dx^2;\n    A(i,i) = 2/dx^2+xspan(i+1)^2;\n    i=i+1;\nend\n%phi function only contains [phi(2),phi(3),...phi(n-2),phi(n-1)]\n[phi,e]=eig(A);\n\n%sort phi function based on ascending energy.\nfor i=1:max\n    eng(i,1) = e(i,i);\nend\n\n[eng, Index_eng] = sort(eng);\n\n%only get the first five phi functions. \n%phi(1)/phi(N) are calculated based on FDF/BDF method without approximation.\nfor i =1:5\n    phi_sort(2:end-1,i) = phi(:,Index_eng(i));\n    phi_sort(1,i) = (4*phi_sort(2,i)-phi_sort(3,i))/(3+2*dx*sqrt(L^2-eng(i)));\n    phi_sort(end,i) = (4*phi_sort(end-1,i)-phi_sort(end-2,i))/(3+2*dx*sqrt(L^2-eng(i)));\n    phi_sort(:,i) = phi_sort(:,i)/sqrt(trapz(xspan,phi_sort(:,i).^2));\nend\n\n%phi_sort,eng is the result\n ```\n\n- Shooting for nonlinear cases\n  \n$$\\frac{d^2\\phi_n}{dx^2}-[\\gamma |\\phi_n|^2+Kx^2-\\varepsilon_n]\\phi_n=0$$\\\n\nStill use $x\\in [-L,L]$ with L=2 and choose xspan = -L:0.1:L. Find the first two normalized modes for  $\\gamma=0.05$:\n\n ```matlab\nL=2; dx=0.1; e_start=0.5; tol=10^-4; gama=0.05; A_start=0.2;\nxspan = -L:dx:L;\n\nfor modes=1:2\n    e = e_start;\n    de=0.01;\n    for j=1:1000\n        A = A_start;\n        dA = 0.1;\n        for a=1:1000\n            y0 = [A;A*sqrt(L^2-e)];\n            \n            [x,phi] = ode45( @(x,phi) nolinpdefunc(x,phi,gama,e), xspan ,y0);\n         \n            AA = trapz(x,phi(:,1).^2);\n           \n            if abs(AA-1)<tol\n                opt_A(modes,1)=A;\n                break;\n            end\n            if AA>1\n                A = A-dA;\n            else\n                dA = dA/2;\n                A = A+dA;\n            end       \n        end\n        \n        rightbc = phi(end,2)+sqrt(L^2-e)*phi(end,1);\n        if abs(rightbc)<tol\n            eigen_e(modes,1)=e;\n            break;\n        end\n        \n        if (-1)^(1+modes)*rightbc>0\n            e = e+de;\n        else\n            de = de/2;\n            e = e-de;\n        end\n    end\n    e_start = e+1;\n    A_start = A+1;\n    eigen_phi(:,modes) = phi(:,1)/sqrt(trapz(x,phi(:,1).^2));    \nend\n ```\n\n# Partial Differential Equations\n\nSolving PDE is harder than ODE, because we need to consider both initial conditions and boundary conditions, also need to solve both in time and in space. The classic PDE is vortivity-streamfunction equations and reaction-diffusion systems. We will go through these two systems to show how to slove PDE.\n\n## Finite Scheme Method for Vorticity-Streamfunction Equations\n\n$$\\omega_t+[\\psi,\\omega]=\\mu\\nabla^2\\psi\\quad \\nabla^2\\psi=\\omega\\\\\\\\\nwhere\\; [\\psi,\\omega]=\\psi_x\\omega_y-\\psi_y\\omega_x \\; and \\; \\nabla^2=\\partial_x^2+\\partial_y^2$$\n\n- Steps:\n 1. Elliptic Solve: given $\\omega_0 \\rightarrow$ compute $\\psi_0$ by using $\\nabla^2\\psi=\\omega$\n 2. Time-Stepping: choose step $\\Delta t$ compute $\\omega '$ using $\\omega_{k+1}=\\omega_k+\\Delta t\\cdot f(\\psi^k,\\omega^k)$\n 3. Iterate\n\n- Step 1: the elliptic problem\n$$(\\psi_{mn})_{xx}+(\\psi_{mn})_{yy}=\\omega_{mn}$$\nBy using CDF:\n$$\\frac{\\psi_{m-1,n}-2\\psi_{m,n}+\\psi_{m+1,n}}{\\Delta x^2}+\\frac{\\psi_{m,n-1}-2\\psi_{m,n}+\\psi_{m,n+1}}{\\Delta y^2}=\\omega_{m,n}\\delta^2$$\nIf we set $\\Delta x=\\Delta y$, and reshape the matrix $\\psi_{m,n}$ and $\\omega_{m,n}$ (m=n)to vectors (the same thing as matlab fucntion `reshape(matrix,n^2,1)`), we can write the above equation into a matrix form:\n$$A\\overrightarrow \\psi = \\overrightarrow \\omega $$\nwhere $A=A'/\\delta^2$, $A'=A_D+A_x+A_y$, $A_D=-4\\psi_{m,n}$, $A_x=\\psi_{m-1,n}+\\psi_{m,n-1}$ and $A_y=\\psi_{m,n-1}+\\psi_{m,n+1}$\n\n- *Matlab script*\n    \n    $A=\\nabla^2$, $B=\\partial_x$, $C=\\partial_y$\n\n ```matlab\nfunction [A B C] = derivmatrix(dx,dy,n)\n\ne1 = ones(n^2,1);\n%A = dx^2+dy^2\n\n%A = (AD+AX+AY)/dx/dy; AD=-4y(m,n),AX=y(m-1,n)+y(m+1,n), AY=y(m,n-1)+y(m,n+1)\nAD = spdiags(-4*e1,0,n^2,n^2); \nAD(1,1)=2;%set the first element not -4 to avoid denominator too small\nAX = spdiags([e1 e1 e1 e1],[-(n-1)*n -n n n*(n-1)],n^2,n^2);\nAY = spdiags([e1 e1],[-1 1],n^2,n^2);\nfor i=1:n\n    AY(1+n*(i-1),n*i) = 1;\n    AY(n*i,1+n*(i-1)) = 1;\n    if i<n\n        AY(n*i,1+n*i) = 0;\n        AY(1+n*i,n*i) = 0;\n    end\nend\nA = (AD+AX+AY)/(dx*dy);\n\n%B = dx\n%B = (y(m+1,n)-y(m-1,n))/(2*dx)\nB = spdiags([e1 -e1 e1 -e1],[-(n-1)*n -n n n*(n-1)],n^2,n^2)/(2*dx);\n\n%C = dy\n%C = (y(m,n+1)-y(m,n-1))/(2*dy)\nC = spdiags([-e1 e1],[-1,1],n^2,n^2);\nfor i=1:n\n    C(1+n*(i-1),n*i) = -1;\n    C(n*i,1+n*(i-1)) = 1;\n    if i<n\n        C(n*i,1+n*i) = 0;\n        C(1+n*i,n*i) = 0;\n    end\nend\nC = C/(2*dy);\n ```\n\nthen, we could use one of these two method to slove $\\psi$\n\n ```matlab\npsi = A\\w;\n ```\n\n ```matlab\n [L,U,P] = lu(A);\n y = L\\(P*w);\n psi = U\\y;\n ```\n\n- Step 2: Method Line\n\n$$\n\\nabla^2\\psi(x,y)=f(x,y)\\qquad+b.c.\\\\\\\\\nu_t(t,x)=u_x(t,x)\\quad+i.c.,b.c.\\\\\\\\\nu_x(t,x)\\approx\\frac{u(x+\\Delta x)-u(x-\\Delta x)}{2\\Delta x}\n$$\nWe have to condiser the stability of this method. Choose $\\lambda$ carefully to make sure it is stable and also will not run forever.\n$$u_n^{(m)}=g^mexp(i\\zeta\\Delta x)\\\\\\\\\n\\lambda =\\frac{\\Delta t^{num-t-der}} {\\Delta x^{num-x-der}}$$\n\n## Spectral Method for Vorticity-Streamfunction Equations\n\nexpand u(x,t):\n\n$$u(x,t)=\\sum_{k=1}^N a_k(t)\\phi_k(x)\\qquad$$\n where $\\phi_k(x)$are orthogonal\nUsing Fourier Series\n\n$$\\widehat{u}(t)=u(k,t)=\\sum_{n=1}^N u(n,t)e^{-i2\\pi(k-1)(n-1)/N}\\\\\\\\\\qquad\\;u(n,t)=1/N\\sum_{n=1}^N \\widehat u(t)e^{i2\\pi(k-1)(n-1)/N}$$\nDerivative property:\n$$\\widehat u^{(m)}(x,t)=(ik)^{(m)}\\widehat u(k,t)$$\nPDE  Fourier Space\n$$u_t=Lu+N(u) \\Longrightarrow \\widehat(u)_t=\\alpha(k)\\widehat u+\\widehat N(u)$$\nHere attached the script for solve VSE by the above two methods.\n\n```matlab\nclear all; clf; close all; clc\nnu = 0.001;\nn=64;\nL=10;\ntspan = 0:0.5:4;\n\nw1 = runvs(L,n,tspan,nu,1);\n\nw2 = runvs(L,n,tspan,nu,2);\n\nw3 = runvs(L,n,tspan,nu,3);\n```\n\n```matlab\nfunction wfsol = runvs(L,n,tspan,nu,choice)\n\nx2 = linspace(-L/2,L/2,n+1);\nx = x2(1:n);\ndx = x(2)-x(1);\n\n[X,Y] = meshgrid(x);%grid\n[A,B,C] = derivmatrix(dx,dx,n);%apply to vector [64*64,1]\n\nwfinit = exp(-X.^2-Y.^2/20);%grid\nwfinitvect = reshape(wfinit,n^2,1);%vector\n\n[t,wfsol] = ode45(@(t,wfvec) vortstream(t,wfvec,n,nu,A,B,C,choice,1),tspan,wfinitvect);\n\nif choice==3\n    kx = (2*pi/L)*[0:(n/2-1) (-n/2):-1];\n    kx(1) = 1e-6;\n\n    [KX,KY]=meshgrid(kx);\n    K = KX.^2+KY.^2;\n    \n    [t,wfsol] = ode45(@(t,wfvec) vortstream(t,wfvec,n,nu,A,B,C,choice,K)tspan,wfinitvect);\nend\n```\n\n```matlab\nfunction rhs = vortstream(t,w,n,nu,A,B,C,choice,K)\n\nif choice==1\n    psi = A\\w;%vector\nelseif choice==2\n    [L,U,P] = lu(A);\n    y=L\\(P*w);\n    psi = U\\y;\nelse\n    wf = fft2(reshape(w,n,n));\n    psif = -wf./K;\n    psi = reshape(real(ifft2(psif)),n^2,1);\nend\n\nrhs = -(B*psi).*(C*w)+(C*psi).*(B*w)+nu*A*w;%vector\n```\n\n## Chebishev Polynomials\n\n$$\\phi_k(x)=T_k(x)\\quad T_k(cos\\theta)=cosk\\theta$$\nMatlab Script:\n\n```matlab\nfunction [D,x] = cheb(N)\n  if N==0, D=0; x=1; return, end\n  x = cos(pi*(0:N)/N)'; \n  c = [2; ones(N-1,1); 2].*(-1).^(0:N)';\n  X = repmat(x,1,N+1);\n  dX = X-X';                  \n  D  = (c*(1./c)')./(dX+(eye(N+1)));      % off-diagonal entries\n  D  = D - diag(sum(D'));                 % diagonal entries\n```\n\nSolve reaction-diffusion system with both spectral and cheb methods\n$$U_t=\\lambda(A)U-\\omega (A)V+D_1\\nabla^2U\\\\\\\\V_t=\\omega (a)U+\\lambda(A)V+D_2\\nabla^2V$$\nwhere $A^2=U^2+V^2$ and $\\nabla^2=\\partial_x^2+\\partial_y^2$. Consider $\\lambda(A)=1-A^2$ and $\\omega(A)=-\\beta A^2$\n\n```matlab\nclear all; close all; clc\nL=20;n=64;beta=1;d1=0.1;d2=d1;m=1;\ntspan=0:0.5:4;\n\nuv1 = runrds_fft(tspan,L,n,beta,d1,d2,m);\nA1 = real(uv1);\nA2 = imag(uv1);\n\nn=31;\nuv2 = runrds_cheb(tspan,L,n,beta,d1,d2,m);\nA3 = uv2;\n```\nwe consider $x,y \\in[-10,10]$, n=64, $\\beta =1$, $D_1=D_2=0.1$, m=1, tspan=0:0.5:4 and $u_f$ stacked on top of $v_f$.\nThe following is FFT(spectral) method:\n\n```matlab\nfunction xfsol = runrds_fft(tspan,L,n,beta,d1,d2,m)\n\nx2 = linspace(-L/2,L/2,n+1);\nx = x2(1:n);\ny=x;\n\nkx = (2*pi/L)*[0:(n/2-1) (-n/2):-1];\nkx(1) = 1e-6;\nky=kx;\n\n[X,Y]=meshgrid(x,y);\n[KX,KY]=meshgrid(kx,ky);\nK = KX.^2+KY.^2;\nKvec = reshape(K,n^2,1);\n\nuint = tanh(sqrt(X.^2+Y.^2)).*cos(m*angle(X+i*Y)-(sqrt(X.^2+Y.^2)));%grid\nvint = tanh(sqrt(X.^2+Y.^2)).*sin(m*angle(X+i*Y)-(sqrt(X.^2+Y.^2)));\nufint = fft2(uint);\nvfint = fft2(vint);\nufvecint = reshape(ufint,n^2,1);\nvfvecint = reshape(vfint,n^2,1);\nxfvecint = [ufvecint;vfvecint];\n\n[t,xfsol] = ode45(@(t,xfvec) rds_fft(t,xfvec,beta,Kvec,n,d1,d2),tspan,xfvecint);\n\n```\n\n```matlab\nfunction rhs = rds_fft(t,xfvec,beta,Kvec,n,d1,d2)\n\nufvec = xfvec(1:n^2);\nvfvec = xfvec(n^2+1:end);\n\nu = real(ifft2(reshape(ufvec,n,n)));\nv = real(ifft2(reshape(vfvec,n,n)));\nA = u.^2+v.^2;\nl = 1-A;\nw = -beta*A;\n\nuft = reshape(fft2(l.*u-w.*v),n^2,1)-d1*Kvec.*ufvec;\nvft = reshape(fft2(w.*u+l.*v),n^2,1)-d2*Kvec.*vfvec;\n\nrhs = [uft;vft];\n```\n\nThe following is cheb method with n=30 and m=1\n\n```matlab\nfunction xsolvec = runrds_cheb(tspan,L,n,beta,d1,d2,m)\n\n[D,x2] = cheb(n-1);\nD2= D^2;\nD2(1,:) = zeros(1,n);\nD2(n,:) = zeros(1,n);%boundary should be 0\nI = eye(length(D2));\nLap = kron(D2,I)+kron(I,D2);\n\nx = x2*L/2;\n[X,Y]=meshgrid(x);\n\nuinit = tanh(sqrt(X.^2+Y.^2)).*cos(m*angle(X+i*Y)-(sqrt(X.^2+Y.^2)));%grid\nvinit = tanh(sqrt(X.^2+Y.^2)).*sin(m*angle(X+i*Y)-(sqrt(X.^2+Y.^2)));\n\nuvecinit = reshape(uinit,n^2,1);\nvvecinit = reshape(vinit,n^2,1);\nxvecinit = [uvecinit;vvecinit];\n\n[t,xsolvec] =ode45(@(t,xvec) rds_cheb(t,L,xvec,beta,Lap,n,d1,d2),tspan,xvecinit);\n\n```\n\n```matlab\nfunction rhs = rds_cheb(t,L,xvec,beta,Lap,n,d1,d2)\n\nuvec = xvec(1:n^2);\nvvec = xvec(n^2+1:end);\n\nAvec = uvec.^2+vvec.^2;\nlvec = 1-Avec;\nwvec = -beta*Avec;\n\nut = lvec.*uvec-wvec.*vvec+d1*4/L^2*Lap*uvec;\nvt = wvec.*uvec+lvec.*vvec+d2*4/L^2*Lap*vvec;\n\nrhs = [ut;vt];\n\n```\n\n\n\n","source":"_posts/Scientific-Computing.md","raw":"---\ntitle: Scientific Computing\ndate: 2019-01-02 13:28:18\ntags:\n- AMATH\ncategories:\n- NoteBook\n---\n\n*A manual for individual use, which focuses on how to solve ordinary and partial differential equation numerically, including how to solve initial value problem with Euler, 2nd- and 4th- order Runge-Kutta and Adams-Bashford method; how to handle boundary value problem with shooting method and direct method and how to deal with PDE with finite difference schemes and spectral methods. Quantum Harmonic Oscillator, Vorticity-Streamfunction Equations, Reaction-Diffusion Systems are are discussed.*\n\n# Initial Value Problem\n\n$$\n\\frac{d\\overrightarrow{y}}{dt}=f(t,\\overrightarrow{y}) \\quad \\overrightarrow{y}(0)=\\overrightarrow{y_0} \\quad t\\in[0,T]\n$$\n\n## Forward Euler Method\n\nThis is the simplest algorithm for solving this problem, which is derived from the definition of the derivative:\n\n$$\n\\frac{d\\overrightarrow y}{dt}=\\lim_{\\Delta t \\to 0} \\frac{\\Delta\\overrightarrow y}{\\Delta t} \\approx \\frac{\\overrightarrow y_{n+1}-\\overrightarrow y_n}{t_{n+1}-t_n}\n$$\n\nFrom the above equation, we can get:\n\n$$\n\\overrightarrow{y}_{n+1} = \\overrightarrow y_n + \\Delta t \\cdot f(t_n,\\overrightarrow y_n)\n$$\n\nNote that each subsequenct approximation in Euler Method is generated from the slope of the previous point. Considering the error coulde be very large, we need to find some ways to improve it.\n\n## Improved from Euler Method\n\n One way we can think of is to use the slope of other points instead of that of the previous one to predict the next point. For example, the average slope (Heun's Method), or the slope of the midpoint (RK2).\n \n### Heun's \n  \n  $$y_{n+1}=y_n+\\frac{\\Delta t}{2}[f(t_n,y_n)+f(t_{n+1},y_{n+1})]$$\n\n### RK2 \n  \n  $$y_{n+1}=y_n+\\Delta t \\cdot f[t_n+\\frac{\\Delta t}{2},y(t_n+\\frac{\\Delta t}{2})]$$\n\n### In general \n  \n  $$y_{n+1}=y_n+\\Delta t[A \\cdot f(t_n,y_n)+B \\cdot f(t+P\\Delta t,y_n+Q\\Delta t \\cdot f(t_n,y_n)\\\\\\\\\n  where\\quad A+B=1\\quad B\\cdot P=\\frac{1}{2}\\quad B\\cdot Q=\\frac{1}{2}$$\n\n- If $A=\\frac{1}{2}\\Rightarrow B=\\frac{1}{2}\\Rightarrow P=1\\Rightarrow Q=1\\Rightarrow$Heun's Method\n- If $A=0\\Rightarrow B=0\\Rightarrow P=\\frac{1}{2}\\Rightarrow Q=\\frac{1}{2}\\Rightarrow$RK2 Method\n  \n### RK4\n  \n$$y_{n+1}=y_n+\\frac{\\Delta t}{6}(f_1+2f_2+2f_3+f_4)\\\\\\\\\nf_1=f(t_n,y_n)\\\\\\\\\nf_2=f(t_n+\\frac{\\Delta t}{2},y_n+\\frac{\\Delta t}{2}\\cdot f_1)\\\\\\\\\nf_3=f(t_n+\\frac{\\Delta t}{2},y_n+\\frac{\\Delta t}{2}\\cdot f_2)\\\\\\\\\nf_4=f(t_n+\\frac{\\Delta t}{2},y_n+\\frac{\\Delta t}{2}\\cdot f_3)$$\n\n### Summary and Error Analysis\n\n| Scheme | Local Error | Global Error | Matlab | Python\n|----|----|----|----|----|\n|Forward Euler|$\\Delta t^2$|$\\Delta t$|||\n|Heun's/RK2|$\\Delta t^3$|$\\Delta t^2$|ode23|Method=RK23\n|RK4|$\\Delta t^5$|$\\Delta t^4$|ode45|Method=RK45\n\nThe error in numerical algorithm not only comes from the local error (truncated error) in the algorithm iteself, but also arises from round off error since computer can only keep limit digits of number: $Error_{total}=\\varepsilon_{round\\ off}+\\varepsilon_{truncate}$. If the round-off error is dominant, our algorithm can be unstable to be used. That's why Backward Euler Method is introduced.\n\n## Backward Euler Method\n\nIt is an implicit method, which is more stable\n\n$$y_n=y_{n+1}-\\Delta t \\cdot f(t_{n+1},y_{n+1})$$\n\nExample:\n\n$$\\frac{dy}{dt}=\\lambda y\\quad y(0)=y_0$$\n\n- FE:\n  $$y_{n+1}=y_n+\\Delta t \\cdot f(t_n,y_n)=y_n+\\Delta t \\cdot \\lambda y \\Rightarrow y_n=(y_0+\\varepsilon_{round\\_off})(1+\\Delta t \\lambda)^N$$\n  set  $r_{FE}=(1+\\Delta t \\lambda)^N\\Rightarrow y_n=y_0\\cdot r_{FE}^N+\\varepsilon_{round\\_off}\\cdot r_{FE}^N$\n  \n  - $\\lambda>0\\Rightarrow |r_{FE}|>1\\Rightarrow$ unconditionally unstable\n  - $\\lambda<0\\Rightarrow |r_{FE}|<1\\Rightarrow \\begin{cases} \\Delta t<\\frac{2}{|\\lambda|} & stable\\\\\\\\ \\Delta t>\\frac{2}{|\\lambda|} & unsatble\\\\ \\end{cases}$\n  \n- BE:\n  \n  $$y_n=y_{n+1}-\\Delta t\\cdot \\lambda\\cdot y_{n+1}\\Rightarrow y_{n+1}=r_{BE}\\cdot y_n,\\ where\\ r_{BE}=\\frac{1}{1-\\Delta t\\lambda}\\\\\\\\ \n  y_n=y_0\\cdot r_{BE}^N+\\varepsilon_{round\\_off}\\cdot r_{BE}^N$$\n    - $\\lambda<0\\Rightarrow |r_{FE}|<1\\Rightarrow$ unconditionally stable\n    - $\\lambda>0\\Rightarrow |r_{FE}|<1\\Rightarrow \\begin{cases} \\Delta t>\\frac{2}{|\\lambda|} & stable\\\\\\\\ \\Delta t<\\frac{2}{|\\lambda|} & unsatble\\\\ \\end{cases}$\n \n## MultiStep Method\n\n - Adams-Bash forth (explicit method)\n  $$y_{n+1}=y_n+\\frac{\\Delta t}{2}(3f_n-f_{n-1})$$ \n - Adams-Moulthon (implicit method)\n  $$y_{n+1}=y_n+\\frac{\\Delta t}{2}(f_{n+1}+f_n)$$\n - Predictor-Corrector\n  $$y_{n+1}^P=y_n+\\frac{\\Delta t}{2}(3f_n-f_{n-1})\\\\\\\n  y_{n+1}=y_n+\\frac{\\Delta t}{2}[f(t_{n+1},y_{n+1}^P)+f_n]$$\n\n## Matlab for ODE45\n\nsolve this equation $\\frac{d^2y(t)}{dt^2}+\\epsilon[y^2(t)-1]\\frac{dy(t)}{dt}+y(t)=0$ with $\\epsilon$=0.1, t=[0:0.5:32], y(t=0)=$\\sqrt 3$ and $\\frac{dy(t=0)}{dt}$=1 by ode45 method.\n\n```matlab\nfunction f = fvdposc(t,y,epsilon)\nf1 = y(2);                          %f1=y'\nf2 = -epsilon*(y(1)^2-1)*y(2)-y(1);%f2=y''\nf = [f1;f2];    %f must be a column vector\t\n```\n\n```matlab\nabstol=10^-6;reltol=10^-6;\noptions = odeset('AbsTol',abstol,'RelTol',reltol);\n%if options not specified, use the default one. the other items must be there.\n[T,Y] = ode45( @(t,y) fvdposc(t,y,epsilon),tspan,y0,options);\n```\n\nIn this way, we can get Y is a [65 $\\times$ 2] matrix. This first column is the y values in tspan, and the other columne is y' values in tspan.\n\n\n# Boundary Value Problem\n\nThere might be multiple solutions to this kind of problem, and we should choose those suit boundary conditions. Let's start with a simple case:\n\n$$\n\\frac{d^2y}{dt^2} = f(t,y,\\frac{dy}{dt})\\quad y(a) = \\alpha\\quad y(b) = \\beta\n$$\n\n## Shooting Method\n\nActually, BVP is  comparable to IVP:\n\n-    IVP: y(a)=$\\alpha$, y'(a)=A\n-    BVP: y(a)=$\\alpha$, y(b)=$\\beta$\n\nSo we can guess an initial condition to see how difference the result from the other boundary value; and decide a new initial guess to repeat the above process until the result reaches the other boundary value.\n\n## Direct-Linear BVP\n\nHere we can consider a general case:\n\n$$\n\\frac{d^2y}{dt^2}=p(t)\\frac{dy}{dt}+q(t)y+r(t)\\\\\\\\\n\\alpha_1y(a)+\\beta_1y'(a)=\\gamma_1\\\\\\\\\n\\alpha_2y(b)+\\beta_2y'(b)=\\gamma_2\n$$\n\nCombine Taylor series and central difference method $y'=\\frac{y(t+\\Delta t)-y(t-\\Delta t)}{2\\Delta t}+O(\\Delta t^2)$, we can get $y''=\\frac{y(t+\\Delta t)-2y(t)+y(t-\\Delta t)}{\\Delta t^2}+O(\\Delta t^2)$. Finally, we can get: \n\n$$[1-\\frac{p(t)\\Delta t}{2}]\\cdot y(t+\\Delta t)-[2+q(t)\\Delta t^2]\\cdot y(t)+[1+\\frac{p(t)\\Delta t}{2}]\\cdot y(t-\\Delta t)=r(t)\\Delta t^2$$\n\nConvert it in to matrix form:\n\n$$A\\times \\overrightarrow x = \\overrightarrow b$$\n\n$$ \\begin{pmatrix} 1 & 0 &\\cdots &\\cdots &\\cdots & 0 \\\\\\\\ a & b & c & 0 &\\cdots &0 \\\\\\\\0&a&b&c&\\cdots&0\\\\\\\\\\vdots&\\ddots&\\ddots&\\ddots&\\ddots&\\vdots\\\\\\\\\\vdots&\\ddots&\\ddots&a&b&c\\\\\\\\0&\\cdots&\\cdots&\\cdots&a&1 \\end{pmatrix} \\times \\begin{pmatrix}y(t_0)\\\\\\\\y(t+\\Delta t)\\\\\\\\y(t+2\\Delta t)\\\\\\\\\\vdots\\\\\\\\\\vdots\\\\\\\\y(t_N) \\end{pmatrix}=\\begin{pmatrix} \\alpha\\\\\\\\r(t+\\Delta t)\\Delta t^2\\\\\\\\ r(t+2\\Delta t)\\Delta t^2\\\\\\\\\\vdots\\\\\\\\\\vdots\\\\\\\\\\beta \\end{pmatrix}$$\n\nIn Matlab, we can use function `X=A\\b` or `eig(A)` to solve it; in python(numpy), function `linalg.solve(A,b)` or `eig(A)` also works.\n\n## Newton-Raphson Method\n\nOne thing must be noted that, initial guess for this method should be close to the real value, otherwise it may diverge.\n$$x_{n+1}=x_n-\\frac{f(x_n)}{f'(x_n)}$$\n\n## Summary\n\n1. Approximate y', y'' using central difference formula;\n2. Approximate boundary condition using FDF, DBF\n3. Solve $A\\overrightarrow x=\\overrightarrow b$\n4. solution--O($\\Delta t^2$)\n\n## Quantum Harmonic Oscillation\n\n$$\\frac{d^2\\phi_n}{dx^2}-[Kx^2-\\varepsilon_n]\\phi_n=0$$\nwe expect the solution $\\phi_n(x)\\rightarrow 0$ as $x\\rightarrow \\pm \\infty$ and $\\varepsilon_n>0$ is the quantum energy. Note that $K=km/\\hbar^2$ and $\\varepsilon_n=E_nm/\\hbar^2$. Here take K=1, and always normalize so that $\\int_{-\\infty} ^{+\\infty} {|\\phi_n|^2} \\,{\\rm d}x=1$. Calculate the first five normalized eigenfunctions ($\\phi_n$) and eigenvalues($\\varepsilon_n$) up to tolerance of $10^{-4}$ in increasing order such that the first eigenvalue is the lowest one.\n\n- Shooting method\n\n ```matlab\nfunction f=pdefunc(x,y,e)\n\nf1 = y(2);\nf2 = (x^2-e)*y(1);\n\nf = [f1;f2];\n ```\n\n ```matlab\nL=4; dx=0.1; e_start=0.5; tol=10^-4;\n\nxspan = -L:dx:L;\nA = 1; % suggest A=phi(-L)=phi(L)\n\nfor modes=1:5\n    e = e_start;\n    de=0.01;\n    for j=1:1000\n        y0 = [A;A*sqrt(L^2-e)];\n        \n        [x,phi] = ode45( @(x,phi) pdefunc(x,phi,e), xspan ,y0);\n        \n        rightbc = phi(end,2)+sqrt(L^2-e)*phi(end,1);\n        if abs(rightbc)<tol\n            eigen_e(modes,1)=e;\n            break;\n        end\n        \n        if (-1)^(1+modes)*rightbc>0\n            e = e+de;\n        else\n            de = de/2;\n            e = e-de;\n        end\n    end\n    eigen_phi(:,modes) = phi(:,1)/sqrt(trapz(x,phi(:,1).^2));\n        e_start = e+0.2;\nend\n\n%eigen_phi,eigen_e are what we want\n ```\n\n- Direct Method\n\n ```matlab\nL=4; dx=0.1; \nxspan = -L:dx:L;\nmax = length(xspan)-2;\nA = zeros(max,max);\nphi_sort = zeros(max+2,max+2);\n% build up A matrix which doesn't consider phi(x1) and phi(xn). A is built\n% based on 2nd order central difference. The first and last row don't\n% consider x1 and xn, use FDF and BDF and approximation to make phi(x2) and\n% phi(x3) express phi(x1); phi(xn-2) and phi(xn-1) express phi(xn).\nA(1,1:2) = [2/3/dx^2+xspan(2)^2,-2/3/dx^2];\nA(end,end-1:end) = [-2/3/dx^2,2/3/dx^2+xspan(end-1)^2];\ni = 2;\nwhile i<max\n    A(i,i-1) = -1/dx^2;\n    A(i,i+1) = -1/dx^2;\n    A(i,i) = 2/dx^2+xspan(i+1)^2;\n    i=i+1;\nend\n%phi function only contains [phi(2),phi(3),...phi(n-2),phi(n-1)]\n[phi,e]=eig(A);\n\n%sort phi function based on ascending energy.\nfor i=1:max\n    eng(i,1) = e(i,i);\nend\n\n[eng, Index_eng] = sort(eng);\n\n%only get the first five phi functions. \n%phi(1)/phi(N) are calculated based on FDF/BDF method without approximation.\nfor i =1:5\n    phi_sort(2:end-1,i) = phi(:,Index_eng(i));\n    phi_sort(1,i) = (4*phi_sort(2,i)-phi_sort(3,i))/(3+2*dx*sqrt(L^2-eng(i)));\n    phi_sort(end,i) = (4*phi_sort(end-1,i)-phi_sort(end-2,i))/(3+2*dx*sqrt(L^2-eng(i)));\n    phi_sort(:,i) = phi_sort(:,i)/sqrt(trapz(xspan,phi_sort(:,i).^2));\nend\n\n%phi_sort,eng is the result\n ```\n\n- Shooting for nonlinear cases\n  \n$$\\frac{d^2\\phi_n}{dx^2}-[\\gamma |\\phi_n|^2+Kx^2-\\varepsilon_n]\\phi_n=0$$\\\n\nStill use $x\\in [-L,L]$ with L=2 and choose xspan = -L:0.1:L. Find the first two normalized modes for  $\\gamma=0.05$:\n\n ```matlab\nL=2; dx=0.1; e_start=0.5; tol=10^-4; gama=0.05; A_start=0.2;\nxspan = -L:dx:L;\n\nfor modes=1:2\n    e = e_start;\n    de=0.01;\n    for j=1:1000\n        A = A_start;\n        dA = 0.1;\n        for a=1:1000\n            y0 = [A;A*sqrt(L^2-e)];\n            \n            [x,phi] = ode45( @(x,phi) nolinpdefunc(x,phi,gama,e), xspan ,y0);\n         \n            AA = trapz(x,phi(:,1).^2);\n           \n            if abs(AA-1)<tol\n                opt_A(modes,1)=A;\n                break;\n            end\n            if AA>1\n                A = A-dA;\n            else\n                dA = dA/2;\n                A = A+dA;\n            end       \n        end\n        \n        rightbc = phi(end,2)+sqrt(L^2-e)*phi(end,1);\n        if abs(rightbc)<tol\n            eigen_e(modes,1)=e;\n            break;\n        end\n        \n        if (-1)^(1+modes)*rightbc>0\n            e = e+de;\n        else\n            de = de/2;\n            e = e-de;\n        end\n    end\n    e_start = e+1;\n    A_start = A+1;\n    eigen_phi(:,modes) = phi(:,1)/sqrt(trapz(x,phi(:,1).^2));    \nend\n ```\n\n# Partial Differential Equations\n\nSolving PDE is harder than ODE, because we need to consider both initial conditions and boundary conditions, also need to solve both in time and in space. The classic PDE is vortivity-streamfunction equations and reaction-diffusion systems. We will go through these two systems to show how to slove PDE.\n\n## Finite Scheme Method for Vorticity-Streamfunction Equations\n\n$$\\omega_t+[\\psi,\\omega]=\\mu\\nabla^2\\psi\\quad \\nabla^2\\psi=\\omega\\\\\\\\\nwhere\\; [\\psi,\\omega]=\\psi_x\\omega_y-\\psi_y\\omega_x \\; and \\; \\nabla^2=\\partial_x^2+\\partial_y^2$$\n\n- Steps:\n 1. Elliptic Solve: given $\\omega_0 \\rightarrow$ compute $\\psi_0$ by using $\\nabla^2\\psi=\\omega$\n 2. Time-Stepping: choose step $\\Delta t$ compute $\\omega '$ using $\\omega_{k+1}=\\omega_k+\\Delta t\\cdot f(\\psi^k,\\omega^k)$\n 3. Iterate\n\n- Step 1: the elliptic problem\n$$(\\psi_{mn})_{xx}+(\\psi_{mn})_{yy}=\\omega_{mn}$$\nBy using CDF:\n$$\\frac{\\psi_{m-1,n}-2\\psi_{m,n}+\\psi_{m+1,n}}{\\Delta x^2}+\\frac{\\psi_{m,n-1}-2\\psi_{m,n}+\\psi_{m,n+1}}{\\Delta y^2}=\\omega_{m,n}\\delta^2$$\nIf we set $\\Delta x=\\Delta y$, and reshape the matrix $\\psi_{m,n}$ and $\\omega_{m,n}$ (m=n)to vectors (the same thing as matlab fucntion `reshape(matrix,n^2,1)`), we can write the above equation into a matrix form:\n$$A\\overrightarrow \\psi = \\overrightarrow \\omega $$\nwhere $A=A'/\\delta^2$, $A'=A_D+A_x+A_y$, $A_D=-4\\psi_{m,n}$, $A_x=\\psi_{m-1,n}+\\psi_{m,n-1}$ and $A_y=\\psi_{m,n-1}+\\psi_{m,n+1}$\n\n- *Matlab script*\n    \n    $A=\\nabla^2$, $B=\\partial_x$, $C=\\partial_y$\n\n ```matlab\nfunction [A B C] = derivmatrix(dx,dy,n)\n\ne1 = ones(n^2,1);\n%A = dx^2+dy^2\n\n%A = (AD+AX+AY)/dx/dy; AD=-4y(m,n),AX=y(m-1,n)+y(m+1,n), AY=y(m,n-1)+y(m,n+1)\nAD = spdiags(-4*e1,0,n^2,n^2); \nAD(1,1)=2;%set the first element not -4 to avoid denominator too small\nAX = spdiags([e1 e1 e1 e1],[-(n-1)*n -n n n*(n-1)],n^2,n^2);\nAY = spdiags([e1 e1],[-1 1],n^2,n^2);\nfor i=1:n\n    AY(1+n*(i-1),n*i) = 1;\n    AY(n*i,1+n*(i-1)) = 1;\n    if i<n\n        AY(n*i,1+n*i) = 0;\n        AY(1+n*i,n*i) = 0;\n    end\nend\nA = (AD+AX+AY)/(dx*dy);\n\n%B = dx\n%B = (y(m+1,n)-y(m-1,n))/(2*dx)\nB = spdiags([e1 -e1 e1 -e1],[-(n-1)*n -n n n*(n-1)],n^2,n^2)/(2*dx);\n\n%C = dy\n%C = (y(m,n+1)-y(m,n-1))/(2*dy)\nC = spdiags([-e1 e1],[-1,1],n^2,n^2);\nfor i=1:n\n    C(1+n*(i-1),n*i) = -1;\n    C(n*i,1+n*(i-1)) = 1;\n    if i<n\n        C(n*i,1+n*i) = 0;\n        C(1+n*i,n*i) = 0;\n    end\nend\nC = C/(2*dy);\n ```\n\nthen, we could use one of these two method to slove $\\psi$\n\n ```matlab\npsi = A\\w;\n ```\n\n ```matlab\n [L,U,P] = lu(A);\n y = L\\(P*w);\n psi = U\\y;\n ```\n\n- Step 2: Method Line\n\n$$\n\\nabla^2\\psi(x,y)=f(x,y)\\qquad+b.c.\\\\\\\\\nu_t(t,x)=u_x(t,x)\\quad+i.c.,b.c.\\\\\\\\\nu_x(t,x)\\approx\\frac{u(x+\\Delta x)-u(x-\\Delta x)}{2\\Delta x}\n$$\nWe have to condiser the stability of this method. Choose $\\lambda$ carefully to make sure it is stable and also will not run forever.\n$$u_n^{(m)}=g^mexp(i\\zeta\\Delta x)\\\\\\\\\n\\lambda =\\frac{\\Delta t^{num-t-der}} {\\Delta x^{num-x-der}}$$\n\n## Spectral Method for Vorticity-Streamfunction Equations\n\nexpand u(x,t):\n\n$$u(x,t)=\\sum_{k=1}^N a_k(t)\\phi_k(x)\\qquad$$\n where $\\phi_k(x)$are orthogonal\nUsing Fourier Series\n\n$$\\widehat{u}(t)=u(k,t)=\\sum_{n=1}^N u(n,t)e^{-i2\\pi(k-1)(n-1)/N}\\\\\\\\\\qquad\\;u(n,t)=1/N\\sum_{n=1}^N \\widehat u(t)e^{i2\\pi(k-1)(n-1)/N}$$\nDerivative property:\n$$\\widehat u^{(m)}(x,t)=(ik)^{(m)}\\widehat u(k,t)$$\nPDE  Fourier Space\n$$u_t=Lu+N(u) \\Longrightarrow \\widehat(u)_t=\\alpha(k)\\widehat u+\\widehat N(u)$$\nHere attached the script for solve VSE by the above two methods.\n\n```matlab\nclear all; clf; close all; clc\nnu = 0.001;\nn=64;\nL=10;\ntspan = 0:0.5:4;\n\nw1 = runvs(L,n,tspan,nu,1);\n\nw2 = runvs(L,n,tspan,nu,2);\n\nw3 = runvs(L,n,tspan,nu,3);\n```\n\n```matlab\nfunction wfsol = runvs(L,n,tspan,nu,choice)\n\nx2 = linspace(-L/2,L/2,n+1);\nx = x2(1:n);\ndx = x(2)-x(1);\n\n[X,Y] = meshgrid(x);%grid\n[A,B,C] = derivmatrix(dx,dx,n);%apply to vector [64*64,1]\n\nwfinit = exp(-X.^2-Y.^2/20);%grid\nwfinitvect = reshape(wfinit,n^2,1);%vector\n\n[t,wfsol] = ode45(@(t,wfvec) vortstream(t,wfvec,n,nu,A,B,C,choice,1),tspan,wfinitvect);\n\nif choice==3\n    kx = (2*pi/L)*[0:(n/2-1) (-n/2):-1];\n    kx(1) = 1e-6;\n\n    [KX,KY]=meshgrid(kx);\n    K = KX.^2+KY.^2;\n    \n    [t,wfsol] = ode45(@(t,wfvec) vortstream(t,wfvec,n,nu,A,B,C,choice,K)tspan,wfinitvect);\nend\n```\n\n```matlab\nfunction rhs = vortstream(t,w,n,nu,A,B,C,choice,K)\n\nif choice==1\n    psi = A\\w;%vector\nelseif choice==2\n    [L,U,P] = lu(A);\n    y=L\\(P*w);\n    psi = U\\y;\nelse\n    wf = fft2(reshape(w,n,n));\n    psif = -wf./K;\n    psi = reshape(real(ifft2(psif)),n^2,1);\nend\n\nrhs = -(B*psi).*(C*w)+(C*psi).*(B*w)+nu*A*w;%vector\n```\n\n## Chebishev Polynomials\n\n$$\\phi_k(x)=T_k(x)\\quad T_k(cos\\theta)=cosk\\theta$$\nMatlab Script:\n\n```matlab\nfunction [D,x] = cheb(N)\n  if N==0, D=0; x=1; return, end\n  x = cos(pi*(0:N)/N)'; \n  c = [2; ones(N-1,1); 2].*(-1).^(0:N)';\n  X = repmat(x,1,N+1);\n  dX = X-X';                  \n  D  = (c*(1./c)')./(dX+(eye(N+1)));      % off-diagonal entries\n  D  = D - diag(sum(D'));                 % diagonal entries\n```\n\nSolve reaction-diffusion system with both spectral and cheb methods\n$$U_t=\\lambda(A)U-\\omega (A)V+D_1\\nabla^2U\\\\\\\\V_t=\\omega (a)U+\\lambda(A)V+D_2\\nabla^2V$$\nwhere $A^2=U^2+V^2$ and $\\nabla^2=\\partial_x^2+\\partial_y^2$. Consider $\\lambda(A)=1-A^2$ and $\\omega(A)=-\\beta A^2$\n\n```matlab\nclear all; close all; clc\nL=20;n=64;beta=1;d1=0.1;d2=d1;m=1;\ntspan=0:0.5:4;\n\nuv1 = runrds_fft(tspan,L,n,beta,d1,d2,m);\nA1 = real(uv1);\nA2 = imag(uv1);\n\nn=31;\nuv2 = runrds_cheb(tspan,L,n,beta,d1,d2,m);\nA3 = uv2;\n```\nwe consider $x,y \\in[-10,10]$, n=64, $\\beta =1$, $D_1=D_2=0.1$, m=1, tspan=0:0.5:4 and $u_f$ stacked on top of $v_f$.\nThe following is FFT(spectral) method:\n\n```matlab\nfunction xfsol = runrds_fft(tspan,L,n,beta,d1,d2,m)\n\nx2 = linspace(-L/2,L/2,n+1);\nx = x2(1:n);\ny=x;\n\nkx = (2*pi/L)*[0:(n/2-1) (-n/2):-1];\nkx(1) = 1e-6;\nky=kx;\n\n[X,Y]=meshgrid(x,y);\n[KX,KY]=meshgrid(kx,ky);\nK = KX.^2+KY.^2;\nKvec = reshape(K,n^2,1);\n\nuint = tanh(sqrt(X.^2+Y.^2)).*cos(m*angle(X+i*Y)-(sqrt(X.^2+Y.^2)));%grid\nvint = tanh(sqrt(X.^2+Y.^2)).*sin(m*angle(X+i*Y)-(sqrt(X.^2+Y.^2)));\nufint = fft2(uint);\nvfint = fft2(vint);\nufvecint = reshape(ufint,n^2,1);\nvfvecint = reshape(vfint,n^2,1);\nxfvecint = [ufvecint;vfvecint];\n\n[t,xfsol] = ode45(@(t,xfvec) rds_fft(t,xfvec,beta,Kvec,n,d1,d2),tspan,xfvecint);\n\n```\n\n```matlab\nfunction rhs = rds_fft(t,xfvec,beta,Kvec,n,d1,d2)\n\nufvec = xfvec(1:n^2);\nvfvec = xfvec(n^2+1:end);\n\nu = real(ifft2(reshape(ufvec,n,n)));\nv = real(ifft2(reshape(vfvec,n,n)));\nA = u.^2+v.^2;\nl = 1-A;\nw = -beta*A;\n\nuft = reshape(fft2(l.*u-w.*v),n^2,1)-d1*Kvec.*ufvec;\nvft = reshape(fft2(w.*u+l.*v),n^2,1)-d2*Kvec.*vfvec;\n\nrhs = [uft;vft];\n```\n\nThe following is cheb method with n=30 and m=1\n\n```matlab\nfunction xsolvec = runrds_cheb(tspan,L,n,beta,d1,d2,m)\n\n[D,x2] = cheb(n-1);\nD2= D^2;\nD2(1,:) = zeros(1,n);\nD2(n,:) = zeros(1,n);%boundary should be 0\nI = eye(length(D2));\nLap = kron(D2,I)+kron(I,D2);\n\nx = x2*L/2;\n[X,Y]=meshgrid(x);\n\nuinit = tanh(sqrt(X.^2+Y.^2)).*cos(m*angle(X+i*Y)-(sqrt(X.^2+Y.^2)));%grid\nvinit = tanh(sqrt(X.^2+Y.^2)).*sin(m*angle(X+i*Y)-(sqrt(X.^2+Y.^2)));\n\nuvecinit = reshape(uinit,n^2,1);\nvvecinit = reshape(vinit,n^2,1);\nxvecinit = [uvecinit;vvecinit];\n\n[t,xsolvec] =ode45(@(t,xvec) rds_cheb(t,L,xvec,beta,Lap,n,d1,d2),tspan,xvecinit);\n\n```\n\n```matlab\nfunction rhs = rds_cheb(t,L,xvec,beta,Lap,n,d1,d2)\n\nuvec = xvec(1:n^2);\nvvec = xvec(n^2+1:end);\n\nAvec = uvec.^2+vvec.^2;\nlvec = 1-Avec;\nwvec = -beta*Avec;\n\nut = lvec.*uvec-wvec.*vvec+d1*4/L^2*Lap*uvec;\nvt = wvec.*uvec+lvec.*vvec+d2*4/L^2*Lap*vvec;\n\nrhs = [ut;vt];\n\n```\n\n\n\n","slug":"Scientific-Computing","published":1,"updated":"2019-01-15T07:52:06.526Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrcn2vti0014ua5sdr2dsw7s","content":"<p><em>A manual for individual use, which focuses on how to solve ordinary and partial differential equation numerically, including how to solve initial value problem with Euler, 2nd- and 4th- order Runge-Kutta and Adams-Bashford method; how to handle boundary value problem with shooting method and direct method and how to deal with PDE with finite difference schemes and spectral methods. Quantum Harmonic Oscillator, Vorticity-Streamfunction Equations, Reaction-Diffusion Systems are are discussed.</em></p>\n<h1 id=\"Initial-Value-Problem\"><a href=\"#Initial-Value-Problem\" class=\"headerlink\" title=\"Initial Value Problem\"></a>Initial Value Problem</h1><p>$$<br>\\frac{d\\overrightarrow{y}}{dt}=f(t,\\overrightarrow{y}) \\quad \\overrightarrow{y}(0)=\\overrightarrow{y_0} \\quad t\\in[0,T]<br>$$</p>\n<h2 id=\"Forward-Euler-Method\"><a href=\"#Forward-Euler-Method\" class=\"headerlink\" title=\"Forward Euler Method\"></a>Forward Euler Method</h2><p>This is the simplest algorithm for solving this problem, which is derived from the definition of the derivative:</p>\n<p>$$<br>\\frac{d\\overrightarrow y}{dt}=\\lim_{\\Delta t \\to 0} \\frac{\\Delta\\overrightarrow y}{\\Delta t} \\approx \\frac{\\overrightarrow y_{n+1}-\\overrightarrow y_n}{t_{n+1}-t_n}<br>$$</p>\n<p>From the above equation, we can get:</p>\n<p>$$<br>\\overrightarrow{y}_{n+1} = \\overrightarrow y_n + \\Delta t \\cdot f(t_n,\\overrightarrow y_n)<br>$$</p>\n<p>Note that each subsequenct approximation in Euler Method is generated from the slope of the previous point. Considering the error coulde be very large, we need to find some ways to improve it.</p>\n<h2 id=\"Improved-from-Euler-Method\"><a href=\"#Improved-from-Euler-Method\" class=\"headerlink\" title=\"Improved from Euler Method\"></a>Improved from Euler Method</h2><p> One way we can think of is to use the slope of other points instead of that of the previous one to predict the next point. For example, the average slope (Heun’s Method), or the slope of the midpoint (RK2).</p>\n<h3 id=\"Heun’s\"><a href=\"#Heun’s\" class=\"headerlink\" title=\"Heun’s\"></a>Heun’s</h3><p>  $$y_{n+1}=y_n+\\frac{\\Delta t}{2}[f(t_n,y_n)+f(t_{n+1},y_{n+1})]$$</p>\n<h3 id=\"RK2\"><a href=\"#RK2\" class=\"headerlink\" title=\"RK2\"></a>RK2</h3><p>  $$y_{n+1}=y_n+\\Delta t \\cdot f[t_n+\\frac{\\Delta t}{2},y(t_n+\\frac{\\Delta t}{2})]$$</p>\n<h3 id=\"In-general\"><a href=\"#In-general\" class=\"headerlink\" title=\"In general\"></a>In general</h3><p>  $$y_{n+1}=y_n+\\Delta t[A \\cdot f(t_n,y_n)+B \\cdot f(t+P\\Delta t,y_n+Q\\Delta t \\cdot f(t_n,y_n)\\\\<br>  where\\quad A+B=1\\quad B\\cdot P=\\frac{1}{2}\\quad B\\cdot Q=\\frac{1}{2}$$</p>\n<ul>\n<li>If $A=\\frac{1}{2}\\Rightarrow B=\\frac{1}{2}\\Rightarrow P=1\\Rightarrow Q=1\\Rightarrow$Heun’s Method</li>\n<li>If $A=0\\Rightarrow B=0\\Rightarrow P=\\frac{1}{2}\\Rightarrow Q=\\frac{1}{2}\\Rightarrow$RK2 Method</li>\n</ul>\n<h3 id=\"RK4\"><a href=\"#RK4\" class=\"headerlink\" title=\"RK4\"></a>RK4</h3><p>$$y_{n+1}=y_n+\\frac{\\Delta t}{6}(f_1+2f_2+2f_3+f_4)\\\\<br>f_1=f(t_n,y_n)\\\\<br>f_2=f(t_n+\\frac{\\Delta t}{2},y_n+\\frac{\\Delta t}{2}\\cdot f_1)\\\\<br>f_3=f(t_n+\\frac{\\Delta t}{2},y_n+\\frac{\\Delta t}{2}\\cdot f_2)\\\\<br>f_4=f(t_n+\\frac{\\Delta t}{2},y_n+\\frac{\\Delta t}{2}\\cdot f_3)$$</p>\n<h3 id=\"Summary-and-Error-Analysis\"><a href=\"#Summary-and-Error-Analysis\" class=\"headerlink\" title=\"Summary and Error Analysis\"></a>Summary and Error Analysis</h3><table>\n<thead>\n<tr>\n<th>Scheme</th>\n<th>Local Error</th>\n<th>Global Error</th>\n<th>Matlab</th>\n<th>Python</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Forward Euler</td>\n<td>$\\Delta t^2$</td>\n<td>$\\Delta t$</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Heun’s/RK2</td>\n<td>$\\Delta t^3$</td>\n<td>$\\Delta t^2$</td>\n<td>ode23</td>\n<td>Method=RK23</td>\n</tr>\n<tr>\n<td>RK4</td>\n<td>$\\Delta t^5$</td>\n<td>$\\Delta t^4$</td>\n<td>ode45</td>\n<td>Method=RK45</td>\n</tr>\n</tbody>\n</table>\n<p>The error in numerical algorithm not only comes from the local error (truncated error) in the algorithm iteself, but also arises from round off error since computer can only keep limit digits of number: $Error_{total}=\\varepsilon_{round\\ off}+\\varepsilon_{truncate}$. If the round-off error is dominant, our algorithm can be unstable to be used. That’s why Backward Euler Method is introduced.</p>\n<h2 id=\"Backward-Euler-Method\"><a href=\"#Backward-Euler-Method\" class=\"headerlink\" title=\"Backward Euler Method\"></a>Backward Euler Method</h2><p>It is an implicit method, which is more stable</p>\n<p>$$y_n=y_{n+1}-\\Delta t \\cdot f(t_{n+1},y_{n+1})$$</p>\n<p>Example:</p>\n<p>$$\\frac{dy}{dt}=\\lambda y\\quad y(0)=y_0$$</p>\n<ul>\n<li><p>FE:<br>$$y_{n+1}=y_n+\\Delta t \\cdot f(t_n,y_n)=y_n+\\Delta t \\cdot \\lambda y \\Rightarrow y_n=(y_0+\\varepsilon_{round_off})(1+\\Delta t \\lambda)^N$$<br>set  $r_{FE}=(1+\\Delta t \\lambda)^N\\Rightarrow y_n=y_0\\cdot r_{FE}^N+\\varepsilon_{round_off}\\cdot r_{FE}^N$</p>\n<ul>\n<li>$\\lambda&gt;0\\Rightarrow |r_{FE}|&gt;1\\Rightarrow$ unconditionally unstable</li>\n<li>$\\lambda&lt;0\\Rightarrow |r_{FE}|&lt;1\\Rightarrow \\begin{cases} \\Delta t&lt;\\frac{2}{|\\lambda|} &amp; stable\\\\ \\Delta t&gt;\\frac{2}{|\\lambda|} &amp; unsatble\\ \\end{cases}$</li>\n</ul>\n</li>\n<li><p>BE:</p>\n<p>$$y_n=y_{n+1}-\\Delta t\\cdot \\lambda\\cdot y_{n+1}\\Rightarrow y_{n+1}=r_{BE}\\cdot y_n,\\ where\\ r_{BE}=\\frac{1}{1-\\Delta t\\lambda}\\\\<br>y_n=y_0\\cdot r_{BE}^N+\\varepsilon_{round_off}\\cdot r_{BE}^N$$</p>\n<ul>\n<li>$\\lambda&lt;0\\Rightarrow |r_{FE}|&lt;1\\Rightarrow$ unconditionally stable</li>\n<li>$\\lambda&gt;0\\Rightarrow |r_{FE}|&lt;1\\Rightarrow \\begin{cases} \\Delta t&gt;\\frac{2}{|\\lambda|} &amp; stable\\\\ \\Delta t&lt;\\frac{2}{|\\lambda|} &amp; unsatble\\ \\end{cases}$</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"MultiStep-Method\"><a href=\"#MultiStep-Method\" class=\"headerlink\" title=\"MultiStep Method\"></a>MultiStep Method</h2><ul>\n<li>Adams-Bash forth (explicit method)<br>$$y_{n+1}=y_n+\\frac{\\Delta t}{2}(3f_n-f_{n-1})$$ </li>\n<li>Adams-Moulthon (implicit method)<br>$$y_{n+1}=y_n+\\frac{\\Delta t}{2}(f_{n+1}+f_n)$$</li>\n<li>Predictor-Corrector<br>$$y_{n+1}^P=y_n+\\frac{\\Delta t}{2}(3f_n-f_{n-1})\\\\<br>y_{n+1}=y_n+\\frac{\\Delta t}{2}[f(t_{n+1},y_{n+1}^P)+f_n]$$</li>\n</ul>\n<h2 id=\"Matlab-for-ODE45\"><a href=\"#Matlab-for-ODE45\" class=\"headerlink\" title=\"Matlab for ODE45\"></a>Matlab for ODE45</h2><p>solve this equation $\\frac{d^2y(t)}{dt^2}+\\epsilon[y^2(t)-1]\\frac{dy(t)}{dt}+y(t)=0$ with $\\epsilon$=0.1, t=[0:0.5:32], y(t=0)=$\\sqrt 3$ and $\\frac{dy(t=0)}{dt}$=1 by ode45 method.</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span> = <span class=\"title\">fvdposc</span><span class=\"params\">(t,y,epsilon)</span></span></span><br><span class=\"line\">f1 = y(<span class=\"number\">2</span>);                          <span class=\"comment\">%f1=y'</span></span><br><span class=\"line\">f2 = -epsilon*(y(<span class=\"number\">1</span>)^<span class=\"number\">2</span><span class=\"number\">-1</span>)*y(<span class=\"number\">2</span>)-y(<span class=\"number\">1</span>);<span class=\"comment\">%f2=y''</span></span><br><span class=\"line\">f = [f1;f2];    <span class=\"comment\">%f must be a column vector</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">abstol=<span class=\"number\">10</span>^<span class=\"number\">-6</span>;reltol=<span class=\"number\">10</span>^<span class=\"number\">-6</span>;</span><br><span class=\"line\">options = odeset(<span class=\"string\">'AbsTol'</span>,abstol,<span class=\"string\">'RelTol'</span>,reltol);</span><br><span class=\"line\"><span class=\"comment\">%if options not specified, use the default one. the other items must be there.</span></span><br><span class=\"line\">[T,Y] = ode45( @(t,y) fvdposc(t,y,epsilon),tspan,y0,options);</span><br></pre></td></tr></table></figure>\n<p>In this way, we can get Y is a [65 $\\times$ 2] matrix. This first column is the y values in tspan, and the other columne is y’ values in tspan.</p>\n<h1 id=\"Boundary-Value-Problem\"><a href=\"#Boundary-Value-Problem\" class=\"headerlink\" title=\"Boundary Value Problem\"></a>Boundary Value Problem</h1><p>There might be multiple solutions to this kind of problem, and we should choose those suit boundary conditions. Let’s start with a simple case:</p>\n<p>$$<br>\\frac{d^2y}{dt^2} = f(t,y,\\frac{dy}{dt})\\quad y(a) = \\alpha\\quad y(b) = \\beta<br>$$</p>\n<h2 id=\"Shooting-Method\"><a href=\"#Shooting-Method\" class=\"headerlink\" title=\"Shooting Method\"></a>Shooting Method</h2><p>Actually, BVP is  comparable to IVP:</p>\n<ul>\n<li>IVP: y(a)=$\\alpha$, y’(a)=A</li>\n<li>BVP: y(a)=$\\alpha$, y(b)=$\\beta$</li>\n</ul>\n<p>So we can guess an initial condition to see how difference the result from the other boundary value; and decide a new initial guess to repeat the above process until the result reaches the other boundary value.</p>\n<h2 id=\"Direct-Linear-BVP\"><a href=\"#Direct-Linear-BVP\" class=\"headerlink\" title=\"Direct-Linear BVP\"></a>Direct-Linear BVP</h2><p>Here we can consider a general case:</p>\n<p>$$<br>\\frac{d^2y}{dt^2}=p(t)\\frac{dy}{dt}+q(t)y+r(t)\\\\<br>\\alpha_1y(a)+\\beta_1y’(a)=\\gamma_1\\\\<br>\\alpha_2y(b)+\\beta_2y’(b)=\\gamma_2<br>$$</p>\n<p>Combine Taylor series and central difference method $y’=\\frac{y(t+\\Delta t)-y(t-\\Delta t)}{2\\Delta t}+O(\\Delta t^2)$, we can get $y’’=\\frac{y(t+\\Delta t)-2y(t)+y(t-\\Delta t)}{\\Delta t^2}+O(\\Delta t^2)$. Finally, we can get: </p>\n<p>$$[1-\\frac{p(t)\\Delta t}{2}]\\cdot y(t+\\Delta t)-[2+q(t)\\Delta t^2]\\cdot y(t)+[1+\\frac{p(t)\\Delta t}{2}]\\cdot y(t-\\Delta t)=r(t)\\Delta t^2$$</p>\n<p>Convert it in to matrix form:</p>\n<p>$$A\\times \\overrightarrow x = \\overrightarrow b$$</p>\n<p>$$ \\begin{pmatrix} 1 &amp; 0 &amp;\\cdots &amp;\\cdots &amp;\\cdots &amp; 0 \\\\ a &amp; b &amp; c &amp; 0 &amp;\\cdots &amp;0 \\\\0&amp;a&amp;b&amp;c&amp;\\cdots&amp;0\\\\\\vdots&amp;\\ddots&amp;\\ddots&amp;\\ddots&amp;\\ddots&amp;\\vdots\\\\\\vdots&amp;\\ddots&amp;\\ddots&amp;a&amp;b&amp;c\\\\0&amp;\\cdots&amp;\\cdots&amp;\\cdots&amp;a&amp;1 \\end{pmatrix} \\times \\begin{pmatrix}y(t_0)\\\\y(t+\\Delta t)\\\\y(t+2\\Delta t)\\\\\\vdots\\\\\\vdots\\\\y(t_N) \\end{pmatrix}=\\begin{pmatrix} \\alpha\\\\r(t+\\Delta t)\\Delta t^2\\\\ r(t+2\\Delta t)\\Delta t^2\\\\\\vdots\\\\\\vdots\\\\\\beta \\end{pmatrix}$$</p>\n<p>In Matlab, we can use function <code>X=A\\b</code> or <code>eig(A)</code> to solve it; in python(numpy), function <code>linalg.solve(A,b)</code> or <code>eig(A)</code> also works.</p>\n<h2 id=\"Newton-Raphson-Method\"><a href=\"#Newton-Raphson-Method\" class=\"headerlink\" title=\"Newton-Raphson Method\"></a>Newton-Raphson Method</h2><p>One thing must be noted that, initial guess for this method should be close to the real value, otherwise it may diverge.<br>$$x_{n+1}=x_n-\\frac{f(x_n)}{f’(x_n)}$$</p>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><ol>\n<li>Approximate y’, y’’ using central difference formula;</li>\n<li>Approximate boundary condition using FDF, DBF</li>\n<li>Solve $A\\overrightarrow x=\\overrightarrow b$</li>\n<li>solution–O($\\Delta t^2$)</li>\n</ol>\n<h2 id=\"Quantum-Harmonic-Oscillation\"><a href=\"#Quantum-Harmonic-Oscillation\" class=\"headerlink\" title=\"Quantum Harmonic Oscillation\"></a>Quantum Harmonic Oscillation</h2><p>$$\\frac{d^2\\phi_n}{dx^2}-[Kx^2-\\varepsilon_n]\\phi_n=0$$<br>we expect the solution $\\phi_n(x)\\rightarrow 0$ as $x\\rightarrow \\pm \\infty$ and $\\varepsilon_n&gt;0$ is the quantum energy. Note that $K=km/\\hbar^2$ and $\\varepsilon_n=E_nm/\\hbar^2$. Here take K=1, and always normalize so that $\\int_{-\\infty} ^{+\\infty} {|\\phi_n|^2} \\,{\\rm d}x=1$. Calculate the first five normalized eigenfunctions ($\\phi_n$) and eigenvalues($\\varepsilon_n$) up to tolerance of $10^{-4}$ in increasing order such that the first eigenvalue is the lowest one.</p>\n<ul>\n<li><p>Shooting method</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>=<span class=\"title\">pdefunc</span><span class=\"params\">(x,y,e)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">f1 = y(<span class=\"number\">2</span>);</span><br><span class=\"line\">f2 = (x^<span class=\"number\">2</span>-e)*y(<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">f = [f1;f2];</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">L=<span class=\"number\">4</span>; dx=<span class=\"number\">0.1</span>; e_start=<span class=\"number\">0.5</span>; tol=<span class=\"number\">10</span>^<span class=\"number\">-4</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">xspan = -L:dx:L;</span><br><span class=\"line\">A = <span class=\"number\">1</span>; <span class=\"comment\">% suggest A=phi(-L)=phi(L)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> modes=<span class=\"number\">1</span>:<span class=\"number\">5</span></span><br><span class=\"line\">    e = e_start;</span><br><span class=\"line\">    de=<span class=\"number\">0.01</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">j</span>=<span class=\"number\">1</span>:<span class=\"number\">1000</span></span><br><span class=\"line\">        y0 = [A;A*<span class=\"built_in\">sqrt</span>(L^<span class=\"number\">2</span>-e)];</span><br><span class=\"line\">        </span><br><span class=\"line\">        [x,phi] = ode45( @(x,phi) pdefunc(x,phi,e), xspan ,y0);</span><br><span class=\"line\">        </span><br><span class=\"line\">        rightbc = phi(<span class=\"keyword\">end</span>,<span class=\"number\">2</span>)+<span class=\"built_in\">sqrt</span>(L^<span class=\"number\">2</span>-e)*phi(<span class=\"keyword\">end</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">abs</span>(rightbc)&lt;tol</span><br><span class=\"line\">            eigen_e(modes,<span class=\"number\">1</span>)=e;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"number\">-1</span>)^(<span class=\"number\">1</span>+modes)*rightbc&gt;<span class=\"number\">0</span></span><br><span class=\"line\">            e = e+de;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            de = de/<span class=\"number\">2</span>;</span><br><span class=\"line\">            e = e-de;</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    eigen_phi(:,modes) = phi(:,<span class=\"number\">1</span>)/<span class=\"built_in\">sqrt</span>(trapz(x,phi(:,<span class=\"number\">1</span>).^<span class=\"number\">2</span>));</span><br><span class=\"line\">        e_start = e+<span class=\"number\">0.2</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%eigen_phi,eigen_e are what we want</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Direct Method</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">L=<span class=\"number\">4</span>; dx=<span class=\"number\">0.1</span>; </span><br><span class=\"line\">xspan = -L:dx:L;</span><br><span class=\"line\"><span class=\"built_in\">max</span> = <span class=\"built_in\">length</span>(xspan)<span class=\"number\">-2</span>;</span><br><span class=\"line\">A = <span class=\"built_in\">zeros</span>(<span class=\"built_in\">max</span>,<span class=\"built_in\">max</span>);</span><br><span class=\"line\">phi_sort = <span class=\"built_in\">zeros</span>(<span class=\"built_in\">max</span>+<span class=\"number\">2</span>,<span class=\"built_in\">max</span>+<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"comment\">% build up A matrix which doesn't consider phi(x1) and phi(xn). A is built</span></span><br><span class=\"line\"><span class=\"comment\">% based on 2nd order central difference. The first and last row don't</span></span><br><span class=\"line\"><span class=\"comment\">% consider x1 and xn, use FDF and BDF and approximation to make phi(x2) and</span></span><br><span class=\"line\"><span class=\"comment\">% phi(x3) express phi(x1); phi(xn-2) and phi(xn-1) express phi(xn).</span></span><br><span class=\"line\">A(<span class=\"number\">1</span>,<span class=\"number\">1</span>:<span class=\"number\">2</span>) = [<span class=\"number\">2</span>/<span class=\"number\">3</span>/dx^<span class=\"number\">2</span>+xspan(<span class=\"number\">2</span>)^<span class=\"number\">2</span>,<span class=\"number\">-2</span>/<span class=\"number\">3</span>/dx^<span class=\"number\">2</span>];</span><br><span class=\"line\">A(<span class=\"keyword\">end</span>,<span class=\"keyword\">end</span><span class=\"number\">-1</span>:<span class=\"keyword\">end</span>) = [<span class=\"number\">-2</span>/<span class=\"number\">3</span>/dx^<span class=\"number\">2</span>,<span class=\"number\">2</span>/<span class=\"number\">3</span>/dx^<span class=\"number\">2</span>+xspan(<span class=\"keyword\">end</span><span class=\"number\">-1</span>)^<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"built_in\">i</span> = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">i</span>&lt;<span class=\"built_in\">max</span></span><br><span class=\"line\">    A(<span class=\"built_in\">i</span>,<span class=\"built_in\">i</span><span class=\"number\">-1</span>) = <span class=\"number\">-1</span>/dx^<span class=\"number\">2</span>;</span><br><span class=\"line\">    A(<span class=\"built_in\">i</span>,<span class=\"built_in\">i</span>+<span class=\"number\">1</span>) = <span class=\"number\">-1</span>/dx^<span class=\"number\">2</span>;</span><br><span class=\"line\">    A(<span class=\"built_in\">i</span>,<span class=\"built_in\">i</span>) = <span class=\"number\">2</span>/dx^<span class=\"number\">2</span>+xspan(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>)^<span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"built_in\">i</span>=<span class=\"built_in\">i</span>+<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%phi function only contains [phi(2),phi(3),...phi(n-2),phi(n-1)]</span></span><br><span class=\"line\">[phi,e]=eig(A);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%sort phi function based on ascending energy.</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:<span class=\"built_in\">max</span></span><br><span class=\"line\">    eng(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = e(<span class=\"built_in\">i</span>,<span class=\"built_in\">i</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">[eng, Index_eng] = <span class=\"built_in\">sort</span>(eng);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%only get the first five phi functions. </span></span><br><span class=\"line\"><span class=\"comment\">%phi(1)/phi(N) are calculated based on FDF/BDF method without approximation.</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> =<span class=\"number\">1</span>:<span class=\"number\">5</span></span><br><span class=\"line\">    phi_sort(<span class=\"number\">2</span>:<span class=\"keyword\">end</span><span class=\"number\">-1</span>,<span class=\"built_in\">i</span>) = phi(:,Index_eng(<span class=\"built_in\">i</span>));</span><br><span class=\"line\">    phi_sort(<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = (<span class=\"number\">4</span>*phi_sort(<span class=\"number\">2</span>,<span class=\"built_in\">i</span>)-phi_sort(<span class=\"number\">3</span>,<span class=\"built_in\">i</span>))/(<span class=\"number\">3</span>+<span class=\"number\">2</span>*dx*<span class=\"built_in\">sqrt</span>(L^<span class=\"number\">2</span>-eng(<span class=\"built_in\">i</span>)));</span><br><span class=\"line\">    phi_sort(<span class=\"keyword\">end</span>,<span class=\"built_in\">i</span>) = (<span class=\"number\">4</span>*phi_sort(<span class=\"keyword\">end</span><span class=\"number\">-1</span>,<span class=\"built_in\">i</span>)-phi_sort(<span class=\"keyword\">end</span><span class=\"number\">-2</span>,<span class=\"built_in\">i</span>))/(<span class=\"number\">3</span>+<span class=\"number\">2</span>*dx*<span class=\"built_in\">sqrt</span>(L^<span class=\"number\">2</span>-eng(<span class=\"built_in\">i</span>)));</span><br><span class=\"line\">    phi_sort(:,<span class=\"built_in\">i</span>) = phi_sort(:,<span class=\"built_in\">i</span>)/<span class=\"built_in\">sqrt</span>(trapz(xspan,phi_sort(:,<span class=\"built_in\">i</span>).^<span class=\"number\">2</span>));</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%phi_sort,eng is the result</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Shooting for nonlinear cases</p>\n</li>\n</ul>\n<p>$$\\frac{d^2\\phi_n}{dx^2}-[\\gamma |\\phi_n|^2+Kx^2-\\varepsilon_n]\\phi_n=0$$\\</p>\n<p>Still use $x\\in [-L,L]$ with L=2 and choose xspan = -L:0.1:L. Find the first two normalized modes for  $\\gamma=0.05$:</p>\n <figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">L=<span class=\"number\">2</span>; dx=<span class=\"number\">0.1</span>; e_start=<span class=\"number\">0.5</span>; tol=<span class=\"number\">10</span>^<span class=\"number\">-4</span>; gama=<span class=\"number\">0.05</span>; A_start=<span class=\"number\">0.2</span>;</span><br><span class=\"line\">xspan = -L:dx:L;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> modes=<span class=\"number\">1</span>:<span class=\"number\">2</span></span><br><span class=\"line\">    e = e_start;</span><br><span class=\"line\">    de=<span class=\"number\">0.01</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">j</span>=<span class=\"number\">1</span>:<span class=\"number\">1000</span></span><br><span class=\"line\">        A = A_start;</span><br><span class=\"line\">        dA = <span class=\"number\">0.1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> a=<span class=\"number\">1</span>:<span class=\"number\">1000</span></span><br><span class=\"line\">            y0 = [A;A*<span class=\"built_in\">sqrt</span>(L^<span class=\"number\">2</span>-e)];</span><br><span class=\"line\">            </span><br><span class=\"line\">            [x,phi] = ode45( @(x,phi) nolinpdefunc(x,phi,gama,e), xspan ,y0);</span><br><span class=\"line\">         </span><br><span class=\"line\">            AA = trapz(x,phi(:,<span class=\"number\">1</span>).^<span class=\"number\">2</span>);</span><br><span class=\"line\">           </span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"built_in\">abs</span>(AA<span class=\"number\">-1</span>)&lt;tol</span><br><span class=\"line\">                opt_A(modes,<span class=\"number\">1</span>)=A;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> AA&gt;<span class=\"number\">1</span></span><br><span class=\"line\">                A = A-dA;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                dA = dA/<span class=\"number\">2</span>;</span><br><span class=\"line\">                A = A+dA;</span><br><span class=\"line\">            <span class=\"keyword\">end</span>       </span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        rightbc = phi(<span class=\"keyword\">end</span>,<span class=\"number\">2</span>)+<span class=\"built_in\">sqrt</span>(L^<span class=\"number\">2</span>-e)*phi(<span class=\"keyword\">end</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">abs</span>(rightbc)&lt;tol</span><br><span class=\"line\">            eigen_e(modes,<span class=\"number\">1</span>)=e;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"number\">-1</span>)^(<span class=\"number\">1</span>+modes)*rightbc&gt;<span class=\"number\">0</span></span><br><span class=\"line\">            e = e+de;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            de = de/<span class=\"number\">2</span>;</span><br><span class=\"line\">            e = e-de;</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    e_start = e+<span class=\"number\">1</span>;</span><br><span class=\"line\">    A_start = A+<span class=\"number\">1</span>;</span><br><span class=\"line\">    eigen_phi(:,modes) = phi(:,<span class=\"number\">1</span>)/<span class=\"built_in\">sqrt</span>(trapz(x,phi(:,<span class=\"number\">1</span>).^<span class=\"number\">2</span>));    </span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"Partial-Differential-Equations\"><a href=\"#Partial-Differential-Equations\" class=\"headerlink\" title=\"Partial Differential Equations\"></a>Partial Differential Equations</h1><p>Solving PDE is harder than ODE, because we need to consider both initial conditions and boundary conditions, also need to solve both in time and in space. The classic PDE is vortivity-streamfunction equations and reaction-diffusion systems. We will go through these two systems to show how to slove PDE.</p>\n<h2 id=\"Finite-Scheme-Method-for-Vorticity-Streamfunction-Equations\"><a href=\"#Finite-Scheme-Method-for-Vorticity-Streamfunction-Equations\" class=\"headerlink\" title=\"Finite Scheme Method for Vorticity-Streamfunction Equations\"></a>Finite Scheme Method for Vorticity-Streamfunction Equations</h2><p>$$\\omega_t+[\\psi,\\omega]=\\mu\\nabla^2\\psi\\quad \\nabla^2\\psi=\\omega\\\\<br>where\\; [\\psi,\\omega]=\\psi_x\\omega_y-\\psi_y\\omega_x \\; and \\; \\nabla^2=\\partial_x^2+\\partial_y^2$$</p>\n<ul>\n<li><p>Steps:</p>\n<ol>\n<li>Elliptic Solve: given $\\omega_0 \\rightarrow$ compute $\\psi_0$ by using $\\nabla^2\\psi=\\omega$</li>\n<li>Time-Stepping: choose step $\\Delta t$ compute $\\omega ‘$ using $\\omega_{k+1}=\\omega_k+\\Delta t\\cdot f(\\psi^k,\\omega^k)$</li>\n<li>Iterate</li>\n</ol>\n</li>\n<li><p>Step 1: the elliptic problem<br>$$(\\psi_{mn})<em>{xx}+(\\psi</em>{mn})<em>{yy}=\\omega</em>{mn}$$<br>By using CDF:<br>$$\\frac{\\psi_{m-1,n}-2\\psi_{m,n}+\\psi_{m+1,n}}{\\Delta x^2}+\\frac{\\psi_{m,n-1}-2\\psi_{m,n}+\\psi_{m,n+1}}{\\Delta y^2}=\\omega_{m,n}\\delta^2$$<br>If we set $\\Delta x=\\Delta y$, and reshape the matrix $\\psi_{m,n}$ and $\\omega_{m,n}$ (m=n)to vectors (the same thing as matlab fucntion <code>reshape(matrix,n^2,1)</code>), we can write the above equation into a matrix form:<br>$$A\\overrightarrow \\psi = \\overrightarrow \\omega $$<br>where $A=A’/\\delta^2$, $A’=A_D+A_x+A_y$, $A_D=-4\\psi_{m,n}$, $A_x=\\psi_{m-1,n}+\\psi_{m,n-1}$ and $A_y=\\psi_{m,n-1}+\\psi_{m,n+1}$</p>\n</li>\n<li><p><em>Matlab script</em></p>\n<p>  $A=\\nabla^2$, $B=\\partial_x$, $C=\\partial_y$</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[A B C]</span> = <span class=\"title\">derivmatrix</span><span class=\"params\">(dx,dy,n)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">e1 = <span class=\"built_in\">ones</span>(n^<span class=\"number\">2</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">%A = dx^2+dy^2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%A = (AD+AX+AY)/dx/dy; AD=-4y(m,n),AX=y(m-1,n)+y(m+1,n), AY=y(m,n-1)+y(m,n+1)</span></span><br><span class=\"line\">AD = spdiags(<span class=\"number\">-4</span>*e1,<span class=\"number\">0</span>,n^<span class=\"number\">2</span>,n^<span class=\"number\">2</span>); </span><br><span class=\"line\">AD(<span class=\"number\">1</span>,<span class=\"number\">1</span>)=<span class=\"number\">2</span>;<span class=\"comment\">%set the first element not -4 to avoid denominator too small</span></span><br><span class=\"line\">AX = spdiags([e1 e1 e1 e1],[-(n<span class=\"number\">-1</span>)*n -n n n*(n<span class=\"number\">-1</span>)],n^<span class=\"number\">2</span>,n^<span class=\"number\">2</span>);</span><br><span class=\"line\">AY = spdiags([e1 e1],[<span class=\"number\">-1</span> <span class=\"number\">1</span>],n^<span class=\"number\">2</span>,n^<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:n</span><br><span class=\"line\">    AY(<span class=\"number\">1</span>+n*(<span class=\"built_in\">i</span><span class=\"number\">-1</span>),n*<span class=\"built_in\">i</span>) = <span class=\"number\">1</span>;</span><br><span class=\"line\">    AY(n*<span class=\"built_in\">i</span>,<span class=\"number\">1</span>+n*(<span class=\"built_in\">i</span><span class=\"number\">-1</span>)) = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">i</span>&lt;n</span><br><span class=\"line\">        AY(n*<span class=\"built_in\">i</span>,<span class=\"number\">1</span>+n*<span class=\"built_in\">i</span>) = <span class=\"number\">0</span>;</span><br><span class=\"line\">        AY(<span class=\"number\">1</span>+n*<span class=\"built_in\">i</span>,n*<span class=\"built_in\">i</span>) = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">A = (AD+AX+AY)/(dx*dy);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%B = dx</span></span><br><span class=\"line\"><span class=\"comment\">%B = (y(m+1,n)-y(m-1,n))/(2*dx)</span></span><br><span class=\"line\">B = spdiags([e1 -e1 e1 -e1],[-(n<span class=\"number\">-1</span>)*n -n n n*(n<span class=\"number\">-1</span>)],n^<span class=\"number\">2</span>,n^<span class=\"number\">2</span>)/(<span class=\"number\">2</span>*dx);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%C = dy</span></span><br><span class=\"line\"><span class=\"comment\">%C = (y(m,n+1)-y(m,n-1))/(2*dy)</span></span><br><span class=\"line\">C = spdiags([-e1 e1],[<span class=\"number\">-1</span>,<span class=\"number\">1</span>],n^<span class=\"number\">2</span>,n^<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:n</span><br><span class=\"line\">    C(<span class=\"number\">1</span>+n*(<span class=\"built_in\">i</span><span class=\"number\">-1</span>),n*<span class=\"built_in\">i</span>) = <span class=\"number\">-1</span>;</span><br><span class=\"line\">    C(n*<span class=\"built_in\">i</span>,<span class=\"number\">1</span>+n*(<span class=\"built_in\">i</span><span class=\"number\">-1</span>)) = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">i</span>&lt;n</span><br><span class=\"line\">        C(n*<span class=\"built_in\">i</span>,<span class=\"number\">1</span>+n*<span class=\"built_in\">i</span>) = <span class=\"number\">0</span>;</span><br><span class=\"line\">        C(<span class=\"number\">1</span>+n*<span class=\"built_in\">i</span>,n*<span class=\"built_in\">i</span>) = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">C = C/(<span class=\"number\">2</span>*dy);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>then, we could use one of these two method to slove $\\psi$</p>\n <figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">psi</span> = A\\w;</span><br></pre></td></tr></table></figure>\n <figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[L,U,P] = lu(A);</span><br><span class=\"line\">y = L\\(P*w);</span><br><span class=\"line\"><span class=\"built_in\">psi</span> = U\\y;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Step 2: Method Line</li>\n</ul>\n<p>$$<br>\\nabla^2\\psi(x,y)=f(x,y)\\qquad+b.c.\\\\<br>u_t(t,x)=u_x(t,x)\\quad+i.c.,b.c.\\\\<br>u_x(t,x)\\approx\\frac{u(x+\\Delta x)-u(x-\\Delta x)}{2\\Delta x}<br>$$<br>We have to condiser the stability of this method. Choose $\\lambda$ carefully to make sure it is stable and also will not run forever.<br>$$u_n^{(m)}=g^mexp(i\\zeta\\Delta x)\\\\<br>\\lambda =\\frac{\\Delta t^{num-t-der}} {\\Delta x^{num-x-der}}$$</p>\n<h2 id=\"Spectral-Method-for-Vorticity-Streamfunction-Equations\"><a href=\"#Spectral-Method-for-Vorticity-Streamfunction-Equations\" class=\"headerlink\" title=\"Spectral Method for Vorticity-Streamfunction Equations\"></a>Spectral Method for Vorticity-Streamfunction Equations</h2><p>expand u(x,t):</p>\n<p>$$u(x,t)=\\sum_{k=1}^N a_k(t)\\phi_k(x)\\qquad$$<br> where $\\phi_k(x)$are orthogonal<br>Using Fourier Series</p>\n<p>$$\\widehat{u}(t)=u(k,t)=\\sum_{n=1}^N u(n,t)e^{-i2\\pi(k-1)(n-1)/N}\\\\\\qquad\\;u(n,t)=1/N\\sum_{n=1}^N \\widehat u(t)e^{i2\\pi(k-1)(n-1)/N}$$<br>Derivative property:<br>$$\\widehat u^{(m)}(x,t)=(ik)^{(m)}\\widehat u(k,t)$$<br>PDE  Fourier Space<br>$$u_t=Lu+N(u) \\Longrightarrow \\widehat(u)_t=\\alpha(k)\\widehat u+\\widehat N(u)$$<br>Here attached the script for solve VSE by the above two methods.</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clear all; clf; close all; clc</span><br><span class=\"line\">nu = <span class=\"number\">0.001</span>;</span><br><span class=\"line\">n=<span class=\"number\">64</span>;</span><br><span class=\"line\">L=<span class=\"number\">10</span>;</span><br><span class=\"line\">tspan = <span class=\"number\">0</span>:<span class=\"number\">0.5</span>:<span class=\"number\">4</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">w1 = runvs(L,n,tspan,nu,<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">w2 = runvs(L,n,tspan,nu,<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">w3 = runvs(L,n,tspan,nu,<span class=\"number\">3</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">wfsol</span> = <span class=\"title\">runvs</span><span class=\"params\">(L,n,tspan,nu,choice)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">x2 = <span class=\"built_in\">linspace</span>(-L/<span class=\"number\">2</span>,L/<span class=\"number\">2</span>,n+<span class=\"number\">1</span>);</span><br><span class=\"line\">x = x2(<span class=\"number\">1</span>:n);</span><br><span class=\"line\">dx = x(<span class=\"number\">2</span>)-x(<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">[X,Y] = <span class=\"built_in\">meshgrid</span>(x);<span class=\"comment\">%grid</span></span><br><span class=\"line\">[A,B,C] = derivmatrix(dx,dx,n);<span class=\"comment\">%apply to vector [64*64,1]</span></span><br><span class=\"line\"></span><br><span class=\"line\">wfinit = <span class=\"built_in\">exp</span>(-X.^<span class=\"number\">2</span>-Y.^<span class=\"number\">2</span>/<span class=\"number\">20</span>);<span class=\"comment\">%grid</span></span><br><span class=\"line\">wfinitvect = <span class=\"built_in\">reshape</span>(wfinit,n^<span class=\"number\">2</span>,<span class=\"number\">1</span>);<span class=\"comment\">%vector</span></span><br><span class=\"line\"></span><br><span class=\"line\">[t,wfsol] = ode45(@(t,wfvec) vortstream(t,wfvec,n,nu,A,B,C,choice,<span class=\"number\">1</span>),tspan,wfinitvect);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> choice==<span class=\"number\">3</span></span><br><span class=\"line\">    kx = (<span class=\"number\">2</span>*<span class=\"built_in\">pi</span>/L)*[<span class=\"number\">0</span>:(n/<span class=\"number\">2</span><span class=\"number\">-1</span>) (-n/<span class=\"number\">2</span>):<span class=\"number\">-1</span>];</span><br><span class=\"line\">    kx(<span class=\"number\">1</span>) = <span class=\"number\">1e-6</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    [KX,KY]=<span class=\"built_in\">meshgrid</span>(kx);</span><br><span class=\"line\">    K = KX.^<span class=\"number\">2</span>+KY.^<span class=\"number\">2</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    [t,wfsol] = ode45(@(t,wfvec) vortstream(t,wfvec,n,nu,A,B,C,choice,K)tspan,wfinitvect);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rhs</span> = <span class=\"title\">vortstream</span><span class=\"params\">(t,w,n,nu,A,B,C,choice,K)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> choice==<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"built_in\">psi</span> = A\\w;<span class=\"comment\">%vector</span></span><br><span class=\"line\"><span class=\"keyword\">elseif</span> choice==<span class=\"number\">2</span></span><br><span class=\"line\">    [L,U,P] = lu(A);</span><br><span class=\"line\">    y=L\\(P*w);</span><br><span class=\"line\">    <span class=\"built_in\">psi</span> = U\\y;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    wf = fft2(<span class=\"built_in\">reshape</span>(w,n,n));</span><br><span class=\"line\">    psif = -wf./K;</span><br><span class=\"line\">    <span class=\"built_in\">psi</span> = <span class=\"built_in\">reshape</span>(<span class=\"built_in\">real</span>(ifft2(psif)),n^<span class=\"number\">2</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">rhs = -(B*<span class=\"built_in\">psi</span>).*(C*w)+(C*<span class=\"built_in\">psi</span>).*(B*w)+nu*A*w;<span class=\"comment\">%vector</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Chebishev-Polynomials\"><a href=\"#Chebishev-Polynomials\" class=\"headerlink\" title=\"Chebishev Polynomials\"></a>Chebishev Polynomials</h2><p>$$\\phi_k(x)=T_k(x)\\quad T_k(cos\\theta)=cosk\\theta$$<br>Matlab Script:</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[D,x]</span> = <span class=\"title\">cheb</span><span class=\"params\">(N)</span></span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> N==<span class=\"number\">0</span>, D=<span class=\"number\">0</span>; x=<span class=\"number\">1</span>; <span class=\"keyword\">return</span>, <span class=\"keyword\">end</span></span><br><span class=\"line\">  x = <span class=\"built_in\">cos</span>(<span class=\"built_in\">pi</span>*(<span class=\"number\">0</span>:N)/N)'; </span><br><span class=\"line\">  c = [<span class=\"number\">2</span>; <span class=\"built_in\">ones</span>(N<span class=\"number\">-1</span>,<span class=\"number\">1</span>); <span class=\"number\">2</span>].*(<span class=\"number\">-1</span>).^(<span class=\"number\">0</span>:N)';</span><br><span class=\"line\">  X = <span class=\"built_in\">repmat</span>(x,<span class=\"number\">1</span>,N+<span class=\"number\">1</span>);</span><br><span class=\"line\">  dX = X-X';                  </span><br><span class=\"line\">  D  = (c*(<span class=\"number\">1.</span>/c)')./(dX+(<span class=\"built_in\">eye</span>(N+<span class=\"number\">1</span>)));      <span class=\"comment\">% off-diagonal entries</span></span><br><span class=\"line\">  D  = D - <span class=\"built_in\">diag</span>(sum(D'));                 <span class=\"comment\">% diagonal entries</span></span><br></pre></td></tr></table></figure>\n<p>Solve reaction-diffusion system with both spectral and cheb methods<br>$$U_t=\\lambda(A)U-\\omega (A)V+D_1\\nabla^2U\\\\V_t=\\omega (a)U+\\lambda(A)V+D_2\\nabla^2V$$<br>where $A^2=U^2+V^2$ and $\\nabla^2=\\partial_x^2+\\partial_y^2$. Consider $\\lambda(A)=1-A^2$ and $\\omega(A)=-\\beta A^2$</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clear all; close all; clc</span><br><span class=\"line\">L=<span class=\"number\">20</span>;n=<span class=\"number\">64</span>;<span class=\"built_in\">beta</span>=<span class=\"number\">1</span>;d1=<span class=\"number\">0.1</span>;d2=d1;m=<span class=\"number\">1</span>;</span><br><span class=\"line\">tspan=<span class=\"number\">0</span>:<span class=\"number\">0.5</span>:<span class=\"number\">4</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">uv1 = runrds_fft(tspan,L,n,<span class=\"built_in\">beta</span>,d1,d2,m);</span><br><span class=\"line\">A1 = <span class=\"built_in\">real</span>(uv1);</span><br><span class=\"line\">A2 = <span class=\"built_in\">imag</span>(uv1);</span><br><span class=\"line\"></span><br><span class=\"line\">n=<span class=\"number\">31</span>;</span><br><span class=\"line\">uv2 = runrds_cheb(tspan,L,n,<span class=\"built_in\">beta</span>,d1,d2,m);</span><br><span class=\"line\">A3 = uv2;</span><br></pre></td></tr></table></figure>\n<p>we consider $x,y \\in[-10,10]$, n=64, $\\beta =1$, $D_1=D_2=0.1$, m=1, tspan=0:0.5:4 and $u_f$ stacked on top of $v_f$.<br>The following is FFT(spectral) method:</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">xfsol</span> = <span class=\"title\">runrds_fft</span><span class=\"params\">(tspan,L,n,beta,d1,d2,m)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">x2 = <span class=\"built_in\">linspace</span>(-L/<span class=\"number\">2</span>,L/<span class=\"number\">2</span>,n+<span class=\"number\">1</span>);</span><br><span class=\"line\">x = x2(<span class=\"number\">1</span>:n);</span><br><span class=\"line\">y=x;</span><br><span class=\"line\"></span><br><span class=\"line\">kx = (<span class=\"number\">2</span>*<span class=\"built_in\">pi</span>/L)*[<span class=\"number\">0</span>:(n/<span class=\"number\">2</span><span class=\"number\">-1</span>) (-n/<span class=\"number\">2</span>):<span class=\"number\">-1</span>];</span><br><span class=\"line\">kx(<span class=\"number\">1</span>) = <span class=\"number\">1e-6</span>;</span><br><span class=\"line\">ky=kx;</span><br><span class=\"line\"></span><br><span class=\"line\">[X,Y]=<span class=\"built_in\">meshgrid</span>(x,y);</span><br><span class=\"line\">[KX,KY]=<span class=\"built_in\">meshgrid</span>(kx,ky);</span><br><span class=\"line\">K = KX.^<span class=\"number\">2</span>+KY.^<span class=\"number\">2</span>;</span><br><span class=\"line\">Kvec = <span class=\"built_in\">reshape</span>(K,n^<span class=\"number\">2</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">uint = <span class=\"built_in\">tanh</span>(<span class=\"built_in\">sqrt</span>(X.^<span class=\"number\">2</span>+Y.^<span class=\"number\">2</span>)).*<span class=\"built_in\">cos</span>(m*<span class=\"built_in\">angle</span>(X+<span class=\"built_in\">i</span>*Y)-(<span class=\"built_in\">sqrt</span>(X.^<span class=\"number\">2</span>+Y.^<span class=\"number\">2</span>)));<span class=\"comment\">%grid</span></span><br><span class=\"line\">vint = <span class=\"built_in\">tanh</span>(<span class=\"built_in\">sqrt</span>(X.^<span class=\"number\">2</span>+Y.^<span class=\"number\">2</span>)).*<span class=\"built_in\">sin</span>(m*<span class=\"built_in\">angle</span>(X+<span class=\"built_in\">i</span>*Y)-(<span class=\"built_in\">sqrt</span>(X.^<span class=\"number\">2</span>+Y.^<span class=\"number\">2</span>)));</span><br><span class=\"line\">ufint = fft2(uint);</span><br><span class=\"line\">vfint = fft2(vint);</span><br><span class=\"line\">ufvecint = <span class=\"built_in\">reshape</span>(ufint,n^<span class=\"number\">2</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">vfvecint = <span class=\"built_in\">reshape</span>(vfint,n^<span class=\"number\">2</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">xfvecint = [ufvecint;vfvecint];</span><br><span class=\"line\"></span><br><span class=\"line\">[t,xfsol] = ode45(@(t,xfvec) rds_fft(t,xfvec,<span class=\"built_in\">beta</span>,Kvec,n,d1,d2),tspan,xfvecint);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rhs</span> = <span class=\"title\">rds_fft</span><span class=\"params\">(t,xfvec,beta,Kvec,n,d1,d2)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ufvec = xfvec(<span class=\"number\">1</span>:n^<span class=\"number\">2</span>);</span><br><span class=\"line\">vfvec = xfvec(n^<span class=\"number\">2</span>+<span class=\"number\">1</span>:<span class=\"keyword\">end</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">u = <span class=\"built_in\">real</span>(ifft2(<span class=\"built_in\">reshape</span>(ufvec,n,n)));</span><br><span class=\"line\">v = <span class=\"built_in\">real</span>(ifft2(<span class=\"built_in\">reshape</span>(vfvec,n,n)));</span><br><span class=\"line\">A = u.^<span class=\"number\">2</span>+v.^<span class=\"number\">2</span>;</span><br><span class=\"line\">l = <span class=\"number\">1</span>-A;</span><br><span class=\"line\">w = -<span class=\"built_in\">beta</span>*A;</span><br><span class=\"line\"></span><br><span class=\"line\">uft = <span class=\"built_in\">reshape</span>(fft2(l.*u-w.*v),n^<span class=\"number\">2</span>,<span class=\"number\">1</span>)-d1*Kvec.*ufvec;</span><br><span class=\"line\">vft = <span class=\"built_in\">reshape</span>(fft2(w.*u+l.*v),n^<span class=\"number\">2</span>,<span class=\"number\">1</span>)-d2*Kvec.*vfvec;</span><br><span class=\"line\"></span><br><span class=\"line\">rhs = [uft;vft];</span><br></pre></td></tr></table></figure>\n<p>The following is cheb method with n=30 and m=1</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">xsolvec</span> = <span class=\"title\">runrds_cheb</span><span class=\"params\">(tspan,L,n,beta,d1,d2,m)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">[D,x2] = cheb(n<span class=\"number\">-1</span>);</span><br><span class=\"line\">D2= D^<span class=\"number\">2</span>;</span><br><span class=\"line\">D2(<span class=\"number\">1</span>,:) = <span class=\"built_in\">zeros</span>(<span class=\"number\">1</span>,n);</span><br><span class=\"line\">D2(n,:) = <span class=\"built_in\">zeros</span>(<span class=\"number\">1</span>,n);<span class=\"comment\">%boundary should be 0</span></span><br><span class=\"line\">I = <span class=\"built_in\">eye</span>(<span class=\"built_in\">length</span>(D2));</span><br><span class=\"line\">Lap = kron(D2,I)+kron(I,D2);</span><br><span class=\"line\"></span><br><span class=\"line\">x = x2*L/<span class=\"number\">2</span>;</span><br><span class=\"line\">[X,Y]=<span class=\"built_in\">meshgrid</span>(x);</span><br><span class=\"line\"></span><br><span class=\"line\">uinit = <span class=\"built_in\">tanh</span>(<span class=\"built_in\">sqrt</span>(X.^<span class=\"number\">2</span>+Y.^<span class=\"number\">2</span>)).*<span class=\"built_in\">cos</span>(m*<span class=\"built_in\">angle</span>(X+<span class=\"built_in\">i</span>*Y)-(<span class=\"built_in\">sqrt</span>(X.^<span class=\"number\">2</span>+Y.^<span class=\"number\">2</span>)));<span class=\"comment\">%grid</span></span><br><span class=\"line\">vinit = <span class=\"built_in\">tanh</span>(<span class=\"built_in\">sqrt</span>(X.^<span class=\"number\">2</span>+Y.^<span class=\"number\">2</span>)).*<span class=\"built_in\">sin</span>(m*<span class=\"built_in\">angle</span>(X+<span class=\"built_in\">i</span>*Y)-(<span class=\"built_in\">sqrt</span>(X.^<span class=\"number\">2</span>+Y.^<span class=\"number\">2</span>)));</span><br><span class=\"line\"></span><br><span class=\"line\">uvecinit = <span class=\"built_in\">reshape</span>(uinit,n^<span class=\"number\">2</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">vvecinit = <span class=\"built_in\">reshape</span>(vinit,n^<span class=\"number\">2</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">xvecinit = [uvecinit;vvecinit];</span><br><span class=\"line\"></span><br><span class=\"line\">[t,xsolvec] =ode45(@(t,xvec) rds_cheb(t,L,xvec,<span class=\"built_in\">beta</span>,Lap,n,d1,d2),tspan,xvecinit);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rhs</span> = <span class=\"title\">rds_cheb</span><span class=\"params\">(t,L,xvec,beta,Lap,n,d1,d2)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">uvec = xvec(<span class=\"number\">1</span>:n^<span class=\"number\">2</span>);</span><br><span class=\"line\">vvec = xvec(n^<span class=\"number\">2</span>+<span class=\"number\">1</span>:<span class=\"keyword\">end</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">Avec = uvec.^<span class=\"number\">2</span>+vvec.^<span class=\"number\">2</span>;</span><br><span class=\"line\">lvec = <span class=\"number\">1</span>-Avec;</span><br><span class=\"line\">wvec = -<span class=\"built_in\">beta</span>*Avec;</span><br><span class=\"line\"></span><br><span class=\"line\">ut = lvec.*uvec-wvec.*vvec+d1*<span class=\"number\">4</span>/L^<span class=\"number\">2</span>*Lap*uvec;</span><br><span class=\"line\">vt = wvec.*uvec+lvec.*vvec+d2*<span class=\"number\">4</span>/L^<span class=\"number\">2</span>*Lap*vvec;</span><br><span class=\"line\"></span><br><span class=\"line\">rhs = [ut;vt];</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><em>A manual for individual use, which focuses on how to solve ordinary and partial differential equation numerically, including how to solve initial value problem with Euler, 2nd- and 4th- order Runge-Kutta and Adams-Bashford method; how to handle boundary value problem with shooting method and direct method and how to deal with PDE with finite difference schemes and spectral methods. Quantum Harmonic Oscillator, Vorticity-Streamfunction Equations, Reaction-Diffusion Systems are are discussed.</em></p>\n<h1 id=\"Initial-Value-Problem\"><a href=\"#Initial-Value-Problem\" class=\"headerlink\" title=\"Initial Value Problem\"></a>Initial Value Problem</h1><p>$$<br>\\frac{d\\overrightarrow{y}}{dt}=f(t,\\overrightarrow{y}) \\quad \\overrightarrow{y}(0)=\\overrightarrow{y_0} \\quad t\\in[0,T]<br>$$</p>\n<h2 id=\"Forward-Euler-Method\"><a href=\"#Forward-Euler-Method\" class=\"headerlink\" title=\"Forward Euler Method\"></a>Forward Euler Method</h2><p>This is the simplest algorithm for solving this problem, which is derived from the definition of the derivative:</p>\n<p>$$<br>\\frac{d\\overrightarrow y}{dt}=\\lim_{\\Delta t \\to 0} \\frac{\\Delta\\overrightarrow y}{\\Delta t} \\approx \\frac{\\overrightarrow y_{n+1}-\\overrightarrow y_n}{t_{n+1}-t_n}<br>$$</p>\n<p>From the above equation, we can get:</p>\n<p>$$<br>\\overrightarrow{y}_{n+1} = \\overrightarrow y_n + \\Delta t \\cdot f(t_n,\\overrightarrow y_n)<br>$$</p>\n<p>Note that each subsequenct approximation in Euler Method is generated from the slope of the previous point. Considering the error coulde be very large, we need to find some ways to improve it.</p>\n<h2 id=\"Improved-from-Euler-Method\"><a href=\"#Improved-from-Euler-Method\" class=\"headerlink\" title=\"Improved from Euler Method\"></a>Improved from Euler Method</h2><p> One way we can think of is to use the slope of other points instead of that of the previous one to predict the next point. For example, the average slope (Heun’s Method), or the slope of the midpoint (RK2).</p>\n<h3 id=\"Heun’s\"><a href=\"#Heun’s\" class=\"headerlink\" title=\"Heun’s\"></a>Heun’s</h3><p>  $$y_{n+1}=y_n+\\frac{\\Delta t}{2}[f(t_n,y_n)+f(t_{n+1},y_{n+1})]$$</p>\n<h3 id=\"RK2\"><a href=\"#RK2\" class=\"headerlink\" title=\"RK2\"></a>RK2</h3><p>  $$y_{n+1}=y_n+\\Delta t \\cdot f[t_n+\\frac{\\Delta t}{2},y(t_n+\\frac{\\Delta t}{2})]$$</p>\n<h3 id=\"In-general\"><a href=\"#In-general\" class=\"headerlink\" title=\"In general\"></a>In general</h3><p>  $$y_{n+1}=y_n+\\Delta t[A \\cdot f(t_n,y_n)+B \\cdot f(t+P\\Delta t,y_n+Q\\Delta t \\cdot f(t_n,y_n)\\\\<br>  where\\quad A+B=1\\quad B\\cdot P=\\frac{1}{2}\\quad B\\cdot Q=\\frac{1}{2}$$</p>\n<ul>\n<li>If $A=\\frac{1}{2}\\Rightarrow B=\\frac{1}{2}\\Rightarrow P=1\\Rightarrow Q=1\\Rightarrow$Heun’s Method</li>\n<li>If $A=0\\Rightarrow B=0\\Rightarrow P=\\frac{1}{2}\\Rightarrow Q=\\frac{1}{2}\\Rightarrow$RK2 Method</li>\n</ul>\n<h3 id=\"RK4\"><a href=\"#RK4\" class=\"headerlink\" title=\"RK4\"></a>RK4</h3><p>$$y_{n+1}=y_n+\\frac{\\Delta t}{6}(f_1+2f_2+2f_3+f_4)\\\\<br>f_1=f(t_n,y_n)\\\\<br>f_2=f(t_n+\\frac{\\Delta t}{2},y_n+\\frac{\\Delta t}{2}\\cdot f_1)\\\\<br>f_3=f(t_n+\\frac{\\Delta t}{2},y_n+\\frac{\\Delta t}{2}\\cdot f_2)\\\\<br>f_4=f(t_n+\\frac{\\Delta t}{2},y_n+\\frac{\\Delta t}{2}\\cdot f_3)$$</p>\n<h3 id=\"Summary-and-Error-Analysis\"><a href=\"#Summary-and-Error-Analysis\" class=\"headerlink\" title=\"Summary and Error Analysis\"></a>Summary and Error Analysis</h3><table>\n<thead>\n<tr>\n<th>Scheme</th>\n<th>Local Error</th>\n<th>Global Error</th>\n<th>Matlab</th>\n<th>Python</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Forward Euler</td>\n<td>$\\Delta t^2$</td>\n<td>$\\Delta t$</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Heun’s/RK2</td>\n<td>$\\Delta t^3$</td>\n<td>$\\Delta t^2$</td>\n<td>ode23</td>\n<td>Method=RK23</td>\n</tr>\n<tr>\n<td>RK4</td>\n<td>$\\Delta t^5$</td>\n<td>$\\Delta t^4$</td>\n<td>ode45</td>\n<td>Method=RK45</td>\n</tr>\n</tbody>\n</table>\n<p>The error in numerical algorithm not only comes from the local error (truncated error) in the algorithm iteself, but also arises from round off error since computer can only keep limit digits of number: $Error_{total}=\\varepsilon_{round\\ off}+\\varepsilon_{truncate}$. If the round-off error is dominant, our algorithm can be unstable to be used. That’s why Backward Euler Method is introduced.</p>\n<h2 id=\"Backward-Euler-Method\"><a href=\"#Backward-Euler-Method\" class=\"headerlink\" title=\"Backward Euler Method\"></a>Backward Euler Method</h2><p>It is an implicit method, which is more stable</p>\n<p>$$y_n=y_{n+1}-\\Delta t \\cdot f(t_{n+1},y_{n+1})$$</p>\n<p>Example:</p>\n<p>$$\\frac{dy}{dt}=\\lambda y\\quad y(0)=y_0$$</p>\n<ul>\n<li><p>FE:<br>$$y_{n+1}=y_n+\\Delta t \\cdot f(t_n,y_n)=y_n+\\Delta t \\cdot \\lambda y \\Rightarrow y_n=(y_0+\\varepsilon_{round_off})(1+\\Delta t \\lambda)^N$$<br>set  $r_{FE}=(1+\\Delta t \\lambda)^N\\Rightarrow y_n=y_0\\cdot r_{FE}^N+\\varepsilon_{round_off}\\cdot r_{FE}^N$</p>\n<ul>\n<li>$\\lambda&gt;0\\Rightarrow |r_{FE}|&gt;1\\Rightarrow$ unconditionally unstable</li>\n<li>$\\lambda&lt;0\\Rightarrow |r_{FE}|&lt;1\\Rightarrow \\begin{cases} \\Delta t&lt;\\frac{2}{|\\lambda|} &amp; stable\\\\ \\Delta t&gt;\\frac{2}{|\\lambda|} &amp; unsatble\\ \\end{cases}$</li>\n</ul>\n</li>\n<li><p>BE:</p>\n<p>$$y_n=y_{n+1}-\\Delta t\\cdot \\lambda\\cdot y_{n+1}\\Rightarrow y_{n+1}=r_{BE}\\cdot y_n,\\ where\\ r_{BE}=\\frac{1}{1-\\Delta t\\lambda}\\\\<br>y_n=y_0\\cdot r_{BE}^N+\\varepsilon_{round_off}\\cdot r_{BE}^N$$</p>\n<ul>\n<li>$\\lambda&lt;0\\Rightarrow |r_{FE}|&lt;1\\Rightarrow$ unconditionally stable</li>\n<li>$\\lambda&gt;0\\Rightarrow |r_{FE}|&lt;1\\Rightarrow \\begin{cases} \\Delta t&gt;\\frac{2}{|\\lambda|} &amp; stable\\\\ \\Delta t&lt;\\frac{2}{|\\lambda|} &amp; unsatble\\ \\end{cases}$</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"MultiStep-Method\"><a href=\"#MultiStep-Method\" class=\"headerlink\" title=\"MultiStep Method\"></a>MultiStep Method</h2><ul>\n<li>Adams-Bash forth (explicit method)<br>$$y_{n+1}=y_n+\\frac{\\Delta t}{2}(3f_n-f_{n-1})$$ </li>\n<li>Adams-Moulthon (implicit method)<br>$$y_{n+1}=y_n+\\frac{\\Delta t}{2}(f_{n+1}+f_n)$$</li>\n<li>Predictor-Corrector<br>$$y_{n+1}^P=y_n+\\frac{\\Delta t}{2}(3f_n-f_{n-1})\\\\<br>y_{n+1}=y_n+\\frac{\\Delta t}{2}[f(t_{n+1},y_{n+1}^P)+f_n]$$</li>\n</ul>\n<h2 id=\"Matlab-for-ODE45\"><a href=\"#Matlab-for-ODE45\" class=\"headerlink\" title=\"Matlab for ODE45\"></a>Matlab for ODE45</h2><p>solve this equation $\\frac{d^2y(t)}{dt^2}+\\epsilon[y^2(t)-1]\\frac{dy(t)}{dt}+y(t)=0$ with $\\epsilon$=0.1, t=[0:0.5:32], y(t=0)=$\\sqrt 3$ and $\\frac{dy(t=0)}{dt}$=1 by ode45 method.</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span> = <span class=\"title\">fvdposc</span><span class=\"params\">(t,y,epsilon)</span></span></span><br><span class=\"line\">f1 = y(<span class=\"number\">2</span>);                          <span class=\"comment\">%f1=y'</span></span><br><span class=\"line\">f2 = -epsilon*(y(<span class=\"number\">1</span>)^<span class=\"number\">2</span><span class=\"number\">-1</span>)*y(<span class=\"number\">2</span>)-y(<span class=\"number\">1</span>);<span class=\"comment\">%f2=y''</span></span><br><span class=\"line\">f = [f1;f2];    <span class=\"comment\">%f must be a column vector</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">abstol=<span class=\"number\">10</span>^<span class=\"number\">-6</span>;reltol=<span class=\"number\">10</span>^<span class=\"number\">-6</span>;</span><br><span class=\"line\">options = odeset(<span class=\"string\">'AbsTol'</span>,abstol,<span class=\"string\">'RelTol'</span>,reltol);</span><br><span class=\"line\"><span class=\"comment\">%if options not specified, use the default one. the other items must be there.</span></span><br><span class=\"line\">[T,Y] = ode45( @(t,y) fvdposc(t,y,epsilon),tspan,y0,options);</span><br></pre></td></tr></table></figure>\n<p>In this way, we can get Y is a [65 $\\times$ 2] matrix. This first column is the y values in tspan, and the other columne is y’ values in tspan.</p>\n<h1 id=\"Boundary-Value-Problem\"><a href=\"#Boundary-Value-Problem\" class=\"headerlink\" title=\"Boundary Value Problem\"></a>Boundary Value Problem</h1><p>There might be multiple solutions to this kind of problem, and we should choose those suit boundary conditions. Let’s start with a simple case:</p>\n<p>$$<br>\\frac{d^2y}{dt^2} = f(t,y,\\frac{dy}{dt})\\quad y(a) = \\alpha\\quad y(b) = \\beta<br>$$</p>\n<h2 id=\"Shooting-Method\"><a href=\"#Shooting-Method\" class=\"headerlink\" title=\"Shooting Method\"></a>Shooting Method</h2><p>Actually, BVP is  comparable to IVP:</p>\n<ul>\n<li>IVP: y(a)=$\\alpha$, y’(a)=A</li>\n<li>BVP: y(a)=$\\alpha$, y(b)=$\\beta$</li>\n</ul>\n<p>So we can guess an initial condition to see how difference the result from the other boundary value; and decide a new initial guess to repeat the above process until the result reaches the other boundary value.</p>\n<h2 id=\"Direct-Linear-BVP\"><a href=\"#Direct-Linear-BVP\" class=\"headerlink\" title=\"Direct-Linear BVP\"></a>Direct-Linear BVP</h2><p>Here we can consider a general case:</p>\n<p>$$<br>\\frac{d^2y}{dt^2}=p(t)\\frac{dy}{dt}+q(t)y+r(t)\\\\<br>\\alpha_1y(a)+\\beta_1y’(a)=\\gamma_1\\\\<br>\\alpha_2y(b)+\\beta_2y’(b)=\\gamma_2<br>$$</p>\n<p>Combine Taylor series and central difference method $y’=\\frac{y(t+\\Delta t)-y(t-\\Delta t)}{2\\Delta t}+O(\\Delta t^2)$, we can get $y’’=\\frac{y(t+\\Delta t)-2y(t)+y(t-\\Delta t)}{\\Delta t^2}+O(\\Delta t^2)$. Finally, we can get: </p>\n<p>$$[1-\\frac{p(t)\\Delta t}{2}]\\cdot y(t+\\Delta t)-[2+q(t)\\Delta t^2]\\cdot y(t)+[1+\\frac{p(t)\\Delta t}{2}]\\cdot y(t-\\Delta t)=r(t)\\Delta t^2$$</p>\n<p>Convert it in to matrix form:</p>\n<p>$$A\\times \\overrightarrow x = \\overrightarrow b$$</p>\n<p>$$ \\begin{pmatrix} 1 &amp; 0 &amp;\\cdots &amp;\\cdots &amp;\\cdots &amp; 0 \\\\ a &amp; b &amp; c &amp; 0 &amp;\\cdots &amp;0 \\\\0&amp;a&amp;b&amp;c&amp;\\cdots&amp;0\\\\\\vdots&amp;\\ddots&amp;\\ddots&amp;\\ddots&amp;\\ddots&amp;\\vdots\\\\\\vdots&amp;\\ddots&amp;\\ddots&amp;a&amp;b&amp;c\\\\0&amp;\\cdots&amp;\\cdots&amp;\\cdots&amp;a&amp;1 \\end{pmatrix} \\times \\begin{pmatrix}y(t_0)\\\\y(t+\\Delta t)\\\\y(t+2\\Delta t)\\\\\\vdots\\\\\\vdots\\\\y(t_N) \\end{pmatrix}=\\begin{pmatrix} \\alpha\\\\r(t+\\Delta t)\\Delta t^2\\\\ r(t+2\\Delta t)\\Delta t^2\\\\\\vdots\\\\\\vdots\\\\\\beta \\end{pmatrix}$$</p>\n<p>In Matlab, we can use function <code>X=A\\b</code> or <code>eig(A)</code> to solve it; in python(numpy), function <code>linalg.solve(A,b)</code> or <code>eig(A)</code> also works.</p>\n<h2 id=\"Newton-Raphson-Method\"><a href=\"#Newton-Raphson-Method\" class=\"headerlink\" title=\"Newton-Raphson Method\"></a>Newton-Raphson Method</h2><p>One thing must be noted that, initial guess for this method should be close to the real value, otherwise it may diverge.<br>$$x_{n+1}=x_n-\\frac{f(x_n)}{f’(x_n)}$$</p>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><ol>\n<li>Approximate y’, y’’ using central difference formula;</li>\n<li>Approximate boundary condition using FDF, DBF</li>\n<li>Solve $A\\overrightarrow x=\\overrightarrow b$</li>\n<li>solution–O($\\Delta t^2$)</li>\n</ol>\n<h2 id=\"Quantum-Harmonic-Oscillation\"><a href=\"#Quantum-Harmonic-Oscillation\" class=\"headerlink\" title=\"Quantum Harmonic Oscillation\"></a>Quantum Harmonic Oscillation</h2><p>$$\\frac{d^2\\phi_n}{dx^2}-[Kx^2-\\varepsilon_n]\\phi_n=0$$<br>we expect the solution $\\phi_n(x)\\rightarrow 0$ as $x\\rightarrow \\pm \\infty$ and $\\varepsilon_n&gt;0$ is the quantum energy. Note that $K=km/\\hbar^2$ and $\\varepsilon_n=E_nm/\\hbar^2$. Here take K=1, and always normalize so that $\\int_{-\\infty} ^{+\\infty} {|\\phi_n|^2} \\,{\\rm d}x=1$. Calculate the first five normalized eigenfunctions ($\\phi_n$) and eigenvalues($\\varepsilon_n$) up to tolerance of $10^{-4}$ in increasing order such that the first eigenvalue is the lowest one.</p>\n<ul>\n<li><p>Shooting method</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>=<span class=\"title\">pdefunc</span><span class=\"params\">(x,y,e)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">f1 = y(<span class=\"number\">2</span>);</span><br><span class=\"line\">f2 = (x^<span class=\"number\">2</span>-e)*y(<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">f = [f1;f2];</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">L=<span class=\"number\">4</span>; dx=<span class=\"number\">0.1</span>; e_start=<span class=\"number\">0.5</span>; tol=<span class=\"number\">10</span>^<span class=\"number\">-4</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">xspan = -L:dx:L;</span><br><span class=\"line\">A = <span class=\"number\">1</span>; <span class=\"comment\">% suggest A=phi(-L)=phi(L)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> modes=<span class=\"number\">1</span>:<span class=\"number\">5</span></span><br><span class=\"line\">    e = e_start;</span><br><span class=\"line\">    de=<span class=\"number\">0.01</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">j</span>=<span class=\"number\">1</span>:<span class=\"number\">1000</span></span><br><span class=\"line\">        y0 = [A;A*<span class=\"built_in\">sqrt</span>(L^<span class=\"number\">2</span>-e)];</span><br><span class=\"line\">        </span><br><span class=\"line\">        [x,phi] = ode45( @(x,phi) pdefunc(x,phi,e), xspan ,y0);</span><br><span class=\"line\">        </span><br><span class=\"line\">        rightbc = phi(<span class=\"keyword\">end</span>,<span class=\"number\">2</span>)+<span class=\"built_in\">sqrt</span>(L^<span class=\"number\">2</span>-e)*phi(<span class=\"keyword\">end</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">abs</span>(rightbc)&lt;tol</span><br><span class=\"line\">            eigen_e(modes,<span class=\"number\">1</span>)=e;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"number\">-1</span>)^(<span class=\"number\">1</span>+modes)*rightbc&gt;<span class=\"number\">0</span></span><br><span class=\"line\">            e = e+de;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            de = de/<span class=\"number\">2</span>;</span><br><span class=\"line\">            e = e-de;</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    eigen_phi(:,modes) = phi(:,<span class=\"number\">1</span>)/<span class=\"built_in\">sqrt</span>(trapz(x,phi(:,<span class=\"number\">1</span>).^<span class=\"number\">2</span>));</span><br><span class=\"line\">        e_start = e+<span class=\"number\">0.2</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%eigen_phi,eigen_e are what we want</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Direct Method</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">L=<span class=\"number\">4</span>; dx=<span class=\"number\">0.1</span>; </span><br><span class=\"line\">xspan = -L:dx:L;</span><br><span class=\"line\"><span class=\"built_in\">max</span> = <span class=\"built_in\">length</span>(xspan)<span class=\"number\">-2</span>;</span><br><span class=\"line\">A = <span class=\"built_in\">zeros</span>(<span class=\"built_in\">max</span>,<span class=\"built_in\">max</span>);</span><br><span class=\"line\">phi_sort = <span class=\"built_in\">zeros</span>(<span class=\"built_in\">max</span>+<span class=\"number\">2</span>,<span class=\"built_in\">max</span>+<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"comment\">% build up A matrix which doesn't consider phi(x1) and phi(xn). A is built</span></span><br><span class=\"line\"><span class=\"comment\">% based on 2nd order central difference. The first and last row don't</span></span><br><span class=\"line\"><span class=\"comment\">% consider x1 and xn, use FDF and BDF and approximation to make phi(x2) and</span></span><br><span class=\"line\"><span class=\"comment\">% phi(x3) express phi(x1); phi(xn-2) and phi(xn-1) express phi(xn).</span></span><br><span class=\"line\">A(<span class=\"number\">1</span>,<span class=\"number\">1</span>:<span class=\"number\">2</span>) = [<span class=\"number\">2</span>/<span class=\"number\">3</span>/dx^<span class=\"number\">2</span>+xspan(<span class=\"number\">2</span>)^<span class=\"number\">2</span>,<span class=\"number\">-2</span>/<span class=\"number\">3</span>/dx^<span class=\"number\">2</span>];</span><br><span class=\"line\">A(<span class=\"keyword\">end</span>,<span class=\"keyword\">end</span><span class=\"number\">-1</span>:<span class=\"keyword\">end</span>) = [<span class=\"number\">-2</span>/<span class=\"number\">3</span>/dx^<span class=\"number\">2</span>,<span class=\"number\">2</span>/<span class=\"number\">3</span>/dx^<span class=\"number\">2</span>+xspan(<span class=\"keyword\">end</span><span class=\"number\">-1</span>)^<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"built_in\">i</span> = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">i</span>&lt;<span class=\"built_in\">max</span></span><br><span class=\"line\">    A(<span class=\"built_in\">i</span>,<span class=\"built_in\">i</span><span class=\"number\">-1</span>) = <span class=\"number\">-1</span>/dx^<span class=\"number\">2</span>;</span><br><span class=\"line\">    A(<span class=\"built_in\">i</span>,<span class=\"built_in\">i</span>+<span class=\"number\">1</span>) = <span class=\"number\">-1</span>/dx^<span class=\"number\">2</span>;</span><br><span class=\"line\">    A(<span class=\"built_in\">i</span>,<span class=\"built_in\">i</span>) = <span class=\"number\">2</span>/dx^<span class=\"number\">2</span>+xspan(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>)^<span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"built_in\">i</span>=<span class=\"built_in\">i</span>+<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%phi function only contains [phi(2),phi(3),...phi(n-2),phi(n-1)]</span></span><br><span class=\"line\">[phi,e]=eig(A);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%sort phi function based on ascending energy.</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:<span class=\"built_in\">max</span></span><br><span class=\"line\">    eng(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = e(<span class=\"built_in\">i</span>,<span class=\"built_in\">i</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">[eng, Index_eng] = <span class=\"built_in\">sort</span>(eng);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%only get the first five phi functions. </span></span><br><span class=\"line\"><span class=\"comment\">%phi(1)/phi(N) are calculated based on FDF/BDF method without approximation.</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> =<span class=\"number\">1</span>:<span class=\"number\">5</span></span><br><span class=\"line\">    phi_sort(<span class=\"number\">2</span>:<span class=\"keyword\">end</span><span class=\"number\">-1</span>,<span class=\"built_in\">i</span>) = phi(:,Index_eng(<span class=\"built_in\">i</span>));</span><br><span class=\"line\">    phi_sort(<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = (<span class=\"number\">4</span>*phi_sort(<span class=\"number\">2</span>,<span class=\"built_in\">i</span>)-phi_sort(<span class=\"number\">3</span>,<span class=\"built_in\">i</span>))/(<span class=\"number\">3</span>+<span class=\"number\">2</span>*dx*<span class=\"built_in\">sqrt</span>(L^<span class=\"number\">2</span>-eng(<span class=\"built_in\">i</span>)));</span><br><span class=\"line\">    phi_sort(<span class=\"keyword\">end</span>,<span class=\"built_in\">i</span>) = (<span class=\"number\">4</span>*phi_sort(<span class=\"keyword\">end</span><span class=\"number\">-1</span>,<span class=\"built_in\">i</span>)-phi_sort(<span class=\"keyword\">end</span><span class=\"number\">-2</span>,<span class=\"built_in\">i</span>))/(<span class=\"number\">3</span>+<span class=\"number\">2</span>*dx*<span class=\"built_in\">sqrt</span>(L^<span class=\"number\">2</span>-eng(<span class=\"built_in\">i</span>)));</span><br><span class=\"line\">    phi_sort(:,<span class=\"built_in\">i</span>) = phi_sort(:,<span class=\"built_in\">i</span>)/<span class=\"built_in\">sqrt</span>(trapz(xspan,phi_sort(:,<span class=\"built_in\">i</span>).^<span class=\"number\">2</span>));</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%phi_sort,eng is the result</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Shooting for nonlinear cases</p>\n</li>\n</ul>\n<p>$$\\frac{d^2\\phi_n}{dx^2}-[\\gamma |\\phi_n|^2+Kx^2-\\varepsilon_n]\\phi_n=0$$\\</p>\n<p>Still use $x\\in [-L,L]$ with L=2 and choose xspan = -L:0.1:L. Find the first two normalized modes for  $\\gamma=0.05$:</p>\n <figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">L=<span class=\"number\">2</span>; dx=<span class=\"number\">0.1</span>; e_start=<span class=\"number\">0.5</span>; tol=<span class=\"number\">10</span>^<span class=\"number\">-4</span>; gama=<span class=\"number\">0.05</span>; A_start=<span class=\"number\">0.2</span>;</span><br><span class=\"line\">xspan = -L:dx:L;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> modes=<span class=\"number\">1</span>:<span class=\"number\">2</span></span><br><span class=\"line\">    e = e_start;</span><br><span class=\"line\">    de=<span class=\"number\">0.01</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">j</span>=<span class=\"number\">1</span>:<span class=\"number\">1000</span></span><br><span class=\"line\">        A = A_start;</span><br><span class=\"line\">        dA = <span class=\"number\">0.1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> a=<span class=\"number\">1</span>:<span class=\"number\">1000</span></span><br><span class=\"line\">            y0 = [A;A*<span class=\"built_in\">sqrt</span>(L^<span class=\"number\">2</span>-e)];</span><br><span class=\"line\">            </span><br><span class=\"line\">            [x,phi] = ode45( @(x,phi) nolinpdefunc(x,phi,gama,e), xspan ,y0);</span><br><span class=\"line\">         </span><br><span class=\"line\">            AA = trapz(x,phi(:,<span class=\"number\">1</span>).^<span class=\"number\">2</span>);</span><br><span class=\"line\">           </span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"built_in\">abs</span>(AA<span class=\"number\">-1</span>)&lt;tol</span><br><span class=\"line\">                opt_A(modes,<span class=\"number\">1</span>)=A;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> AA&gt;<span class=\"number\">1</span></span><br><span class=\"line\">                A = A-dA;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                dA = dA/<span class=\"number\">2</span>;</span><br><span class=\"line\">                A = A+dA;</span><br><span class=\"line\">            <span class=\"keyword\">end</span>       </span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        rightbc = phi(<span class=\"keyword\">end</span>,<span class=\"number\">2</span>)+<span class=\"built_in\">sqrt</span>(L^<span class=\"number\">2</span>-e)*phi(<span class=\"keyword\">end</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">abs</span>(rightbc)&lt;tol</span><br><span class=\"line\">            eigen_e(modes,<span class=\"number\">1</span>)=e;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"number\">-1</span>)^(<span class=\"number\">1</span>+modes)*rightbc&gt;<span class=\"number\">0</span></span><br><span class=\"line\">            e = e+de;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            de = de/<span class=\"number\">2</span>;</span><br><span class=\"line\">            e = e-de;</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    e_start = e+<span class=\"number\">1</span>;</span><br><span class=\"line\">    A_start = A+<span class=\"number\">1</span>;</span><br><span class=\"line\">    eigen_phi(:,modes) = phi(:,<span class=\"number\">1</span>)/<span class=\"built_in\">sqrt</span>(trapz(x,phi(:,<span class=\"number\">1</span>).^<span class=\"number\">2</span>));    </span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"Partial-Differential-Equations\"><a href=\"#Partial-Differential-Equations\" class=\"headerlink\" title=\"Partial Differential Equations\"></a>Partial Differential Equations</h1><p>Solving PDE is harder than ODE, because we need to consider both initial conditions and boundary conditions, also need to solve both in time and in space. The classic PDE is vortivity-streamfunction equations and reaction-diffusion systems. We will go through these two systems to show how to slove PDE.</p>\n<h2 id=\"Finite-Scheme-Method-for-Vorticity-Streamfunction-Equations\"><a href=\"#Finite-Scheme-Method-for-Vorticity-Streamfunction-Equations\" class=\"headerlink\" title=\"Finite Scheme Method for Vorticity-Streamfunction Equations\"></a>Finite Scheme Method for Vorticity-Streamfunction Equations</h2><p>$$\\omega_t+[\\psi,\\omega]=\\mu\\nabla^2\\psi\\quad \\nabla^2\\psi=\\omega\\\\<br>where\\; [\\psi,\\omega]=\\psi_x\\omega_y-\\psi_y\\omega_x \\; and \\; \\nabla^2=\\partial_x^2+\\partial_y^2$$</p>\n<ul>\n<li><p>Steps:</p>\n<ol>\n<li>Elliptic Solve: given $\\omega_0 \\rightarrow$ compute $\\psi_0$ by using $\\nabla^2\\psi=\\omega$</li>\n<li>Time-Stepping: choose step $\\Delta t$ compute $\\omega ‘$ using $\\omega_{k+1}=\\omega_k+\\Delta t\\cdot f(\\psi^k,\\omega^k)$</li>\n<li>Iterate</li>\n</ol>\n</li>\n<li><p>Step 1: the elliptic problem<br>$$(\\psi_{mn})<em>{xx}+(\\psi</em>{mn})<em>{yy}=\\omega</em>{mn}$$<br>By using CDF:<br>$$\\frac{\\psi_{m-1,n}-2\\psi_{m,n}+\\psi_{m+1,n}}{\\Delta x^2}+\\frac{\\psi_{m,n-1}-2\\psi_{m,n}+\\psi_{m,n+1}}{\\Delta y^2}=\\omega_{m,n}\\delta^2$$<br>If we set $\\Delta x=\\Delta y$, and reshape the matrix $\\psi_{m,n}$ and $\\omega_{m,n}$ (m=n)to vectors (the same thing as matlab fucntion <code>reshape(matrix,n^2,1)</code>), we can write the above equation into a matrix form:<br>$$A\\overrightarrow \\psi = \\overrightarrow \\omega $$<br>where $A=A’/\\delta^2$, $A’=A_D+A_x+A_y$, $A_D=-4\\psi_{m,n}$, $A_x=\\psi_{m-1,n}+\\psi_{m,n-1}$ and $A_y=\\psi_{m,n-1}+\\psi_{m,n+1}$</p>\n</li>\n<li><p><em>Matlab script</em></p>\n<p>  $A=\\nabla^2$, $B=\\partial_x$, $C=\\partial_y$</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[A B C]</span> = <span class=\"title\">derivmatrix</span><span class=\"params\">(dx,dy,n)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">e1 = <span class=\"built_in\">ones</span>(n^<span class=\"number\">2</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">%A = dx^2+dy^2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%A = (AD+AX+AY)/dx/dy; AD=-4y(m,n),AX=y(m-1,n)+y(m+1,n), AY=y(m,n-1)+y(m,n+1)</span></span><br><span class=\"line\">AD = spdiags(<span class=\"number\">-4</span>*e1,<span class=\"number\">0</span>,n^<span class=\"number\">2</span>,n^<span class=\"number\">2</span>); </span><br><span class=\"line\">AD(<span class=\"number\">1</span>,<span class=\"number\">1</span>)=<span class=\"number\">2</span>;<span class=\"comment\">%set the first element not -4 to avoid denominator too small</span></span><br><span class=\"line\">AX = spdiags([e1 e1 e1 e1],[-(n<span class=\"number\">-1</span>)*n -n n n*(n<span class=\"number\">-1</span>)],n^<span class=\"number\">2</span>,n^<span class=\"number\">2</span>);</span><br><span class=\"line\">AY = spdiags([e1 e1],[<span class=\"number\">-1</span> <span class=\"number\">1</span>],n^<span class=\"number\">2</span>,n^<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:n</span><br><span class=\"line\">    AY(<span class=\"number\">1</span>+n*(<span class=\"built_in\">i</span><span class=\"number\">-1</span>),n*<span class=\"built_in\">i</span>) = <span class=\"number\">1</span>;</span><br><span class=\"line\">    AY(n*<span class=\"built_in\">i</span>,<span class=\"number\">1</span>+n*(<span class=\"built_in\">i</span><span class=\"number\">-1</span>)) = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">i</span>&lt;n</span><br><span class=\"line\">        AY(n*<span class=\"built_in\">i</span>,<span class=\"number\">1</span>+n*<span class=\"built_in\">i</span>) = <span class=\"number\">0</span>;</span><br><span class=\"line\">        AY(<span class=\"number\">1</span>+n*<span class=\"built_in\">i</span>,n*<span class=\"built_in\">i</span>) = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">A = (AD+AX+AY)/(dx*dy);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%B = dx</span></span><br><span class=\"line\"><span class=\"comment\">%B = (y(m+1,n)-y(m-1,n))/(2*dx)</span></span><br><span class=\"line\">B = spdiags([e1 -e1 e1 -e1],[-(n<span class=\"number\">-1</span>)*n -n n n*(n<span class=\"number\">-1</span>)],n^<span class=\"number\">2</span>,n^<span class=\"number\">2</span>)/(<span class=\"number\">2</span>*dx);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%C = dy</span></span><br><span class=\"line\"><span class=\"comment\">%C = (y(m,n+1)-y(m,n-1))/(2*dy)</span></span><br><span class=\"line\">C = spdiags([-e1 e1],[<span class=\"number\">-1</span>,<span class=\"number\">1</span>],n^<span class=\"number\">2</span>,n^<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:n</span><br><span class=\"line\">    C(<span class=\"number\">1</span>+n*(<span class=\"built_in\">i</span><span class=\"number\">-1</span>),n*<span class=\"built_in\">i</span>) = <span class=\"number\">-1</span>;</span><br><span class=\"line\">    C(n*<span class=\"built_in\">i</span>,<span class=\"number\">1</span>+n*(<span class=\"built_in\">i</span><span class=\"number\">-1</span>)) = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">i</span>&lt;n</span><br><span class=\"line\">        C(n*<span class=\"built_in\">i</span>,<span class=\"number\">1</span>+n*<span class=\"built_in\">i</span>) = <span class=\"number\">0</span>;</span><br><span class=\"line\">        C(<span class=\"number\">1</span>+n*<span class=\"built_in\">i</span>,n*<span class=\"built_in\">i</span>) = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">C = C/(<span class=\"number\">2</span>*dy);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>then, we could use one of these two method to slove $\\psi$</p>\n <figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">psi</span> = A\\w;</span><br></pre></td></tr></table></figure>\n <figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[L,U,P] = lu(A);</span><br><span class=\"line\">y = L\\(P*w);</span><br><span class=\"line\"><span class=\"built_in\">psi</span> = U\\y;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Step 2: Method Line</li>\n</ul>\n<p>$$<br>\\nabla^2\\psi(x,y)=f(x,y)\\qquad+b.c.\\\\<br>u_t(t,x)=u_x(t,x)\\quad+i.c.,b.c.\\\\<br>u_x(t,x)\\approx\\frac{u(x+\\Delta x)-u(x-\\Delta x)}{2\\Delta x}<br>$$<br>We have to condiser the stability of this method. Choose $\\lambda$ carefully to make sure it is stable and also will not run forever.<br>$$u_n^{(m)}=g^mexp(i\\zeta\\Delta x)\\\\<br>\\lambda =\\frac{\\Delta t^{num-t-der}} {\\Delta x^{num-x-der}}$$</p>\n<h2 id=\"Spectral-Method-for-Vorticity-Streamfunction-Equations\"><a href=\"#Spectral-Method-for-Vorticity-Streamfunction-Equations\" class=\"headerlink\" title=\"Spectral Method for Vorticity-Streamfunction Equations\"></a>Spectral Method for Vorticity-Streamfunction Equations</h2><p>expand u(x,t):</p>\n<p>$$u(x,t)=\\sum_{k=1}^N a_k(t)\\phi_k(x)\\qquad$$<br> where $\\phi_k(x)$are orthogonal<br>Using Fourier Series</p>\n<p>$$\\widehat{u}(t)=u(k,t)=\\sum_{n=1}^N u(n,t)e^{-i2\\pi(k-1)(n-1)/N}\\\\\\qquad\\;u(n,t)=1/N\\sum_{n=1}^N \\widehat u(t)e^{i2\\pi(k-1)(n-1)/N}$$<br>Derivative property:<br>$$\\widehat u^{(m)}(x,t)=(ik)^{(m)}\\widehat u(k,t)$$<br>PDE  Fourier Space<br>$$u_t=Lu+N(u) \\Longrightarrow \\widehat(u)_t=\\alpha(k)\\widehat u+\\widehat N(u)$$<br>Here attached the script for solve VSE by the above two methods.</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clear all; clf; close all; clc</span><br><span class=\"line\">nu = <span class=\"number\">0.001</span>;</span><br><span class=\"line\">n=<span class=\"number\">64</span>;</span><br><span class=\"line\">L=<span class=\"number\">10</span>;</span><br><span class=\"line\">tspan = <span class=\"number\">0</span>:<span class=\"number\">0.5</span>:<span class=\"number\">4</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">w1 = runvs(L,n,tspan,nu,<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">w2 = runvs(L,n,tspan,nu,<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">w3 = runvs(L,n,tspan,nu,<span class=\"number\">3</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">wfsol</span> = <span class=\"title\">runvs</span><span class=\"params\">(L,n,tspan,nu,choice)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">x2 = <span class=\"built_in\">linspace</span>(-L/<span class=\"number\">2</span>,L/<span class=\"number\">2</span>,n+<span class=\"number\">1</span>);</span><br><span class=\"line\">x = x2(<span class=\"number\">1</span>:n);</span><br><span class=\"line\">dx = x(<span class=\"number\">2</span>)-x(<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">[X,Y] = <span class=\"built_in\">meshgrid</span>(x);<span class=\"comment\">%grid</span></span><br><span class=\"line\">[A,B,C] = derivmatrix(dx,dx,n);<span class=\"comment\">%apply to vector [64*64,1]</span></span><br><span class=\"line\"></span><br><span class=\"line\">wfinit = <span class=\"built_in\">exp</span>(-X.^<span class=\"number\">2</span>-Y.^<span class=\"number\">2</span>/<span class=\"number\">20</span>);<span class=\"comment\">%grid</span></span><br><span class=\"line\">wfinitvect = <span class=\"built_in\">reshape</span>(wfinit,n^<span class=\"number\">2</span>,<span class=\"number\">1</span>);<span class=\"comment\">%vector</span></span><br><span class=\"line\"></span><br><span class=\"line\">[t,wfsol] = ode45(@(t,wfvec) vortstream(t,wfvec,n,nu,A,B,C,choice,<span class=\"number\">1</span>),tspan,wfinitvect);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> choice==<span class=\"number\">3</span></span><br><span class=\"line\">    kx = (<span class=\"number\">2</span>*<span class=\"built_in\">pi</span>/L)*[<span class=\"number\">0</span>:(n/<span class=\"number\">2</span><span class=\"number\">-1</span>) (-n/<span class=\"number\">2</span>):<span class=\"number\">-1</span>];</span><br><span class=\"line\">    kx(<span class=\"number\">1</span>) = <span class=\"number\">1e-6</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    [KX,KY]=<span class=\"built_in\">meshgrid</span>(kx);</span><br><span class=\"line\">    K = KX.^<span class=\"number\">2</span>+KY.^<span class=\"number\">2</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    [t,wfsol] = ode45(@(t,wfvec) vortstream(t,wfvec,n,nu,A,B,C,choice,K)tspan,wfinitvect);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rhs</span> = <span class=\"title\">vortstream</span><span class=\"params\">(t,w,n,nu,A,B,C,choice,K)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> choice==<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"built_in\">psi</span> = A\\w;<span class=\"comment\">%vector</span></span><br><span class=\"line\"><span class=\"keyword\">elseif</span> choice==<span class=\"number\">2</span></span><br><span class=\"line\">    [L,U,P] = lu(A);</span><br><span class=\"line\">    y=L\\(P*w);</span><br><span class=\"line\">    <span class=\"built_in\">psi</span> = U\\y;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    wf = fft2(<span class=\"built_in\">reshape</span>(w,n,n));</span><br><span class=\"line\">    psif = -wf./K;</span><br><span class=\"line\">    <span class=\"built_in\">psi</span> = <span class=\"built_in\">reshape</span>(<span class=\"built_in\">real</span>(ifft2(psif)),n^<span class=\"number\">2</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">rhs = -(B*<span class=\"built_in\">psi</span>).*(C*w)+(C*<span class=\"built_in\">psi</span>).*(B*w)+nu*A*w;<span class=\"comment\">%vector</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Chebishev-Polynomials\"><a href=\"#Chebishev-Polynomials\" class=\"headerlink\" title=\"Chebishev Polynomials\"></a>Chebishev Polynomials</h2><p>$$\\phi_k(x)=T_k(x)\\quad T_k(cos\\theta)=cosk\\theta$$<br>Matlab Script:</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[D,x]</span> = <span class=\"title\">cheb</span><span class=\"params\">(N)</span></span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> N==<span class=\"number\">0</span>, D=<span class=\"number\">0</span>; x=<span class=\"number\">1</span>; <span class=\"keyword\">return</span>, <span class=\"keyword\">end</span></span><br><span class=\"line\">  x = <span class=\"built_in\">cos</span>(<span class=\"built_in\">pi</span>*(<span class=\"number\">0</span>:N)/N)'; </span><br><span class=\"line\">  c = [<span class=\"number\">2</span>; <span class=\"built_in\">ones</span>(N<span class=\"number\">-1</span>,<span class=\"number\">1</span>); <span class=\"number\">2</span>].*(<span class=\"number\">-1</span>).^(<span class=\"number\">0</span>:N)';</span><br><span class=\"line\">  X = <span class=\"built_in\">repmat</span>(x,<span class=\"number\">1</span>,N+<span class=\"number\">1</span>);</span><br><span class=\"line\">  dX = X-X';                  </span><br><span class=\"line\">  D  = (c*(<span class=\"number\">1.</span>/c)')./(dX+(<span class=\"built_in\">eye</span>(N+<span class=\"number\">1</span>)));      <span class=\"comment\">% off-diagonal entries</span></span><br><span class=\"line\">  D  = D - <span class=\"built_in\">diag</span>(sum(D'));                 <span class=\"comment\">% diagonal entries</span></span><br></pre></td></tr></table></figure>\n<p>Solve reaction-diffusion system with both spectral and cheb methods<br>$$U_t=\\lambda(A)U-\\omega (A)V+D_1\\nabla^2U\\\\V_t=\\omega (a)U+\\lambda(A)V+D_2\\nabla^2V$$<br>where $A^2=U^2+V^2$ and $\\nabla^2=\\partial_x^2+\\partial_y^2$. Consider $\\lambda(A)=1-A^2$ and $\\omega(A)=-\\beta A^2$</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clear all; close all; clc</span><br><span class=\"line\">L=<span class=\"number\">20</span>;n=<span class=\"number\">64</span>;<span class=\"built_in\">beta</span>=<span class=\"number\">1</span>;d1=<span class=\"number\">0.1</span>;d2=d1;m=<span class=\"number\">1</span>;</span><br><span class=\"line\">tspan=<span class=\"number\">0</span>:<span class=\"number\">0.5</span>:<span class=\"number\">4</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">uv1 = runrds_fft(tspan,L,n,<span class=\"built_in\">beta</span>,d1,d2,m);</span><br><span class=\"line\">A1 = <span class=\"built_in\">real</span>(uv1);</span><br><span class=\"line\">A2 = <span class=\"built_in\">imag</span>(uv1);</span><br><span class=\"line\"></span><br><span class=\"line\">n=<span class=\"number\">31</span>;</span><br><span class=\"line\">uv2 = runrds_cheb(tspan,L,n,<span class=\"built_in\">beta</span>,d1,d2,m);</span><br><span class=\"line\">A3 = uv2;</span><br></pre></td></tr></table></figure>\n<p>we consider $x,y \\in[-10,10]$, n=64, $\\beta =1$, $D_1=D_2=0.1$, m=1, tspan=0:0.5:4 and $u_f$ stacked on top of $v_f$.<br>The following is FFT(spectral) method:</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">xfsol</span> = <span class=\"title\">runrds_fft</span><span class=\"params\">(tspan,L,n,beta,d1,d2,m)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">x2 = <span class=\"built_in\">linspace</span>(-L/<span class=\"number\">2</span>,L/<span class=\"number\">2</span>,n+<span class=\"number\">1</span>);</span><br><span class=\"line\">x = x2(<span class=\"number\">1</span>:n);</span><br><span class=\"line\">y=x;</span><br><span class=\"line\"></span><br><span class=\"line\">kx = (<span class=\"number\">2</span>*<span class=\"built_in\">pi</span>/L)*[<span class=\"number\">0</span>:(n/<span class=\"number\">2</span><span class=\"number\">-1</span>) (-n/<span class=\"number\">2</span>):<span class=\"number\">-1</span>];</span><br><span class=\"line\">kx(<span class=\"number\">1</span>) = <span class=\"number\">1e-6</span>;</span><br><span class=\"line\">ky=kx;</span><br><span class=\"line\"></span><br><span class=\"line\">[X,Y]=<span class=\"built_in\">meshgrid</span>(x,y);</span><br><span class=\"line\">[KX,KY]=<span class=\"built_in\">meshgrid</span>(kx,ky);</span><br><span class=\"line\">K = KX.^<span class=\"number\">2</span>+KY.^<span class=\"number\">2</span>;</span><br><span class=\"line\">Kvec = <span class=\"built_in\">reshape</span>(K,n^<span class=\"number\">2</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">uint = <span class=\"built_in\">tanh</span>(<span class=\"built_in\">sqrt</span>(X.^<span class=\"number\">2</span>+Y.^<span class=\"number\">2</span>)).*<span class=\"built_in\">cos</span>(m*<span class=\"built_in\">angle</span>(X+<span class=\"built_in\">i</span>*Y)-(<span class=\"built_in\">sqrt</span>(X.^<span class=\"number\">2</span>+Y.^<span class=\"number\">2</span>)));<span class=\"comment\">%grid</span></span><br><span class=\"line\">vint = <span class=\"built_in\">tanh</span>(<span class=\"built_in\">sqrt</span>(X.^<span class=\"number\">2</span>+Y.^<span class=\"number\">2</span>)).*<span class=\"built_in\">sin</span>(m*<span class=\"built_in\">angle</span>(X+<span class=\"built_in\">i</span>*Y)-(<span class=\"built_in\">sqrt</span>(X.^<span class=\"number\">2</span>+Y.^<span class=\"number\">2</span>)));</span><br><span class=\"line\">ufint = fft2(uint);</span><br><span class=\"line\">vfint = fft2(vint);</span><br><span class=\"line\">ufvecint = <span class=\"built_in\">reshape</span>(ufint,n^<span class=\"number\">2</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">vfvecint = <span class=\"built_in\">reshape</span>(vfint,n^<span class=\"number\">2</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">xfvecint = [ufvecint;vfvecint];</span><br><span class=\"line\"></span><br><span class=\"line\">[t,xfsol] = ode45(@(t,xfvec) rds_fft(t,xfvec,<span class=\"built_in\">beta</span>,Kvec,n,d1,d2),tspan,xfvecint);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rhs</span> = <span class=\"title\">rds_fft</span><span class=\"params\">(t,xfvec,beta,Kvec,n,d1,d2)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ufvec = xfvec(<span class=\"number\">1</span>:n^<span class=\"number\">2</span>);</span><br><span class=\"line\">vfvec = xfvec(n^<span class=\"number\">2</span>+<span class=\"number\">1</span>:<span class=\"keyword\">end</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">u = <span class=\"built_in\">real</span>(ifft2(<span class=\"built_in\">reshape</span>(ufvec,n,n)));</span><br><span class=\"line\">v = <span class=\"built_in\">real</span>(ifft2(<span class=\"built_in\">reshape</span>(vfvec,n,n)));</span><br><span class=\"line\">A = u.^<span class=\"number\">2</span>+v.^<span class=\"number\">2</span>;</span><br><span class=\"line\">l = <span class=\"number\">1</span>-A;</span><br><span class=\"line\">w = -<span class=\"built_in\">beta</span>*A;</span><br><span class=\"line\"></span><br><span class=\"line\">uft = <span class=\"built_in\">reshape</span>(fft2(l.*u-w.*v),n^<span class=\"number\">2</span>,<span class=\"number\">1</span>)-d1*Kvec.*ufvec;</span><br><span class=\"line\">vft = <span class=\"built_in\">reshape</span>(fft2(w.*u+l.*v),n^<span class=\"number\">2</span>,<span class=\"number\">1</span>)-d2*Kvec.*vfvec;</span><br><span class=\"line\"></span><br><span class=\"line\">rhs = [uft;vft];</span><br></pre></td></tr></table></figure>\n<p>The following is cheb method with n=30 and m=1</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">xsolvec</span> = <span class=\"title\">runrds_cheb</span><span class=\"params\">(tspan,L,n,beta,d1,d2,m)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">[D,x2] = cheb(n<span class=\"number\">-1</span>);</span><br><span class=\"line\">D2= D^<span class=\"number\">2</span>;</span><br><span class=\"line\">D2(<span class=\"number\">1</span>,:) = <span class=\"built_in\">zeros</span>(<span class=\"number\">1</span>,n);</span><br><span class=\"line\">D2(n,:) = <span class=\"built_in\">zeros</span>(<span class=\"number\">1</span>,n);<span class=\"comment\">%boundary should be 0</span></span><br><span class=\"line\">I = <span class=\"built_in\">eye</span>(<span class=\"built_in\">length</span>(D2));</span><br><span class=\"line\">Lap = kron(D2,I)+kron(I,D2);</span><br><span class=\"line\"></span><br><span class=\"line\">x = x2*L/<span class=\"number\">2</span>;</span><br><span class=\"line\">[X,Y]=<span class=\"built_in\">meshgrid</span>(x);</span><br><span class=\"line\"></span><br><span class=\"line\">uinit = <span class=\"built_in\">tanh</span>(<span class=\"built_in\">sqrt</span>(X.^<span class=\"number\">2</span>+Y.^<span class=\"number\">2</span>)).*<span class=\"built_in\">cos</span>(m*<span class=\"built_in\">angle</span>(X+<span class=\"built_in\">i</span>*Y)-(<span class=\"built_in\">sqrt</span>(X.^<span class=\"number\">2</span>+Y.^<span class=\"number\">2</span>)));<span class=\"comment\">%grid</span></span><br><span class=\"line\">vinit = <span class=\"built_in\">tanh</span>(<span class=\"built_in\">sqrt</span>(X.^<span class=\"number\">2</span>+Y.^<span class=\"number\">2</span>)).*<span class=\"built_in\">sin</span>(m*<span class=\"built_in\">angle</span>(X+<span class=\"built_in\">i</span>*Y)-(<span class=\"built_in\">sqrt</span>(X.^<span class=\"number\">2</span>+Y.^<span class=\"number\">2</span>)));</span><br><span class=\"line\"></span><br><span class=\"line\">uvecinit = <span class=\"built_in\">reshape</span>(uinit,n^<span class=\"number\">2</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">vvecinit = <span class=\"built_in\">reshape</span>(vinit,n^<span class=\"number\">2</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">xvecinit = [uvecinit;vvecinit];</span><br><span class=\"line\"></span><br><span class=\"line\">[t,xsolvec] =ode45(@(t,xvec) rds_cheb(t,L,xvec,<span class=\"built_in\">beta</span>,Lap,n,d1,d2),tspan,xvecinit);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rhs</span> = <span class=\"title\">rds_cheb</span><span class=\"params\">(t,L,xvec,beta,Lap,n,d1,d2)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">uvec = xvec(<span class=\"number\">1</span>:n^<span class=\"number\">2</span>);</span><br><span class=\"line\">vvec = xvec(n^<span class=\"number\">2</span>+<span class=\"number\">1</span>:<span class=\"keyword\">end</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">Avec = uvec.^<span class=\"number\">2</span>+vvec.^<span class=\"number\">2</span>;</span><br><span class=\"line\">lvec = <span class=\"number\">1</span>-Avec;</span><br><span class=\"line\">wvec = -<span class=\"built_in\">beta</span>*Avec;</span><br><span class=\"line\"></span><br><span class=\"line\">ut = lvec.*uvec-wvec.*vvec+d1*<span class=\"number\">4</span>/L^<span class=\"number\">2</span>*Lap*uvec;</span><br><span class=\"line\">vt = wvec.*uvec+lvec.*vvec+d2*<span class=\"number\">4</span>/L^<span class=\"number\">2</span>*Lap*vvec;</span><br><span class=\"line\"></span><br><span class=\"line\">rhs = [ut;vt];</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjrcn2vlr0000ua5s3nkxee2j","category_id":"cjrcn2vly0003ua5swm5cnv35","_id":"cjrcn2vm5000cua5slcm0hsm1"},{"post_id":"cjrcn2vm30007ua5s1t9tukdn","category_id":"cjrcn2vly0003ua5swm5cnv35","_id":"cjrcn2vm7000fua5sukmnpab9"},{"post_id":"cjrcn2vlx0002ua5sm6mnt3u6","category_id":"cjrcn2vm30008ua5sybyxz56x","_id":"cjrcn2vm7000iua5sijezyxvt"},{"post_id":"cjrcn2vm00005ua5s4n04omeh","category_id":"cjrcn2vm30008ua5sybyxz56x","_id":"cjrcn2vm8000lua5shnz5wdqu"},{"post_id":"cjrcn2vm20006ua5sw03pnznz","category_id":"cjrcn2vm30008ua5sybyxz56x","_id":"cjrcn2vm9000nua5sf46a8oer"},{"post_id":"cjrcn2vru000sua5sl51zl7hv","category_id":"cjrcn2vm30008ua5sybyxz56x","_id":"cjrcn2vs4000yua5sd54i0rfm"},{"post_id":"cjrcn2vrx000uua5sry83chv5","category_id":"cjrcn2vs4000wua5svgpi0vja","_id":"cjrcn2vs60010ua5s29qldu5g"},{"post_id":"cjrcn2vtf0011ua5silomoslw","category_id":"cjrcn2vm30008ua5sybyxz56x","_id":"cjrcn2vtj0016ua5svpvkjni4"},{"post_id":"cjrcn2vtg0012ua5sd5rc6rqv","category_id":"cjrcn2vly0003ua5swm5cnv35","_id":"cjrcn2vtk0019ua5swiigc245"},{"post_id":"cjrcn2vti0014ua5sdr2dsw7s","category_id":"cjrcn2vs4000wua5svgpi0vja","_id":"cjrcn2vtk001bua5sdhs3rpew"}],"PostTag":[{"post_id":"cjrcn2vlr0000ua5s3nkxee2j","tag_id":"cjrcn2vm00004ua5s2lnc2eb8","_id":"cjrcn2vm4000aua5s3nlcpo32"},{"post_id":"cjrcn2vm30007ua5s1t9tukdn","tag_id":"cjrcn2vm00004ua5s2lnc2eb8","_id":"cjrcn2vm5000bua5sdarafbpu"},{"post_id":"cjrcn2vlx0002ua5sm6mnt3u6","tag_id":"cjrcn2vm40009ua5sgnuwnlwh","_id":"cjrcn2vm7000gua5s8xwg2rnh"},{"post_id":"cjrcn2vm00005ua5s4n04omeh","tag_id":"cjrcn2vm5000eua5spi4hthmc","_id":"cjrcn2vm8000kua5sdv26tzuk"},{"post_id":"cjrcn2vm20006ua5sw03pnznz","tag_id":"cjrcn2vm5000eua5spi4hthmc","_id":"cjrcn2vm9000pua5sosh7y811"},{"post_id":"cjrcn2vm20006ua5sw03pnznz","tag_id":"cjrcn2vm9000mua5sq5lmro91","_id":"cjrcn2vm9000qua5sawk4iy5i"},{"post_id":"cjrcn2vm20006ua5sw03pnznz","tag_id":"cjrcn2vm40009ua5sgnuwnlwh","_id":"cjrcn2vma000rua5s7v4p5m5h"},{"post_id":"cjrcn2vru000sua5sl51zl7hv","tag_id":"cjrcn2vm5000eua5spi4hthmc","_id":"cjrcn2vs2000vua5s7w3amthn"},{"post_id":"cjrcn2vru000sua5sl51zl7hv","tag_id":"cjrcn2vm9000mua5sq5lmro91","_id":"cjrcn2vs4000xua5s5mloiqmq"},{"post_id":"cjrcn2vru000sua5sl51zl7hv","tag_id":"cjrcn2vm40009ua5sgnuwnlwh","_id":"cjrcn2vs5000zua5sjydd73hu"},{"post_id":"cjrcn2vtf0011ua5silomoslw","tag_id":"cjrcn2vm5000eua5spi4hthmc","_id":"cjrcn2vth0013ua5sy6vabn4f"},{"post_id":"cjrcn2vtf0011ua5silomoslw","tag_id":"cjrcn2vm9000mua5sq5lmro91","_id":"cjrcn2vtj0015ua5suedbhn0r"},{"post_id":"cjrcn2vtf0011ua5silomoslw","tag_id":"cjrcn2vm40009ua5sgnuwnlwh","_id":"cjrcn2vtk0018ua5s085ntqoz"},{"post_id":"cjrcn2vtg0012ua5sd5rc6rqv","tag_id":"cjrcn2vm00004ua5s2lnc2eb8","_id":"cjrcn2vtk001aua5s7y3qsvey"},{"post_id":"cjrcn2vti0014ua5sdr2dsw7s","tag_id":"cjrcn2vtk0017ua5sy06bzs96","_id":"cjrcn2vtl001cua5sgmkf776g"}],"Tag":[{"name":"oligo","_id":"cjrcn2vm00004ua5s2lnc2eb8"},{"name":"software","_id":"cjrcn2vm40009ua5sgnuwnlwh"},{"name":"Hyak","_id":"cjrcn2vm5000eua5spi4hthmc"},{"name":"ComputChem","_id":"cjrcn2vm9000mua5sq5lmro91"},{"name":"AMATH","_id":"cjrcn2vtk0017ua5sy06bzs96"}]}}